
(function(l, r) { if (!l || l.getElementById('livereloadscript')) return; r = l.createElement('script'); r.async = 1; r.src = '//' + (self.location.host || 'localhost').split(':')[0] + ':35729/livereload.js?snipver=1'; r.id = 'livereloadscript'; l.getElementsByTagName('head')[0].appendChild(r) })(self.document);
function _arrayLikeToArray(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
  return n;
}
function _arrayWithHoles(r) {
  if (Array.isArray(r)) return r;
}
function _arrayWithoutHoles(r) {
  if (Array.isArray(r)) return _arrayLikeToArray(r);
}
function _assertThisInitialized(e) {
  if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  return e;
}
function asyncGeneratorStep(n, t, e, r, o, a, c) {
  try {
    var i = n[a](c),
      u = i.value;
  } catch (n) {
    return void e(n);
  }
  i.done ? t(u) : Promise.resolve(u).then(r, o);
}
function _asyncToGenerator(n) {
  return function () {
    var t = this,
      e = arguments;
    return new Promise(function (r, o) {
      var a = n.apply(t, e);
      function _next(n) {
        asyncGeneratorStep(a, r, o, _next, _throw, "next", n);
      }
      function _throw(n) {
        asyncGeneratorStep(a, r, o, _next, _throw, "throw", n);
      }
      _next(void 0);
    });
  };
}
function _callSuper(t, o, e) {
  return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
}
function _classCallCheck(a, n) {
  if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function");
}
function _defineProperties(e, r) {
  for (var t = 0; t < r.length; t++) {
    var o = r[t];
    o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o);
  }
}
function _createClass(e, r, t) {
  return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", {
    writable: !1
  }), e;
}
function _createForOfIteratorHelper(r, e) {
  var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (!t) {
    if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) {
      t && (r = t);
      var n = 0,
        F = function () {};
      return {
        s: F,
        n: function () {
          return n >= r.length ? {
            done: !0
          } : {
            done: !1,
            value: r[n++]
          };
        },
        e: function (r) {
          throw r;
        },
        f: F
      };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var o,
    a = !0,
    u = !1;
  return {
    s: function () {
      t = t.call(r);
    },
    n: function () {
      var r = t.next();
      return a = r.done, r;
    },
    e: function (r) {
      u = !0, o = r;
    },
    f: function () {
      try {
        a || null == t.return || t.return();
      } finally {
        if (u) throw o;
      }
    }
  };
}
function _defineProperty(e, r, t) {
  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {
    value: t,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : e[r] = t, e;
}
function _getPrototypeOf(t) {
  return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) {
    return t.__proto__ || Object.getPrototypeOf(t);
  }, _getPrototypeOf(t);
}
function _inherits(t, e) {
  if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
  t.prototype = Object.create(e && e.prototype, {
    constructor: {
      value: t,
      writable: !0,
      configurable: !0
    }
  }), Object.defineProperty(t, "prototype", {
    writable: !1
  }), e && _setPrototypeOf(t, e);
}
function _isNativeReflectConstruct() {
  try {
    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
  } catch (t) {}
  return (_isNativeReflectConstruct = function () {
    return !!t;
  })();
}
function _iterableToArray(r) {
  if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);
}
function _iterableToArrayLimit(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e,
      n,
      i,
      u,
      a = [],
      f = !0,
      o = !1;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = !1;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);
    } catch (r) {
      o = !0, n = r;
    } finally {
      try {
        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function ownKeys$4(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function (r) {
      return Object.getOwnPropertyDescriptor(e, r).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread2(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys$4(Object(t), !0).forEach(function (r) {
      _defineProperty(e, r, t[r]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys$4(Object(t)).forEach(function (r) {
      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
    });
  }
  return e;
}
function _possibleConstructorReturn(t, e) {
  if (e && ("object" == typeof e || "function" == typeof e)) return e;
  if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
  return _assertThisInitialized(t);
}
function _regeneratorRuntime() {
  _regeneratorRuntime = function () {
    return e;
  };
  var t,
    e = {},
    r = Object.prototype,
    n = r.hasOwnProperty,
    o = Object.defineProperty || function (t, e, r) {
      t[e] = r.value;
    },
    i = "function" == typeof Symbol ? Symbol : {},
    a = i.iterator || "@@iterator",
    c = i.asyncIterator || "@@asyncIterator",
    u = i.toStringTag || "@@toStringTag";
  function define(t, e, r) {
    return Object.defineProperty(t, e, {
      value: r,
      enumerable: !0,
      configurable: !0,
      writable: !0
    }), t[e];
  }
  try {
    define({}, "");
  } catch (t) {
    define = function (t, e, r) {
      return t[e] = r;
    };
  }
  function wrap(t, e, r, n) {
    var i = e && e.prototype instanceof Generator ? e : Generator,
      a = Object.create(i.prototype),
      c = new Context(n || []);
    return o(a, "_invoke", {
      value: makeInvokeMethod(t, r, c)
    }), a;
  }
  function tryCatch(t, e, r) {
    try {
      return {
        type: "normal",
        arg: t.call(e, r)
      };
    } catch (t) {
      return {
        type: "throw",
        arg: t
      };
    }
  }
  e.wrap = wrap;
  var h = "suspendedStart",
    l = "suspendedYield",
    f = "executing",
    s = "completed",
    y = {};
  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}
  var p = {};
  define(p, a, function () {
    return this;
  });
  var d = Object.getPrototypeOf,
    v = d && d(d(values([])));
  v && v !== r && n.call(v, a) && (p = v);
  var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);
  function defineIteratorMethods(t) {
    ["next", "throw", "return"].forEach(function (e) {
      define(t, e, function (t) {
        return this._invoke(e, t);
      });
    });
  }
  function AsyncIterator(t, e) {
    function invoke(r, o, i, a) {
      var c = tryCatch(t[r], t, o);
      if ("throw" !== c.type) {
        var u = c.arg,
          h = u.value;
        return h && "object" == typeof h && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) {
          invoke("next", t, i, a);
        }, function (t) {
          invoke("throw", t, i, a);
        }) : e.resolve(h).then(function (t) {
          u.value = t, i(u);
        }, function (t) {
          return invoke("throw", t, i, a);
        });
      }
      a(c.arg);
    }
    var r;
    o(this, "_invoke", {
      value: function (t, n) {
        function callInvokeWithMethodAndArg() {
          return new e(function (e, r) {
            invoke(t, n, e, r);
          });
        }
        return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
      }
    });
  }
  function makeInvokeMethod(e, r, n) {
    var o = h;
    return function (i, a) {
      if (o === f) throw Error("Generator is already running");
      if (o === s) {
        if ("throw" === i) throw a;
        return {
          value: t,
          done: !0
        };
      }
      for (n.method = i, n.arg = a;;) {
        var c = n.delegate;
        if (c) {
          var u = maybeInvokeDelegate(c, n);
          if (u) {
            if (u === y) continue;
            return u;
          }
        }
        if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) {
          if (o === h) throw o = s, n.arg;
          n.dispatchException(n.arg);
        } else "return" === n.method && n.abrupt("return", n.arg);
        o = f;
        var p = tryCatch(e, r, n);
        if ("normal" === p.type) {
          if (o = n.done ? s : l, p.arg === y) continue;
          return {
            value: p.arg,
            done: n.done
          };
        }
        "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg);
      }
    };
  }
  function maybeInvokeDelegate(e, r) {
    var n = r.method,
      o = e.iterator[n];
    if (o === t) return r.delegate = null, "throw" === n && e.iterator.return && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y;
    var i = tryCatch(o, e.iterator, r.arg);
    if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y;
    var a = i.arg;
    return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y);
  }
  function pushTryEntry(t) {
    var e = {
      tryLoc: t[0]
    };
    1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);
  }
  function resetTryEntry(t) {
    var e = t.completion || {};
    e.type = "normal", delete e.arg, t.completion = e;
  }
  function Context(t) {
    this.tryEntries = [{
      tryLoc: "root"
    }], t.forEach(pushTryEntry, this), this.reset(!0);
  }
  function values(e) {
    if (e || "" === e) {
      var r = e[a];
      if (r) return r.call(e);
      if ("function" == typeof e.next) return e;
      if (!isNaN(e.length)) {
        var o = -1,
          i = function next() {
            for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next;
            return next.value = t, next.done = !0, next;
          };
        return i.next = i;
      }
    }
    throw new TypeError(typeof e + " is not iterable");
  }
  return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", {
    value: GeneratorFunctionPrototype,
    configurable: !0
  }), o(GeneratorFunctionPrototype, "constructor", {
    value: GeneratorFunction,
    configurable: !0
  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) {
    var e = "function" == typeof t && t.constructor;
    return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name));
  }, e.mark = function (t) {
    return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t;
  }, e.awrap = function (t) {
    return {
      __await: t
    };
  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () {
    return this;
  }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) {
    void 0 === i && (i = Promise);
    var a = new AsyncIterator(wrap(t, r, n, o), i);
    return e.isGeneratorFunction(r) ? a : a.next().then(function (t) {
      return t.done ? t.value : a.next();
    });
  }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () {
    return this;
  }), define(g, "toString", function () {
    return "[object Generator]";
  }), e.keys = function (t) {
    var e = Object(t),
      r = [];
    for (var n in e) r.push(n);
    return r.reverse(), function next() {
      for (; r.length;) {
        var t = r.pop();
        if (t in e) return next.value = t, next.done = !1, next;
      }
      return next.done = !0, next;
    };
  }, e.values = values, Context.prototype = {
    constructor: Context,
    reset: function (e) {
      if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t);
    },
    stop: function () {
      this.done = !0;
      var t = this.tryEntries[0].completion;
      if ("throw" === t.type) throw t.arg;
      return this.rval;
    },
    dispatchException: function (e) {
      if (this.done) throw e;
      var r = this;
      function handle(n, o) {
        return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o;
      }
      for (var o = this.tryEntries.length - 1; o >= 0; --o) {
        var i = this.tryEntries[o],
          a = i.completion;
        if ("root" === i.tryLoc) return handle("end");
        if (i.tryLoc <= this.prev) {
          var c = n.call(i, "catchLoc"),
            u = n.call(i, "finallyLoc");
          if (c && u) {
            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);
            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);
          } else if (c) {
            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);
          } else {
            if (!u) throw Error("try statement without catch or finally");
            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);
          }
        }
      }
    },
    abrupt: function (t, e) {
      for (var r = this.tryEntries.length - 1; r >= 0; --r) {
        var o = this.tryEntries[r];
        if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
          var i = o;
          break;
        }
      }
      i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
      var a = i ? i.completion : {};
      return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a);
    },
    complete: function (t, e) {
      if ("throw" === t.type) throw t.arg;
      return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y;
    },
    finish: function (t) {
      for (var e = this.tryEntries.length - 1; e >= 0; --e) {
        var r = this.tryEntries[e];
        if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y;
      }
    },
    catch: function (t) {
      for (var e = this.tryEntries.length - 1; e >= 0; --e) {
        var r = this.tryEntries[e];
        if (r.tryLoc === t) {
          var n = r.completion;
          if ("throw" === n.type) {
            var o = n.arg;
            resetTryEntry(r);
          }
          return o;
        }
      }
      throw Error("illegal catch attempt");
    },
    delegateYield: function (e, r, n) {
      return this.delegate = {
        iterator: values(e),
        resultName: r,
        nextLoc: n
      }, "next" === this.method && (this.arg = t), y;
    }
  }, e;
}
function _setPrototypeOf(t, e) {
  return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) {
    return t.__proto__ = e, t;
  }, _setPrototypeOf(t, e);
}
function _slicedToArray(r, e) {
  return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest();
}
function _toConsumableArray(r) {
  return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread();
}
function _toPrimitive(t, r) {
  if ("object" != typeof t || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != typeof i) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
function _toPropertyKey(t) {
  var i = _toPrimitive(t, "string");
  return "symbol" == typeof i ? i : i + "";
}
function _typeof(o) {
  "@babel/helpers - typeof";

  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) {
    return typeof o;
  } : function (o) {
    return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
  }, _typeof(o);
}
function _unsupportedIterableToArray(r, a) {
  if (r) {
    if ("string" == typeof r) return _arrayLikeToArray(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;
  }
}

var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

var runtime = {exports: {}};

(function (module) {
  var runtime = function (exports) {

    var Op = Object.prototype;
    var hasOwn = Op.hasOwnProperty;
    var defineProperty = Object.defineProperty || function (obj, key, desc) {
      obj[key] = desc.value;
    };
    var undefined$1; // More compressible than void 0.
    var $Symbol = typeof Symbol === "function" ? Symbol : {};
    var iteratorSymbol = $Symbol.iterator || "@@iterator";
    var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
    var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";
    function define(obj, key, value) {
      Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
      });
      return obj[key];
    }
    try {
      // IE 8 has a broken Object.defineProperty that only works on DOM objects.
      define({}, "");
    } catch (err) {
      define = function define(obj, key, value) {
        return obj[key] = value;
      };
    }
    function wrap(innerFn, outerFn, self, tryLocsList) {
      // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
      var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
      var generator = Object.create(protoGenerator.prototype);
      var context = new Context(tryLocsList || []);

      // The ._invoke method unifies the implementations of the .next,
      // .throw, and .return methods.
      defineProperty(generator, "_invoke", {
        value: makeInvokeMethod(innerFn, self, context)
      });
      return generator;
    }
    exports.wrap = wrap;

    // Try/catch helper to minimize deoptimizations. Returns a completion
    // record like context.tryEntries[i].completion. This interface could
    // have been (and was previously) designed to take a closure to be
    // invoked without arguments, but in all the cases we care about we
    // already have an existing method we want to call, so there's no need
    // to create a new function object. We can even get away with assuming
    // the method takes exactly one argument, since that happens to be true
    // in every case, so we don't have to touch the arguments object. The
    // only additional allocation required is the completion record, which
    // has a stable shape and so hopefully should be cheap to allocate.
    function tryCatch(fn, obj, arg) {
      try {
        return {
          type: "normal",
          arg: fn.call(obj, arg)
        };
      } catch (err) {
        return {
          type: "throw",
          arg: err
        };
      }
    }
    var GenStateSuspendedStart = "suspendedStart";
    var GenStateSuspendedYield = "suspendedYield";
    var GenStateExecuting = "executing";
    var GenStateCompleted = "completed";

    // Returning this object from the innerFn has the same effect as
    // breaking out of the dispatch switch statement.
    var ContinueSentinel = {};

    // Dummy constructor functions that we use as the .constructor and
    // .constructor.prototype properties for functions that return Generator
    // objects. For full spec compliance, you may wish to configure your
    // minifier not to mangle the names of these two functions.
    function Generator() {}
    function GeneratorFunction() {}
    function GeneratorFunctionPrototype() {}

    // This is a polyfill for %IteratorPrototype% for environments that
    // don't natively support it.
    var IteratorPrototype = {};
    define(IteratorPrototype, iteratorSymbol, function () {
      return this;
    });
    var getProto = Object.getPrototypeOf;
    var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
    if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
      // This environment has a native %IteratorPrototype%; use it instead
      // of the polyfill.
      IteratorPrototype = NativeIteratorPrototype;
    }
    var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);
    GeneratorFunction.prototype = GeneratorFunctionPrototype;
    defineProperty(Gp, "constructor", {
      value: GeneratorFunctionPrototype,
      configurable: true
    });
    defineProperty(GeneratorFunctionPrototype, "constructor", {
      value: GeneratorFunction,
      configurable: true
    });
    GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction");

    // Helper for defining the .next, .throw, and .return methods of the
    // Iterator interface in terms of a single ._invoke method.
    function defineIteratorMethods(prototype) {
      ["next", "throw", "return"].forEach(function (method) {
        define(prototype, method, function (arg) {
          return this._invoke(method, arg);
        });
      });
    }
    exports.isGeneratorFunction = function (genFun) {
      var ctor = typeof genFun === "function" && genFun.constructor;
      return ctor ? ctor === GeneratorFunction ||
      // For the native GeneratorFunction constructor, the best we can
      // do is to check its .name property.
      (ctor.displayName || ctor.name) === "GeneratorFunction" : false;
    };
    exports.mark = function (genFun) {
      if (Object.setPrototypeOf) {
        Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
      } else {
        genFun.__proto__ = GeneratorFunctionPrototype;
        define(genFun, toStringTagSymbol, "GeneratorFunction");
      }
      genFun.prototype = Object.create(Gp);
      return genFun;
    };

    // Within the body of any async function, `await x` is transformed to
    // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
    // `hasOwn.call(value, "__await")` to determine if the yielded value is
    // meant to be awaited.
    exports.awrap = function (arg) {
      return {
        __await: arg
      };
    };
    function AsyncIterator(generator, PromiseImpl) {
      function invoke(method, arg, resolve, reject) {
        var record = tryCatch(generator[method], generator, arg);
        if (record.type === "throw") {
          reject(record.arg);
        } else {
          var result = record.arg;
          var value = result.value;
          if (value && _typeof(value) === "object" && hasOwn.call(value, "__await")) {
            return PromiseImpl.resolve(value.__await).then(function (value) {
              invoke("next", value, resolve, reject);
            }, function (err) {
              invoke("throw", err, resolve, reject);
            });
          }
          return PromiseImpl.resolve(value).then(function (unwrapped) {
            // When a yielded Promise is resolved, its final value becomes
            // the .value of the Promise<{value,done}> result for the
            // current iteration.
            result.value = unwrapped;
            resolve(result);
          }, function (error) {
            // If a rejected Promise was yielded, throw the rejection back
            // into the async generator function so it can be handled there.
            return invoke("throw", error, resolve, reject);
          });
        }
      }
      var previousPromise;
      function enqueue(method, arg) {
        function callInvokeWithMethodAndArg() {
          return new PromiseImpl(function (resolve, reject) {
            invoke(method, arg, resolve, reject);
          });
        }
        return previousPromise =
        // If enqueue has been called before, then we want to wait until
        // all previous Promises have been resolved before calling invoke,
        // so that results are always delivered in the correct order. If
        // enqueue has not been called before, then it is important to
        // call invoke immediately, without waiting on a callback to fire,
        // so that the async generator function has the opportunity to do
        // any necessary setup in a predictable way. This predictability
        // is why the Promise constructor synchronously invokes its
        // executor callback, and why async functions synchronously
        // execute code before the first await. Since we implement simple
        // async functions in terms of async generators, it is especially
        // important to get this right, even though it requires care.
        previousPromise ? previousPromise.then(callInvokeWithMethodAndArg,
        // Avoid propagating failures to Promises returned by later
        // invocations of the iterator.
        callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
      }

      // Define the unified helper method that is used to implement .next,
      // .throw, and .return (see defineIteratorMethods).
      defineProperty(this, "_invoke", {
        value: enqueue
      });
    }
    defineIteratorMethods(AsyncIterator.prototype);
    define(AsyncIterator.prototype, asyncIteratorSymbol, function () {
      return this;
    });
    exports.AsyncIterator = AsyncIterator;

    // Note that simple async functions are implemented on top of
    // AsyncIterator objects; they just return a Promise for the value of
    // the final result produced by the iterator.
    exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {
      if (PromiseImpl === void 0) PromiseImpl = Promise;
      var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);
      return exports.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.
      : iter.next().then(function (result) {
        return result.done ? result.value : iter.next();
      });
    };
    function makeInvokeMethod(innerFn, self, context) {
      var state = GenStateSuspendedStart;
      return function invoke(method, arg) {
        if (state === GenStateExecuting) {
          throw new Error("Generator is already running");
        }
        if (state === GenStateCompleted) {
          if (method === "throw") {
            throw arg;
          }

          // Be forgiving, per GeneratorResume behavior specified since ES2015:
          // ES2015 spec, step 3: https://262.ecma-international.org/6.0/#sec-generatorresume
          // Latest spec, step 2: https://tc39.es/ecma262/#sec-generatorresume
          return doneResult();
        }
        context.method = method;
        context.arg = arg;
        while (true) {
          var delegate = context.delegate;
          if (delegate) {
            var delegateResult = maybeInvokeDelegate(delegate, context);
            if (delegateResult) {
              if (delegateResult === ContinueSentinel) continue;
              return delegateResult;
            }
          }
          if (context.method === "next") {
            // Setting context._sent for legacy support of Babel's
            // function.sent implementation.
            context.sent = context._sent = context.arg;
          } else if (context.method === "throw") {
            if (state === GenStateSuspendedStart) {
              state = GenStateCompleted;
              throw context.arg;
            }
            context.dispatchException(context.arg);
          } else if (context.method === "return") {
            context.abrupt("return", context.arg);
          }
          state = GenStateExecuting;
          var record = tryCatch(innerFn, self, context);
          if (record.type === "normal") {
            // If an exception is thrown from innerFn, we leave state ===
            // GenStateExecuting and loop back for another invocation.
            state = context.done ? GenStateCompleted : GenStateSuspendedYield;
            if (record.arg === ContinueSentinel) {
              continue;
            }
            return {
              value: record.arg,
              done: context.done
            };
          } else if (record.type === "throw") {
            state = GenStateCompleted;
            // Dispatch the exception by looping back around to the
            // context.dispatchException(context.arg) call above.
            context.method = "throw";
            context.arg = record.arg;
          }
        }
      };
    }

    // Call delegate.iterator[context.method](context.arg) and handle the
    // result, either by returning a { value, done } result from the
    // delegate iterator, or by modifying context.method and context.arg,
    // setting context.delegate to null, and returning the ContinueSentinel.
    function maybeInvokeDelegate(delegate, context) {
      var methodName = context.method;
      var method = delegate.iterator[methodName];
      if (method === undefined$1) {
        // A .throw or .return when the delegate iterator has no .throw
        // method, or a missing .next method, always terminate the
        // yield* loop.
        context.delegate = null;

        // Note: ["return"] must be used for ES3 parsing compatibility.
        if (methodName === "throw" && delegate.iterator["return"]) {
          // If the delegate iterator has a return method, give it a
          // chance to clean up.
          context.method = "return";
          context.arg = undefined$1;
          maybeInvokeDelegate(delegate, context);
          if (context.method === "throw") {
            // If maybeInvokeDelegate(context) changed context.method from
            // "return" to "throw", let that override the TypeError below.
            return ContinueSentinel;
          }
        }
        if (methodName !== "return") {
          context.method = "throw";
          context.arg = new TypeError("The iterator does not provide a '" + methodName + "' method");
        }
        return ContinueSentinel;
      }
      var record = tryCatch(method, delegate.iterator, context.arg);
      if (record.type === "throw") {
        context.method = "throw";
        context.arg = record.arg;
        context.delegate = null;
        return ContinueSentinel;
      }
      var info = record.arg;
      if (!info) {
        context.method = "throw";
        context.arg = new TypeError("iterator result is not an object");
        context.delegate = null;
        return ContinueSentinel;
      }
      if (info.done) {
        // Assign the result of the finished delegate to the temporary
        // variable specified by delegate.resultName (see delegateYield).
        context[delegate.resultName] = info.value;

        // Resume execution at the desired location (see delegateYield).
        context.next = delegate.nextLoc;

        // If context.method was "throw" but the delegate handled the
        // exception, let the outer generator proceed normally. If
        // context.method was "next", forget context.arg since it has been
        // "consumed" by the delegate iterator. If context.method was
        // "return", allow the original .return call to continue in the
        // outer generator.
        if (context.method !== "return") {
          context.method = "next";
          context.arg = undefined$1;
        }
      } else {
        // Re-yield the result returned by the delegate method.
        return info;
      }

      // The delegate iterator is finished, so forget it and continue with
      // the outer generator.
      context.delegate = null;
      return ContinueSentinel;
    }

    // Define Generator.prototype.{next,throw,return} in terms of the
    // unified ._invoke helper method.
    defineIteratorMethods(Gp);
    define(Gp, toStringTagSymbol, "Generator");

    // A Generator should always return itself as the iterator object when the
    // @@iterator function is called on it. Some browsers' implementations of the
    // iterator prototype chain incorrectly implement this, causing the Generator
    // object to not be returned from this call. This ensures that doesn't happen.
    // See https://github.com/facebook/regenerator/issues/274 for more details.
    define(Gp, iteratorSymbol, function () {
      return this;
    });
    define(Gp, "toString", function () {
      return "[object Generator]";
    });
    function pushTryEntry(locs) {
      var entry = {
        tryLoc: locs[0]
      };
      if (1 in locs) {
        entry.catchLoc = locs[1];
      }
      if (2 in locs) {
        entry.finallyLoc = locs[2];
        entry.afterLoc = locs[3];
      }
      this.tryEntries.push(entry);
    }
    function resetTryEntry(entry) {
      var record = entry.completion || {};
      record.type = "normal";
      delete record.arg;
      entry.completion = record;
    }
    function Context(tryLocsList) {
      // The root entry object (effectively a try statement without a catch
      // or a finally block) gives us a place to store values thrown from
      // locations where there is no enclosing try statement.
      this.tryEntries = [{
        tryLoc: "root"
      }];
      tryLocsList.forEach(pushTryEntry, this);
      this.reset(true);
    }
    exports.keys = function (val) {
      var object = Object(val);
      var keys = [];
      for (var key in object) {
        keys.push(key);
      }
      keys.reverse();

      // Rather than returning an object with a next method, we keep
      // things simple and return the next function itself.
      return function next() {
        while (keys.length) {
          var key = keys.pop();
          if (key in object) {
            next.value = key;
            next.done = false;
            return next;
          }
        }

        // To avoid creating an additional object, we just hang the .value
        // and .done properties off the next function object itself. This
        // also ensures that the minifier will not anonymize the function.
        next.done = true;
        return next;
      };
    };
    function values(iterable) {
      if (iterable != null) {
        var iteratorMethod = iterable[iteratorSymbol];
        if (iteratorMethod) {
          return iteratorMethod.call(iterable);
        }
        if (typeof iterable.next === "function") {
          return iterable;
        }
        if (!isNaN(iterable.length)) {
          var i = -1,
            next = function next() {
              while (++i < iterable.length) {
                if (hasOwn.call(iterable, i)) {
                  next.value = iterable[i];
                  next.done = false;
                  return next;
                }
              }
              next.value = undefined$1;
              next.done = true;
              return next;
            };
          return next.next = next;
        }
      }
      throw new TypeError(_typeof(iterable) + " is not iterable");
    }
    exports.values = values;
    function doneResult() {
      return {
        value: undefined$1,
        done: true
      };
    }
    Context.prototype = {
      constructor: Context,
      reset: function reset(skipTempReset) {
        this.prev = 0;
        this.next = 0;
        // Resetting context._sent for legacy support of Babel's
        // function.sent implementation.
        this.sent = this._sent = undefined$1;
        this.done = false;
        this.delegate = null;
        this.method = "next";
        this.arg = undefined$1;
        this.tryEntries.forEach(resetTryEntry);
        if (!skipTempReset) {
          for (var name in this) {
            // Not sure about the optimal order of these conditions:
            if (name.charAt(0) === "t" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {
              this[name] = undefined$1;
            }
          }
        }
      },
      stop: function stop() {
        this.done = true;
        var rootEntry = this.tryEntries[0];
        var rootRecord = rootEntry.completion;
        if (rootRecord.type === "throw") {
          throw rootRecord.arg;
        }
        return this.rval;
      },
      dispatchException: function dispatchException(exception) {
        if (this.done) {
          throw exception;
        }
        var context = this;
        function handle(loc, caught) {
          record.type = "throw";
          record.arg = exception;
          context.next = loc;
          if (caught) {
            // If the dispatched exception was caught by a catch block,
            // then let that catch block handle the exception normally.
            context.method = "next";
            context.arg = undefined$1;
          }
          return !!caught;
        }
        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];
          var record = entry.completion;
          if (entry.tryLoc === "root") {
            // Exception thrown outside of any try block that could handle
            // it, so set the completion value of the entire function to
            // throw the exception.
            return handle("end");
          }
          if (entry.tryLoc <= this.prev) {
            var hasCatch = hasOwn.call(entry, "catchLoc");
            var hasFinally = hasOwn.call(entry, "finallyLoc");
            if (hasCatch && hasFinally) {
              if (this.prev < entry.catchLoc) {
                return handle(entry.catchLoc, true);
              } else if (this.prev < entry.finallyLoc) {
                return handle(entry.finallyLoc);
              }
            } else if (hasCatch) {
              if (this.prev < entry.catchLoc) {
                return handle(entry.catchLoc, true);
              }
            } else if (hasFinally) {
              if (this.prev < entry.finallyLoc) {
                return handle(entry.finallyLoc);
              }
            } else {
              throw new Error("try statement without catch or finally");
            }
          }
        }
      },
      abrupt: function abrupt(type, arg) {
        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];
          if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) {
            var finallyEntry = entry;
            break;
          }
        }
        if (finallyEntry && (type === "break" || type === "continue") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {
          // Ignore the finally entry if control is not jumping to a
          // location outside the try/catch block.
          finallyEntry = null;
        }
        var record = finallyEntry ? finallyEntry.completion : {};
        record.type = type;
        record.arg = arg;
        if (finallyEntry) {
          this.method = "next";
          this.next = finallyEntry.finallyLoc;
          return ContinueSentinel;
        }
        return this.complete(record);
      },
      complete: function complete(record, afterLoc) {
        if (record.type === "throw") {
          throw record.arg;
        }
        if (record.type === "break" || record.type === "continue") {
          this.next = record.arg;
        } else if (record.type === "return") {
          this.rval = this.arg = record.arg;
          this.method = "return";
          this.next = "end";
        } else if (record.type === "normal" && afterLoc) {
          this.next = afterLoc;
        }
        return ContinueSentinel;
      },
      finish: function finish(finallyLoc) {
        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];
          if (entry.finallyLoc === finallyLoc) {
            this.complete(entry.completion, entry.afterLoc);
            resetTryEntry(entry);
            return ContinueSentinel;
          }
        }
      },
      "catch": function _catch(tryLoc) {
        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
          var entry = this.tryEntries[i];
          if (entry.tryLoc === tryLoc) {
            var record = entry.completion;
            if (record.type === "throw") {
              var thrown = record.arg;
              resetTryEntry(entry);
            }
            return thrown;
          }
        }

        // The context.catch method must only be called with a location
        // argument that corresponds to a known catch block.
        throw new Error("illegal catch attempt");
      },
      delegateYield: function delegateYield(iterable, resultName, nextLoc) {
        this.delegate = {
          iterator: values(iterable),
          resultName: resultName,
          nextLoc: nextLoc
        };
        if (this.method === "next") {
          // Deliberately forget the last sent value so that we don't
          // accidentally pass it on to the delegate.
          this.arg = undefined$1;
        }
        return ContinueSentinel;
      }
    };

    // Regardless of whether this script is executing as a CommonJS module
    // or not, return the runtime object so that we can declare the variable
    // regeneratorRuntime in the outer scope, which allows this module to be
    // injected easily by `bin/regenerator --include-runtime script.js`.
    return exports;
  }(
  // If this script is executing as a CommonJS module, use module.exports
  // as the regeneratorRuntime namespace. Otherwise create a new empty
  // object. Either way, the resulting object will be used to initialize
  // the regeneratorRuntime variable at the top of this file.
  module.exports );
  try {
    regeneratorRuntime = runtime;
  } catch (accidentalStrictMode) {
    // This module should not be running in strict mode, so the above
    // assignment should always work unless something is misconfigured. Just
    // in case runtime.js accidentally runs in strict mode, in modern engines
    // we can explicitly access globalThis. In older engines we can escape
    // strict mode using a global Function call. This could conceivably fail
    // if a Content Security Policy forbids using Function, but in that case
    // the proper solution is to fix the accidental strict mode problem. If
    // you've misconfigured your bundler to force strict mode and applied a
    // CSP to forbid Function, and you're not willing to fix either of those
    // problems, please detail your unique predicament in a GitHub issue.
    if ((typeof globalThis === "undefined" ? "undefined" : _typeof(globalThis)) === "object") {
      globalThis.regeneratorRuntime = runtime;
    } else {
      Function("r", "regeneratorRuntime = r")(runtime);
    }
  }
})(runtime);

var check = function check(it) {
  return it && it.Math === Math && it;
};

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global$10 =
// eslint-disable-next-line es/no-global-this -- safe
check((typeof globalThis === "undefined" ? "undefined" : _typeof(globalThis)) == 'object' && globalThis) || check((typeof window === "undefined" ? "undefined" : _typeof(window)) == 'object' && window) ||
// eslint-disable-next-line no-restricted-globals -- safe
check((typeof self === "undefined" ? "undefined" : _typeof(self)) == 'object' && self) || check(_typeof(commonjsGlobal) == 'object' && commonjsGlobal) || check(_typeof(commonjsGlobal) == 'object' && commonjsGlobal) ||
// eslint-disable-next-line no-new-func -- fallback
function () {
  return this;
}() || Function('return this')();

var objectGetOwnPropertyDescriptor = {};

var fails$1t = function fails(exec) {
  try {
    return !!exec();
  } catch (error) {
    return true;
  }
};

var fails$1s = fails$1t;

// Detect IE8's incomplete defineProperty implementation
var descriptors = !fails$1s(function () {
  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
  return Object.defineProperty({}, 1, {
    get: function get() {
      return 7;
    }
  })[1] !== 7;
});

var fails$1r = fails$1t;
var functionBindNative = !fails$1r(function () {
  // eslint-disable-next-line es/no-function-prototype-bind -- safe
  var test = function () {/* empty */}.bind();
  // eslint-disable-next-line no-prototype-builtins -- safe
  return typeof test != 'function' || test.hasOwnProperty('prototype');
});

var NATIVE_BIND$4 = functionBindNative;
var call$H = Function.prototype.call;
var functionCall = NATIVE_BIND$4 ? call$H.bind(call$H) : function () {
  return call$H.apply(call$H, arguments);
};

var objectPropertyIsEnumerable = {};

var $propertyIsEnumerable$2 = {}.propertyIsEnumerable;
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var getOwnPropertyDescriptor$9 = Object.getOwnPropertyDescriptor;

// Nashorn ~ JDK8 bug
var NASHORN_BUG = getOwnPropertyDescriptor$9 && !$propertyIsEnumerable$2.call({
  1: 2
}, 1);

// `Object.prototype.propertyIsEnumerable` method implementation
// https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable
objectPropertyIsEnumerable.f = NASHORN_BUG ? function propertyIsEnumerable(V) {
  var descriptor = getOwnPropertyDescriptor$9(this, V);
  return !!descriptor && descriptor.enumerable;
} : $propertyIsEnumerable$2;

var createPropertyDescriptor$c = function createPropertyDescriptor(bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};

var NATIVE_BIND$3 = functionBindNative;
var FunctionPrototype$4 = Function.prototype;
var call$G = FunctionPrototype$4.call;
var uncurryThisWithBind = NATIVE_BIND$3 && FunctionPrototype$4.bind.bind(call$G, call$G);
var functionUncurryThis = NATIVE_BIND$3 ? uncurryThisWithBind : function (fn) {
  return function () {
    return call$G.apply(fn, arguments);
  };
};

var uncurryThis$1r = functionUncurryThis;
var toString$F = uncurryThis$1r({}.toString);
var stringSlice$i = uncurryThis$1r(''.slice);
var classofRaw$2 = function classofRaw(it) {
  return stringSlice$i(toString$F(it), 8, -1);
};

var uncurryThis$1q = functionUncurryThis;
var fails$1q = fails$1t;
var classof$o = classofRaw$2;
var $Object$5 = Object;
var split$3 = uncurryThis$1q(''.split);

// fallback for non-array-like ES3 and non-enumerable old V8 strings
var indexedObject = fails$1q(function () {
  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346
  // eslint-disable-next-line no-prototype-builtins -- safe
  return !$Object$5('z').propertyIsEnumerable(0);
}) ? function (it) {
  return classof$o(it) === 'String' ? split$3(it, '') : $Object$5(it);
} : $Object$5;

// we can't use just `it == null` since of `document.all` special case
// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot-aec
var isNullOrUndefined$e = function isNullOrUndefined(it) {
  return it === null || it === undefined;
};

var isNullOrUndefined$d = isNullOrUndefined$e;
var $TypeError$r = TypeError;

// `RequireObjectCoercible` abstract operation
// https://tc39.es/ecma262/#sec-requireobjectcoercible
var requireObjectCoercible$o = function requireObjectCoercible(it) {
  if (isNullOrUndefined$d(it)) throw new $TypeError$r("Can't call method on " + it);
  return it;
};

// toObject with fallback for non-array-like ES3 strings
var IndexedObject$5 = indexedObject;
var requireObjectCoercible$n = requireObjectCoercible$o;
var toIndexedObject$j = function toIndexedObject(it) {
  return IndexedObject$5(requireObjectCoercible$n(it));
};

// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot
var documentAll = (typeof document === "undefined" ? "undefined" : _typeof(document)) == 'object' && document.all;

// `IsCallable` abstract operation
// https://tc39.es/ecma262/#sec-iscallable
// eslint-disable-next-line unicorn/no-typeof-undefined -- required for testing
var isCallable$y = typeof documentAll == 'undefined' && documentAll !== undefined ? function (argument) {
  return typeof argument == 'function' || argument === documentAll;
} : function (argument) {
  return typeof argument == 'function';
};

var isCallable$x = isCallable$y;
var isObject$B = function isObject(it) {
  return _typeof(it) == 'object' ? it !== null : isCallable$x(it);
};

var global$$ = global$10;
var isCallable$w = isCallable$y;
var aFunction = function aFunction(argument) {
  return isCallable$w(argument) ? argument : undefined;
};
var getBuiltIn$r = function getBuiltIn(namespace, method) {
  return arguments.length < 2 ? aFunction(global$$[namespace]) : global$$[namespace] && global$$[namespace][method];
};

var uncurryThis$1p = functionUncurryThis;
var objectIsPrototypeOf = uncurryThis$1p({}.isPrototypeOf);

var engineUserAgent = typeof navigator != 'undefined' && String(navigator.userAgent) || '';

var global$_ = global$10;
var userAgent$6 = engineUserAgent;
var process$3 = global$_.process;
var Deno$1 = global$_.Deno;
var versions = process$3 && process$3.versions || Deno$1 && Deno$1.version;
var v8 = versions && versions.v8;
var match, version$1;
if (v8) {
  match = v8.split('.');
  // in old Chrome, versions of V8 isn't V8 = Chrome / 10
  // but their correct versions are not interesting for us
  version$1 = match[0] > 0 && match[0] < 4 ? 1 : +(match[0] + match[1]);
}

// BrowserFS NodeJS `process` polyfill incorrectly set `.v8` to `0.0`
// so check `userAgent` even if `.v8` exists, but 0
if (!version$1 && userAgent$6) {
  match = userAgent$6.match(/Edge\/(\d+)/);
  if (!match || match[1] >= 74) {
    match = userAgent$6.match(/Chrome\/(\d+)/);
    if (match) version$1 = +match[1];
  }
}
var engineV8Version = version$1;

/* eslint-disable es/no-symbol -- required for testing */
var V8_VERSION$3 = engineV8Version;
var fails$1p = fails$1t;
var global$Z = global$10;
var $String$8 = global$Z.String;

// eslint-disable-next-line es/no-object-getownpropertysymbols -- required for testing
var symbolConstructorDetection = !!Object.getOwnPropertySymbols && !fails$1p(function () {
  var symbol = Symbol('symbol detection');
  // Chrome 38 Symbol has incorrect toString conversion
  // `get-own-property-symbols` polyfill symbols converted to object are not Symbol instances
  // nb: Do not call `String` directly to avoid this being optimized out to `symbol+''` which will,
  // of course, fail.
  return !$String$8(symbol) || !(Object(symbol) instanceof Symbol) ||
  // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances
  !Symbol.sham && V8_VERSION$3 && V8_VERSION$3 < 41;
});

/* eslint-disable es/no-symbol -- required for testing */
var NATIVE_SYMBOL$6 = symbolConstructorDetection;
var useSymbolAsUid = NATIVE_SYMBOL$6 && !Symbol.sham && _typeof(Symbol.iterator) == 'symbol';

var getBuiltIn$q = getBuiltIn$r;
var isCallable$v = isCallable$y;
var isPrototypeOf$c = objectIsPrototypeOf;
var USE_SYMBOL_AS_UID$1 = useSymbolAsUid;
var $Object$4 = Object;
var isSymbol$7 = USE_SYMBOL_AS_UID$1 ? function (it) {
  return _typeof(it) == 'symbol';
} : function (it) {
  var $Symbol = getBuiltIn$q('Symbol');
  return isCallable$v($Symbol) && isPrototypeOf$c($Symbol.prototype, $Object$4(it));
};

var $String$7 = String;
var tryToString$7 = function tryToString(argument) {
  try {
    return $String$7(argument);
  } catch (error) {
    return 'Object';
  }
};

var isCallable$u = isCallable$y;
var tryToString$6 = tryToString$7;
var $TypeError$q = TypeError;

// `Assert: IsCallable(argument) is true`
var aCallable$o = function aCallable(argument) {
  if (isCallable$u(argument)) return argument;
  throw new $TypeError$q(tryToString$6(argument) + ' is not a function');
};

var aCallable$n = aCallable$o;
var isNullOrUndefined$c = isNullOrUndefined$e;

// `GetMethod` abstract operation
// https://tc39.es/ecma262/#sec-getmethod
var getMethod$9 = function getMethod(V, P) {
  var func = V[P];
  return isNullOrUndefined$c(func) ? undefined : aCallable$n(func);
};

var call$F = functionCall;
var isCallable$t = isCallable$y;
var isObject$A = isObject$B;
var $TypeError$p = TypeError;

// `OrdinaryToPrimitive` abstract operation
// https://tc39.es/ecma262/#sec-ordinarytoprimitive
var ordinaryToPrimitive$2 = function ordinaryToPrimitive(input, pref) {
  var fn, val;
  if (pref === 'string' && isCallable$t(fn = input.toString) && !isObject$A(val = call$F(fn, input))) return val;
  if (isCallable$t(fn = input.valueOf) && !isObject$A(val = call$F(fn, input))) return val;
  if (pref !== 'string' && isCallable$t(fn = input.toString) && !isObject$A(val = call$F(fn, input))) return val;
  throw new $TypeError$p("Can't convert object to primitive value");
};

var sharedStore = {exports: {}};

var isPure = false;

var global$Y = global$10;

// eslint-disable-next-line es/no-object-defineproperty -- safe
var defineProperty$e = Object.defineProperty;
var defineGlobalProperty$3 = function defineGlobalProperty(key, value) {
  try {
    defineProperty$e(global$Y, key, {
      value: value,
      configurable: true,
      writable: true
    });
  } catch (error) {
    global$Y[key] = value;
  }
  return value;
};

var globalThis$2 = global$10;
var defineGlobalProperty$2 = defineGlobalProperty$3;
var SHARED = '__core-js_shared__';
var store$3 = sharedStore.exports = globalThis$2[SHARED] || defineGlobalProperty$2(SHARED, {});
(store$3.versions || (store$3.versions = [])).push({
  version: '3.37.1',
  mode: 'global',
  copyright: '© 2014-2024 Denis Pushkarev (zloirock.ru)',
  license: 'https://github.com/zloirock/core-js/blob/v3.37.1/LICENSE',
  source: 'https://github.com/zloirock/core-js'
});
var sharedStoreExports = sharedStore.exports;

var store$2 = sharedStoreExports;
var shared$7 = function shared(key, value) {
  return store$2[key] || (store$2[key] = value || {});
};

var requireObjectCoercible$m = requireObjectCoercible$o;
var $Object$3 = Object;

// `ToObject` abstract operation
// https://tc39.es/ecma262/#sec-toobject
var toObject$t = function toObject(argument) {
  return $Object$3(requireObjectCoercible$m(argument));
};

var uncurryThis$1o = functionUncurryThis;
var toObject$s = toObject$t;
var hasOwnProperty = uncurryThis$1o({}.hasOwnProperty);

// `HasOwnProperty` abstract operation
// https://tc39.es/ecma262/#sec-hasownproperty
// eslint-disable-next-line es/no-object-hasown -- safe
var hasOwnProperty_1 = Object.hasOwn || function hasOwn(it, key) {
  return hasOwnProperty(toObject$s(it), key);
};

var uncurryThis$1n = functionUncurryThis;
var id$2 = 0;
var postfix = Math.random();
var toString$E = uncurryThis$1n(1.0.toString);
var uid$6 = function uid(key) {
  return 'Symbol(' + (key === undefined ? '' : key) + ')_' + toString$E(++id$2 + postfix, 36);
};

var global$X = global$10;
var shared$6 = shared$7;
var hasOwn$v = hasOwnProperty_1;
var uid$5 = uid$6;
var NATIVE_SYMBOL$5 = symbolConstructorDetection;
var USE_SYMBOL_AS_UID = useSymbolAsUid;
var _Symbol$2 = global$X.Symbol;
var WellKnownSymbolsStore$1 = shared$6('wks');
var createWellKnownSymbol = USE_SYMBOL_AS_UID ? _Symbol$2['for'] || _Symbol$2 : _Symbol$2 && _Symbol$2.withoutSetter || uid$5;
var wellKnownSymbol$z = function wellKnownSymbol(name) {
  if (!hasOwn$v(WellKnownSymbolsStore$1, name)) {
    WellKnownSymbolsStore$1[name] = NATIVE_SYMBOL$5 && hasOwn$v(_Symbol$2, name) ? _Symbol$2[name] : createWellKnownSymbol('Symbol.' + name);
  }
  return WellKnownSymbolsStore$1[name];
};

var call$E = functionCall;
var isObject$z = isObject$B;
var isSymbol$6 = isSymbol$7;
var getMethod$8 = getMethod$9;
var ordinaryToPrimitive$1 = ordinaryToPrimitive$2;
var wellKnownSymbol$y = wellKnownSymbol$z;
var $TypeError$o = TypeError;
var TO_PRIMITIVE$1 = wellKnownSymbol$y('toPrimitive');

// `ToPrimitive` abstract operation
// https://tc39.es/ecma262/#sec-toprimitive
var toPrimitive$4 = function toPrimitive(input, pref) {
  if (!isObject$z(input) || isSymbol$6(input)) return input;
  var exoticToPrim = getMethod$8(input, TO_PRIMITIVE$1);
  var result;
  if (exoticToPrim) {
    if (pref === undefined) pref = 'default';
    result = call$E(exoticToPrim, input, pref);
    if (!isObject$z(result) || isSymbol$6(result)) return result;
    throw new $TypeError$o("Can't convert object to primitive value");
  }
  if (pref === undefined) pref = 'number';
  return ordinaryToPrimitive$1(input, pref);
};

var toPrimitive$3 = toPrimitive$4;
var isSymbol$5 = isSymbol$7;

// `ToPropertyKey` abstract operation
// https://tc39.es/ecma262/#sec-topropertykey
var toPropertyKey$8 = function toPropertyKey(argument) {
  var key = toPrimitive$3(argument, 'string');
  return isSymbol$5(key) ? key : key + '';
};

var global$W = global$10;
var isObject$y = isObject$B;
var document$3 = global$W.document;
// typeof document.createElement is 'object' in old IE
var EXISTS$1 = isObject$y(document$3) && isObject$y(document$3.createElement);
var documentCreateElement$2 = function documentCreateElement(it) {
  return EXISTS$1 ? document$3.createElement(it) : {};
};

var DESCRIPTORS$N = descriptors;
var fails$1o = fails$1t;
var createElement$1 = documentCreateElement$2;

// Thanks to IE8 for its funny defineProperty
var ie8DomDefine = !DESCRIPTORS$N && !fails$1o(function () {
  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
  return Object.defineProperty(createElement$1('div'), 'a', {
    get: function get() {
      return 7;
    }
  }).a !== 7;
});

var DESCRIPTORS$M = descriptors;
var call$D = functionCall;
var propertyIsEnumerableModule$2 = objectPropertyIsEnumerable;
var createPropertyDescriptor$b = createPropertyDescriptor$c;
var toIndexedObject$i = toIndexedObject$j;
var toPropertyKey$7 = toPropertyKey$8;
var hasOwn$u = hasOwnProperty_1;
var IE8_DOM_DEFINE$1 = ie8DomDefine;

// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var $getOwnPropertyDescriptor$2 = Object.getOwnPropertyDescriptor;

// `Object.getOwnPropertyDescriptor` method
// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor
objectGetOwnPropertyDescriptor.f = DESCRIPTORS$M ? $getOwnPropertyDescriptor$2 : function getOwnPropertyDescriptor(O, P) {
  O = toIndexedObject$i(O);
  P = toPropertyKey$7(P);
  if (IE8_DOM_DEFINE$1) try {
    return $getOwnPropertyDescriptor$2(O, P);
  } catch (error) {/* empty */}
  if (hasOwn$u(O, P)) return createPropertyDescriptor$b(!call$D(propertyIsEnumerableModule$2.f, O, P), O[P]);
};

var objectDefineProperty = {};

var DESCRIPTORS$L = descriptors;
var fails$1n = fails$1t;

// V8 ~ Chrome 36-
// https://bugs.chromium.org/p/v8/issues/detail?id=3334
var v8PrototypeDefineBug = DESCRIPTORS$L && fails$1n(function () {
  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
  return Object.defineProperty(function () {/* empty */}, 'prototype', {
    value: 42,
    writable: false
  }).prototype !== 42;
});

var isObject$x = isObject$B;
var $String$6 = String;
var $TypeError$n = TypeError;

// `Assert: Type(argument) is Object`
var anObject$D = function anObject(argument) {
  if (isObject$x(argument)) return argument;
  throw new $TypeError$n($String$6(argument) + ' is not an object');
};

var DESCRIPTORS$K = descriptors;
var IE8_DOM_DEFINE = ie8DomDefine;
var V8_PROTOTYPE_DEFINE_BUG$1 = v8PrototypeDefineBug;
var anObject$C = anObject$D;
var toPropertyKey$6 = toPropertyKey$8;
var $TypeError$m = TypeError;
// eslint-disable-next-line es/no-object-defineproperty -- safe
var $defineProperty$1 = Object.defineProperty;
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var $getOwnPropertyDescriptor$1 = Object.getOwnPropertyDescriptor;
var ENUMERABLE = 'enumerable';
var CONFIGURABLE$1 = 'configurable';
var WRITABLE = 'writable';

// `Object.defineProperty` method
// https://tc39.es/ecma262/#sec-object.defineproperty
objectDefineProperty.f = DESCRIPTORS$K ? V8_PROTOTYPE_DEFINE_BUG$1 ? function defineProperty(O, P, Attributes) {
  anObject$C(O);
  P = toPropertyKey$6(P);
  anObject$C(Attributes);
  if (typeof O === 'function' && P === 'prototype' && 'value' in Attributes && WRITABLE in Attributes && !Attributes[WRITABLE]) {
    var current = $getOwnPropertyDescriptor$1(O, P);
    if (current && current[WRITABLE]) {
      O[P] = Attributes.value;
      Attributes = {
        configurable: CONFIGURABLE$1 in Attributes ? Attributes[CONFIGURABLE$1] : current[CONFIGURABLE$1],
        enumerable: ENUMERABLE in Attributes ? Attributes[ENUMERABLE] : current[ENUMERABLE],
        writable: false
      };
    }
  }
  return $defineProperty$1(O, P, Attributes);
} : $defineProperty$1 : function defineProperty(O, P, Attributes) {
  anObject$C(O);
  P = toPropertyKey$6(P);
  anObject$C(Attributes);
  if (IE8_DOM_DEFINE) try {
    return $defineProperty$1(O, P, Attributes);
  } catch (error) {/* empty */}
  if ('get' in Attributes || 'set' in Attributes) throw new $TypeError$m('Accessors not supported');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};

var DESCRIPTORS$J = descriptors;
var definePropertyModule$b = objectDefineProperty;
var createPropertyDescriptor$a = createPropertyDescriptor$c;
var createNonEnumerableProperty$f = DESCRIPTORS$J ? function (object, key, value) {
  return definePropertyModule$b.f(object, key, createPropertyDescriptor$a(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};

var makeBuiltIn$4 = {exports: {}};

var DESCRIPTORS$I = descriptors;
var hasOwn$t = hasOwnProperty_1;
var FunctionPrototype$3 = Function.prototype;
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var getDescriptor = DESCRIPTORS$I && Object.getOwnPropertyDescriptor;
var EXISTS = hasOwn$t(FunctionPrototype$3, 'name');
// additional protection from minified / mangled / dropped function names
var PROPER = EXISTS && function something() {/* empty */}.name === 'something';
var CONFIGURABLE = EXISTS && (!DESCRIPTORS$I || DESCRIPTORS$I && getDescriptor(FunctionPrototype$3, 'name').configurable);
var functionName = {
  EXISTS: EXISTS,
  PROPER: PROPER,
  CONFIGURABLE: CONFIGURABLE
};

var uncurryThis$1m = functionUncurryThis;
var isCallable$s = isCallable$y;
var store$1 = sharedStoreExports;
var functionToString$1 = uncurryThis$1m(Function.toString);

// this helper broken in `core-js@3.4.1-3.4.4`, so we can't use `shared` helper
if (!isCallable$s(store$1.inspectSource)) {
  store$1.inspectSource = function (it) {
    return functionToString$1(it);
  };
}
var inspectSource$3 = store$1.inspectSource;

var global$V = global$10;
var isCallable$r = isCallable$y;
var WeakMap$2 = global$V.WeakMap;
var weakMapBasicDetection = isCallable$r(WeakMap$2) && /native code/.test(String(WeakMap$2));

var shared$5 = shared$7;
var uid$4 = uid$6;
var keys$2 = shared$5('keys');
var sharedKey$4 = function sharedKey(key) {
  return keys$2[key] || (keys$2[key] = uid$4(key));
};

var hiddenKeys$6 = {};

var NATIVE_WEAK_MAP$1 = weakMapBasicDetection;
var global$U = global$10;
var isObject$w = isObject$B;
var createNonEnumerableProperty$e = createNonEnumerableProperty$f;
var hasOwn$s = hasOwnProperty_1;
var shared$4 = sharedStoreExports;
var sharedKey$3 = sharedKey$4;
var hiddenKeys$5 = hiddenKeys$6;
var OBJECT_ALREADY_INITIALIZED = 'Object already initialized';
var TypeError$9 = global$U.TypeError;
var WeakMap$1 = global$U.WeakMap;
var set$4, get$3, has$7;
var enforce = function enforce(it) {
  return has$7(it) ? get$3(it) : set$4(it, {});
};
var getterFor$1 = function getterFor(TYPE) {
  return function (it) {
    var state;
    if (!isObject$w(it) || (state = get$3(it)).type !== TYPE) {
      throw new TypeError$9('Incompatible receiver, ' + TYPE + ' required');
    }
    return state;
  };
};
if (NATIVE_WEAK_MAP$1 || shared$4.state) {
  var store = shared$4.state || (shared$4.state = new WeakMap$1());
  /* eslint-disable no-self-assign -- prototype methods protection */
  store.get = store.get;
  store.has = store.has;
  store.set = store.set;
  /* eslint-enable no-self-assign -- prototype methods protection */
  set$4 = function set(it, metadata) {
    if (store.has(it)) throw new TypeError$9(OBJECT_ALREADY_INITIALIZED);
    metadata.facade = it;
    store.set(it, metadata);
    return metadata;
  };
  get$3 = function get(it) {
    return store.get(it) || {};
  };
  has$7 = function has(it) {
    return store.has(it);
  };
} else {
  var STATE = sharedKey$3('state');
  hiddenKeys$5[STATE] = true;
  set$4 = function set(it, metadata) {
    if (hasOwn$s(it, STATE)) throw new TypeError$9(OBJECT_ALREADY_INITIALIZED);
    metadata.facade = it;
    createNonEnumerableProperty$e(it, STATE, metadata);
    return metadata;
  };
  get$3 = function get(it) {
    return hasOwn$s(it, STATE) ? it[STATE] : {};
  };
  has$7 = function has(it) {
    return hasOwn$s(it, STATE);
  };
}
var internalState = {
  set: set$4,
  get: get$3,
  has: has$7,
  enforce: enforce,
  getterFor: getterFor$1
};

var uncurryThis$1l = functionUncurryThis;
var fails$1m = fails$1t;
var isCallable$q = isCallable$y;
var hasOwn$r = hasOwnProperty_1;
var DESCRIPTORS$H = descriptors;
var CONFIGURABLE_FUNCTION_NAME$2 = functionName.CONFIGURABLE;
var inspectSource$2 = inspectSource$3;
var InternalStateModule$d = internalState;
var enforceInternalState$4 = InternalStateModule$d.enforce;
var getInternalState$a = InternalStateModule$d.get;
var $String$5 = String;
// eslint-disable-next-line es/no-object-defineproperty -- safe
var defineProperty$d = Object.defineProperty;
var stringSlice$h = uncurryThis$1l(''.slice);
var replace$c = uncurryThis$1l(''.replace);
var join$8 = uncurryThis$1l([].join);
var CONFIGURABLE_LENGTH = DESCRIPTORS$H && !fails$1m(function () {
  return defineProperty$d(function () {/* empty */}, 'length', {
    value: 8
  }).length !== 8;
});
var TEMPLATE = String(String).split('String');
var makeBuiltIn$3 = makeBuiltIn$4.exports = function (value, name, options) {
  if (stringSlice$h($String$5(name), 0, 7) === 'Symbol(') {
    name = '[' + replace$c($String$5(name), /^Symbol\(([^)]*)\).*$/, '$1') + ']';
  }
  if (options && options.getter) name = 'get ' + name;
  if (options && options.setter) name = 'set ' + name;
  if (!hasOwn$r(value, 'name') || CONFIGURABLE_FUNCTION_NAME$2 && value.name !== name) {
    if (DESCRIPTORS$H) defineProperty$d(value, 'name', {
      value: name,
      configurable: true
    });else value.name = name;
  }
  if (CONFIGURABLE_LENGTH && options && hasOwn$r(options, 'arity') && value.length !== options.arity) {
    defineProperty$d(value, 'length', {
      value: options.arity
    });
  }
  try {
    if (options && hasOwn$r(options, 'constructor') && options.constructor) {
      if (DESCRIPTORS$H) defineProperty$d(value, 'prototype', {
        writable: false
      });
      // in V8 ~ Chrome 53, prototypes of some methods, like `Array.prototype.values`, are non-writable
    } else if (value.prototype) value.prototype = undefined;
  } catch (error) {/* empty */}
  var state = enforceInternalState$4(value);
  if (!hasOwn$r(state, 'source')) {
    state.source = join$8(TEMPLATE, typeof name == 'string' ? name : '');
  }
  return value;
};

// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
// eslint-disable-next-line no-extend-native -- required
Function.prototype.toString = makeBuiltIn$3(function toString() {
  return isCallable$q(this) && getInternalState$a(this).source || inspectSource$2(this);
}, 'toString');
var makeBuiltInExports = makeBuiltIn$4.exports;

var isCallable$p = isCallable$y;
var definePropertyModule$a = objectDefineProperty;
var makeBuiltIn$2 = makeBuiltInExports;
var defineGlobalProperty$1 = defineGlobalProperty$3;
var defineBuiltIn$o = function defineBuiltIn(O, key, value, options) {
  if (!options) options = {};
  var simple = options.enumerable;
  var name = options.name !== undefined ? options.name : key;
  if (isCallable$p(value)) makeBuiltIn$2(value, name, options);
  if (options.global) {
    if (simple) O[key] = value;else defineGlobalProperty$1(key, value);
  } else {
    try {
      if (!options.unsafe) delete O[key];else if (O[key]) simple = true;
    } catch (error) {/* empty */}
    if (simple) O[key] = value;else definePropertyModule$a.f(O, key, {
      value: value,
      enumerable: false,
      configurable: !options.nonConfigurable,
      writable: !options.nonWritable
    });
  }
  return O;
};

var objectGetOwnPropertyNames = {};

var ceil$1 = Math.ceil;
var floor$a = Math.floor;

// `Math.trunc` method
// https://tc39.es/ecma262/#sec-math.trunc
// eslint-disable-next-line es/no-math-trunc -- safe
var mathTrunc = Math.trunc || function trunc(x) {
  var n = +x;
  return (n > 0 ? floor$a : ceil$1)(n);
};

var trunc$1 = mathTrunc;

// `ToIntegerOrInfinity` abstract operation
// https://tc39.es/ecma262/#sec-tointegerorinfinity
var toIntegerOrInfinity$m = function toIntegerOrInfinity(argument) {
  var number = +argument;
  // eslint-disable-next-line no-self-compare -- NaN check
  return number !== number || number === 0 ? 0 : trunc$1(number);
};

var toIntegerOrInfinity$l = toIntegerOrInfinity$m;
var max$7 = Math.max;
var min$b = Math.min;

// Helper for a popular repeating case of the spec:
// Let integer be ? ToInteger(index).
// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).
var toAbsoluteIndex$9 = function toAbsoluteIndex(index, length) {
  var integer = toIntegerOrInfinity$l(index);
  return integer < 0 ? max$7(integer + length, 0) : min$b(integer, length);
};

var toIntegerOrInfinity$k = toIntegerOrInfinity$m;
var min$a = Math.min;

// `ToLength` abstract operation
// https://tc39.es/ecma262/#sec-tolength
var toLength$d = function toLength(argument) {
  var len = toIntegerOrInfinity$k(argument);
  return len > 0 ? min$a(len, 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991
};

var toLength$c = toLength$d;

// `LengthOfArrayLike` abstract operation
// https://tc39.es/ecma262/#sec-lengthofarraylike
var lengthOfArrayLike$s = function lengthOfArrayLike(obj) {
  return toLength$c(obj.length);
};

var toIndexedObject$h = toIndexedObject$j;
var toAbsoluteIndex$8 = toAbsoluteIndex$9;
var lengthOfArrayLike$r = lengthOfArrayLike$s;

// `Array.prototype.{ indexOf, includes }` methods implementation
var createMethod$7 = function createMethod(IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIndexedObject$h($this);
    var length = lengthOfArrayLike$r(O);
    if (length === 0) return !IS_INCLUDES && -1;
    var index = toAbsoluteIndex$8(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare -- NaN check
    if (IS_INCLUDES && el !== el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare -- NaN check
      if (value !== value) return true;
      // Array#indexOf ignores holes, Array#includes - not
    } else for (; length > index; index++) {
      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;
    }
    return !IS_INCLUDES && -1;
  };
};
var arrayIncludes = {
  // `Array.prototype.includes` method
  // https://tc39.es/ecma262/#sec-array.prototype.includes
  includes: createMethod$7(true),
  // `Array.prototype.indexOf` method
  // https://tc39.es/ecma262/#sec-array.prototype.indexof
  indexOf: createMethod$7(false)
};

var uncurryThis$1k = functionUncurryThis;
var hasOwn$q = hasOwnProperty_1;
var toIndexedObject$g = toIndexedObject$j;
var indexOf$2 = arrayIncludes.indexOf;
var hiddenKeys$4 = hiddenKeys$6;
var push$h = uncurryThis$1k([].push);
var objectKeysInternal = function objectKeysInternal(object, names) {
  var O = toIndexedObject$g(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) !hasOwn$q(hiddenKeys$4, key) && hasOwn$q(O, key) && push$h(result, key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (hasOwn$q(O, key = names[i++])) {
    ~indexOf$2(result, key) || push$h(result, key);
  }
  return result;
};

// IE8- don't enum bug keys
var enumBugKeys$3 = ['constructor', 'hasOwnProperty', 'isPrototypeOf', 'propertyIsEnumerable', 'toLocaleString', 'toString', 'valueOf'];

var internalObjectKeys$1 = objectKeysInternal;
var enumBugKeys$2 = enumBugKeys$3;
var hiddenKeys$3 = enumBugKeys$2.concat('length', 'prototype');

// `Object.getOwnPropertyNames` method
// https://tc39.es/ecma262/#sec-object.getownpropertynames
// eslint-disable-next-line es/no-object-getownpropertynames -- safe
objectGetOwnPropertyNames.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return internalObjectKeys$1(O, hiddenKeys$3);
};

var objectGetOwnPropertySymbols = {};

// eslint-disable-next-line es/no-object-getownpropertysymbols -- safe
objectGetOwnPropertySymbols.f = Object.getOwnPropertySymbols;

var getBuiltIn$p = getBuiltIn$r;
var uncurryThis$1j = functionUncurryThis;
var getOwnPropertyNamesModule$2 = objectGetOwnPropertyNames;
var getOwnPropertySymbolsModule$3 = objectGetOwnPropertySymbols;
var anObject$B = anObject$D;
var concat$3 = uncurryThis$1j([].concat);

// all object keys, includes non-enumerable and symbols
var ownKeys$3 = getBuiltIn$p('Reflect', 'ownKeys') || function ownKeys(it) {
  var keys = getOwnPropertyNamesModule$2.f(anObject$B(it));
  var getOwnPropertySymbols = getOwnPropertySymbolsModule$3.f;
  return getOwnPropertySymbols ? concat$3(keys, getOwnPropertySymbols(it)) : keys;
};

var hasOwn$p = hasOwnProperty_1;
var ownKeys$2 = ownKeys$3;
var getOwnPropertyDescriptorModule$6 = objectGetOwnPropertyDescriptor;
var definePropertyModule$9 = objectDefineProperty;
var copyConstructorProperties$6 = function copyConstructorProperties(target, source, exceptions) {
  var keys = ownKeys$2(source);
  var defineProperty = definePropertyModule$9.f;
  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule$6.f;
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    if (!hasOwn$p(target, key) && !(exceptions && hasOwn$p(exceptions, key))) {
      defineProperty(target, key, getOwnPropertyDescriptor(source, key));
    }
  }
};

var fails$1l = fails$1t;
var isCallable$o = isCallable$y;
var replacement = /#|\.prototype\./;
var isForced$5 = function isForced(feature, detection) {
  var value = data[normalize(feature)];
  return value === POLYFILL ? true : value === NATIVE ? false : isCallable$o(detection) ? fails$1l(detection) : !!detection;
};
var normalize = isForced$5.normalize = function (string) {
  return String(string).replace(replacement, '.').toLowerCase();
};
var data = isForced$5.data = {};
var NATIVE = isForced$5.NATIVE = 'N';
var POLYFILL = isForced$5.POLYFILL = 'P';
var isForced_1 = isForced$5;

var global$T = global$10;
var getOwnPropertyDescriptor$8 = objectGetOwnPropertyDescriptor.f;
var createNonEnumerableProperty$d = createNonEnumerableProperty$f;
var defineBuiltIn$n = defineBuiltIn$o;
var defineGlobalProperty = defineGlobalProperty$3;
var copyConstructorProperties$5 = copyConstructorProperties$6;
var isForced$4 = isForced_1;

/*
  options.target         - name of the target object
  options.global         - target is the global object
  options.stat           - export as static methods of target
  options.proto          - export as prototype methods of target
  options.real           - real prototype method for the `pure` version
  options.forced         - export even if the native feature is available
  options.bind           - bind methods to the target, required for the `pure` version
  options.wrap           - wrap constructors to preventing global pollution, required for the `pure` version
  options.unsafe         - use the simple assignment of property instead of delete + defineProperty
  options.sham           - add a flag to not completely full polyfills
  options.enumerable     - export as enumerable property
  options.dontCallGetSet - prevent calling a getter on target
  options.name           - the .name of the function if it does not match the key
*/
var _export = function _export(options, source) {
  var TARGET = options.target;
  var GLOBAL = options.global;
  var STATIC = options.stat;
  var FORCED, target, key, targetProperty, sourceProperty, descriptor;
  if (GLOBAL) {
    target = global$T;
  } else if (STATIC) {
    target = global$T[TARGET] || defineGlobalProperty(TARGET, {});
  } else {
    target = global$T[TARGET] && global$T[TARGET].prototype;
  }
  if (target) for (key in source) {
    sourceProperty = source[key];
    if (options.dontCallGetSet) {
      descriptor = getOwnPropertyDescriptor$8(target, key);
      targetProperty = descriptor && descriptor.value;
    } else targetProperty = target[key];
    FORCED = isForced$4(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);
    // contained in target
    if (!FORCED && targetProperty !== undefined) {
      if (_typeof(sourceProperty) == _typeof(targetProperty)) continue;
      copyConstructorProperties$5(sourceProperty, targetProperty);
    }
    // add a flag to not completely full polyfills
    if (options.sham || targetProperty && targetProperty.sham) {
      createNonEnumerableProperty$d(sourceProperty, 'sham', true);
    }
    defineBuiltIn$n(target, key, sourceProperty, options);
  }
};

var wellKnownSymbol$x = wellKnownSymbol$z;
var TO_STRING_TAG$4 = wellKnownSymbol$x('toStringTag');
var test$2 = {};
test$2[TO_STRING_TAG$4] = 'z';
var toStringTagSupport = String(test$2) === '[object z]';

var TO_STRING_TAG_SUPPORT$2 = toStringTagSupport;
var isCallable$n = isCallable$y;
var classofRaw$1 = classofRaw$2;
var wellKnownSymbol$w = wellKnownSymbol$z;
var TO_STRING_TAG$3 = wellKnownSymbol$w('toStringTag');
var $Object$2 = Object;

// ES3 wrong here
var CORRECT_ARGUMENTS = classofRaw$1(function () {
  return arguments;
}()) === 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function tryGet(it, key) {
  try {
    return it[key];
  } catch (error) {/* empty */}
};

// getting tag from ES6+ `Object.prototype.toString`
var classof$n = TO_STRING_TAG_SUPPORT$2 ? classofRaw$1 : function (it) {
  var O, tag, result;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
  // @@toStringTag case
  : typeof (tag = tryGet(O = $Object$2(it), TO_STRING_TAG$3)) == 'string' ? tag
  // builtinTag case
  : CORRECT_ARGUMENTS ? classofRaw$1(O)
  // ES3 arguments fallback
  : (result = classofRaw$1(O)) === 'Object' && isCallable$n(O.callee) ? 'Arguments' : result;
};

var classof$m = classof$n;
var $String$4 = String;
var toString$D = function toString(argument) {
  if (classof$m(argument) === 'Symbol') throw new TypeError('Cannot convert a Symbol value to a string');
  return $String$4(argument);
};

var objectDefineProperties = {};

var internalObjectKeys = objectKeysInternal;
var enumBugKeys$1 = enumBugKeys$3;

// `Object.keys` method
// https://tc39.es/ecma262/#sec-object.keys
// eslint-disable-next-line es/no-object-keys -- safe
var objectKeys$5 = Object.keys || function keys(O) {
  return internalObjectKeys(O, enumBugKeys$1);
};

var DESCRIPTORS$G = descriptors;
var V8_PROTOTYPE_DEFINE_BUG = v8PrototypeDefineBug;
var definePropertyModule$8 = objectDefineProperty;
var anObject$A = anObject$D;
var toIndexedObject$f = toIndexedObject$j;
var objectKeys$4 = objectKeys$5;

// `Object.defineProperties` method
// https://tc39.es/ecma262/#sec-object.defineproperties
// eslint-disable-next-line es/no-object-defineproperties -- safe
objectDefineProperties.f = DESCRIPTORS$G && !V8_PROTOTYPE_DEFINE_BUG ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject$A(O);
  var props = toIndexedObject$f(Properties);
  var keys = objectKeys$4(Properties);
  var length = keys.length;
  var index = 0;
  var key;
  while (length > index) definePropertyModule$8.f(O, key = keys[index++], props[key]);
  return O;
};

var getBuiltIn$o = getBuiltIn$r;
var html$2 = getBuiltIn$o('document', 'documentElement');

/* global ActiveXObject -- old IE, WSH */
var anObject$z = anObject$D;
var definePropertiesModule$1 = objectDefineProperties;
var enumBugKeys = enumBugKeys$3;
var hiddenKeys$2 = hiddenKeys$6;
var html$1 = html$2;
var documentCreateElement$1 = documentCreateElement$2;
var sharedKey$2 = sharedKey$4;
var GT = '>';
var LT = '<';
var PROTOTYPE$2 = 'prototype';
var SCRIPT = 'script';
var IE_PROTO$1 = sharedKey$2('IE_PROTO');
var EmptyConstructor = function EmptyConstructor() {/* empty */};
var scriptTag = function scriptTag(content) {
  return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;
};

// Create object with fake `null` prototype: use ActiveX Object with cleared prototype
var NullProtoObjectViaActiveX = function NullProtoObjectViaActiveX(activeXDocument) {
  activeXDocument.write(scriptTag(''));
  activeXDocument.close();
  var temp = activeXDocument.parentWindow.Object;
  activeXDocument = null; // avoid memory leak
  return temp;
};

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var NullProtoObjectViaIFrame = function NullProtoObjectViaIFrame() {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = documentCreateElement$1('iframe');
  var JS = 'java' + SCRIPT + ':';
  var iframeDocument;
  iframe.style.display = 'none';
  html$1.appendChild(iframe);
  // https://github.com/zloirock/core-js/issues/475
  iframe.src = String(JS);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(scriptTag('document.F=Object'));
  iframeDocument.close();
  return iframeDocument.F;
};

// Check for document.domain and active x support
// No need to use active x approach when document.domain is not set
// see https://github.com/es-shims/es5-shim/issues/150
// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346
// avoid IE GC bug
var activeXDocument;
var _NullProtoObject = function NullProtoObject() {
  try {
    activeXDocument = new ActiveXObject('htmlfile');
  } catch (error) {/* ignore */}
  _NullProtoObject = typeof document != 'undefined' ? document.domain && activeXDocument ? NullProtoObjectViaActiveX(activeXDocument) // old IE
  : NullProtoObjectViaIFrame() : NullProtoObjectViaActiveX(activeXDocument); // WSH
  var length = enumBugKeys.length;
  while (length--) delete _NullProtoObject[PROTOTYPE$2][enumBugKeys[length]];
  return _NullProtoObject();
};
hiddenKeys$2[IE_PROTO$1] = true;

// `Object.create` method
// https://tc39.es/ecma262/#sec-object.create
// eslint-disable-next-line es/no-object-create -- safe
var objectCreate = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    EmptyConstructor[PROTOTYPE$2] = anObject$z(O);
    result = new EmptyConstructor();
    EmptyConstructor[PROTOTYPE$2] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO$1] = O;
  } else result = _NullProtoObject();
  return Properties === undefined ? result : definePropertiesModule$1.f(result, Properties);
};

var objectGetOwnPropertyNamesExternal = {};

var uncurryThis$1i = functionUncurryThis;
var arraySlice$a = uncurryThis$1i([].slice);

/* eslint-disable es/no-object-getownpropertynames -- safe */
var classof$l = classofRaw$2;
var toIndexedObject$e = toIndexedObject$j;
var $getOwnPropertyNames$1 = objectGetOwnPropertyNames.f;
var arraySlice$9 = arraySlice$a;
var windowNames = (typeof window === "undefined" ? "undefined" : _typeof(window)) == 'object' && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [];
var getWindowNames = function getWindowNames(it) {
  try {
    return $getOwnPropertyNames$1(it);
  } catch (error) {
    return arraySlice$9(windowNames);
  }
};

// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
objectGetOwnPropertyNamesExternal.f = function getOwnPropertyNames(it) {
  return windowNames && classof$l(it) === 'Window' ? getWindowNames(it) : $getOwnPropertyNames$1(toIndexedObject$e(it));
};

var makeBuiltIn$1 = makeBuiltInExports;
var defineProperty$c = objectDefineProperty;
var defineBuiltInAccessor$i = function defineBuiltInAccessor(target, name, descriptor) {
  if (descriptor.get) makeBuiltIn$1(descriptor.get, name, {
    getter: true
  });
  if (descriptor.set) makeBuiltIn$1(descriptor.set, name, {
    setter: true
  });
  return defineProperty$c.f(target, name, descriptor);
};

var wellKnownSymbolWrapped = {};

var wellKnownSymbol$v = wellKnownSymbol$z;
wellKnownSymbolWrapped.f = wellKnownSymbol$v;

var global$S = global$10;
var path$2 = global$S;

var path$1 = path$2;
var hasOwn$o = hasOwnProperty_1;
var wrappedWellKnownSymbolModule$1 = wellKnownSymbolWrapped;
var defineProperty$b = objectDefineProperty.f;
var wellKnownSymbolDefine = function wellKnownSymbolDefine(NAME) {
  var _Symbol = path$1.Symbol || (path$1.Symbol = {});
  if (!hasOwn$o(_Symbol, NAME)) defineProperty$b(_Symbol, NAME, {
    value: wrappedWellKnownSymbolModule$1.f(NAME)
  });
};

var call$C = functionCall;
var getBuiltIn$n = getBuiltIn$r;
var wellKnownSymbol$u = wellKnownSymbol$z;
var defineBuiltIn$m = defineBuiltIn$o;
var symbolDefineToPrimitive = function symbolDefineToPrimitive() {
  var _Symbol = getBuiltIn$n('Symbol');
  var SymbolPrototype = _Symbol && _Symbol.prototype;
  var valueOf = SymbolPrototype && SymbolPrototype.valueOf;
  var TO_PRIMITIVE = wellKnownSymbol$u('toPrimitive');
  if (SymbolPrototype && !SymbolPrototype[TO_PRIMITIVE]) {
    // `Symbol.prototype[@@toPrimitive]` method
    // https://tc39.es/ecma262/#sec-symbol.prototype-@@toprimitive
    // eslint-disable-next-line no-unused-vars -- required for .length
    defineBuiltIn$m(SymbolPrototype, TO_PRIMITIVE, function (hint) {
      return call$C(valueOf, this);
    }, {
      arity: 1
    });
  }
};

var defineProperty$a = objectDefineProperty.f;
var hasOwn$n = hasOwnProperty_1;
var wellKnownSymbol$t = wellKnownSymbol$z;
var TO_STRING_TAG$2 = wellKnownSymbol$t('toStringTag');
var setToStringTag$e = function setToStringTag(target, TAG, STATIC) {
  if (target && !STATIC) target = target.prototype;
  if (target && !hasOwn$n(target, TO_STRING_TAG$2)) {
    defineProperty$a(target, TO_STRING_TAG$2, {
      configurable: true,
      value: TAG
    });
  }
};

var classofRaw = classofRaw$2;
var uncurryThis$1h = functionUncurryThis;
var functionUncurryThisClause = function functionUncurryThisClause(fn) {
  // Nashorn bug:
  //   https://github.com/zloirock/core-js/issues/1128
  //   https://github.com/zloirock/core-js/issues/1130
  if (classofRaw(fn) === 'Function') return uncurryThis$1h(fn);
};

var uncurryThis$1g = functionUncurryThisClause;
var aCallable$m = aCallable$o;
var NATIVE_BIND$2 = functionBindNative;
var bind$f = uncurryThis$1g(uncurryThis$1g.bind);

// optional / simple context binding
var functionBindContext = function functionBindContext(fn, that) {
  aCallable$m(fn);
  return that === undefined ? fn : NATIVE_BIND$2 ? bind$f(fn, that) : function /* ...args */
  () {
    return fn.apply(that, arguments);
  };
};

var classof$k = classofRaw$2;

// `IsArray` abstract operation
// https://tc39.es/ecma262/#sec-isarray
// eslint-disable-next-line es/no-array-isarray -- safe
var isArray$9 = Array.isArray || function isArray(argument) {
  return classof$k(argument) === 'Array';
};

var uncurryThis$1f = functionUncurryThis;
var fails$1k = fails$1t;
var isCallable$m = isCallable$y;
var classof$j = classof$n;
var getBuiltIn$m = getBuiltIn$r;
var inspectSource$1 = inspectSource$3;
var noop$1 = function noop() {/* empty */};
var construct$1 = getBuiltIn$m('Reflect', 'construct');
var constructorRegExp = /^\s*(?:class|function)\b/;
var exec$9 = uncurryThis$1f(constructorRegExp.exec);
var INCORRECT_TO_STRING$2 = !constructorRegExp.test(noop$1);
var isConstructorModern = function isConstructor(argument) {
  if (!isCallable$m(argument)) return false;
  try {
    construct$1(noop$1, [], argument);
    return true;
  } catch (error) {
    return false;
  }
};
var isConstructorLegacy = function isConstructor(argument) {
  if (!isCallable$m(argument)) return false;
  switch (classof$j(argument)) {
    case 'AsyncFunction':
    case 'GeneratorFunction':
    case 'AsyncGeneratorFunction':
      return false;
  }
  try {
    // we can't check .prototype since constructors produced by .bind haven't it
    // `Function#toString` throws on some built-it function in some legacy engines
    // (for example, `DOMQuad` and similar in FF41-)
    return INCORRECT_TO_STRING$2 || !!exec$9(constructorRegExp, inspectSource$1(argument));
  } catch (error) {
    return true;
  }
};
isConstructorLegacy.sham = true;

// `IsConstructor` abstract operation
// https://tc39.es/ecma262/#sec-isconstructor
var isConstructor$6 = !construct$1 || fails$1k(function () {
  var called;
  return isConstructorModern(isConstructorModern.call) || !isConstructorModern(Object) || !isConstructorModern(function () {
    called = true;
  }) || called;
}) ? isConstructorLegacy : isConstructorModern;

var isArray$8 = isArray$9;
var isConstructor$5 = isConstructor$6;
var isObject$v = isObject$B;
var wellKnownSymbol$s = wellKnownSymbol$z;
var SPECIES$6 = wellKnownSymbol$s('species');
var $Array$9 = Array;

// a part of `ArraySpeciesCreate` abstract operation
// https://tc39.es/ecma262/#sec-arrayspeciescreate
var arraySpeciesConstructor$1 = function arraySpeciesConstructor(originalArray) {
  var C;
  if (isArray$8(originalArray)) {
    C = originalArray.constructor;
    // cross-realm fallback
    if (isConstructor$5(C) && (C === $Array$9 || isArray$8(C.prototype))) C = undefined;else if (isObject$v(C)) {
      C = C[SPECIES$6];
      if (C === null) C = undefined;
    }
  }
  return C === undefined ? $Array$9 : C;
};

var arraySpeciesConstructor = arraySpeciesConstructor$1;

// `ArraySpeciesCreate` abstract operation
// https://tc39.es/ecma262/#sec-arrayspeciescreate
var arraySpeciesCreate$5 = function arraySpeciesCreate(originalArray, length) {
  return new (arraySpeciesConstructor(originalArray))(length === 0 ? 0 : length);
};

var bind$e = functionBindContext;
var uncurryThis$1e = functionUncurryThis;
var IndexedObject$4 = indexedObject;
var toObject$r = toObject$t;
var lengthOfArrayLike$q = lengthOfArrayLike$s;
var arraySpeciesCreate$4 = arraySpeciesCreate$5;
var push$g = uncurryThis$1e([].push);

// `Array.prototype.{ forEach, map, filter, some, every, find, findIndex, filterReject }` methods implementation
var createMethod$6 = function createMethod(TYPE) {
  var IS_MAP = TYPE === 1;
  var IS_FILTER = TYPE === 2;
  var IS_SOME = TYPE === 3;
  var IS_EVERY = TYPE === 4;
  var IS_FIND_INDEX = TYPE === 6;
  var IS_FILTER_REJECT = TYPE === 7;
  var NO_HOLES = TYPE === 5 || IS_FIND_INDEX;
  return function ($this, callbackfn, that, specificCreate) {
    var O = toObject$r($this);
    var self = IndexedObject$4(O);
    var length = lengthOfArrayLike$q(self);
    var boundFunction = bind$e(callbackfn, that);
    var index = 0;
    var create = specificCreate || arraySpeciesCreate$4;
    var target = IS_MAP ? create($this, length) : IS_FILTER || IS_FILTER_REJECT ? create($this, 0) : undefined;
    var value, result;
    for (; length > index; index++) if (NO_HOLES || index in self) {
      value = self[index];
      result = boundFunction(value, index, O);
      if (TYPE) {
        if (IS_MAP) target[index] = result; // map
        else if (result) switch (TYPE) {
          case 3:
            return true;
          // some
          case 5:
            return value;
          // find
          case 6:
            return index;
          // findIndex
          case 2:
            push$g(target, value);
          // filter
        } else switch (TYPE) {
          case 4:
            return false;
          // every
          case 7:
            push$g(target, value);
          // filterReject
        }
      }
    }
    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;
  };
};
var arrayIteration = {
  // `Array.prototype.forEach` method
  // https://tc39.es/ecma262/#sec-array.prototype.foreach
  forEach: createMethod$6(0),
  // `Array.prototype.map` method
  // https://tc39.es/ecma262/#sec-array.prototype.map
  map: createMethod$6(1),
  // `Array.prototype.filter` method
  // https://tc39.es/ecma262/#sec-array.prototype.filter
  filter: createMethod$6(2),
  // `Array.prototype.some` method
  // https://tc39.es/ecma262/#sec-array.prototype.some
  some: createMethod$6(3),
  // `Array.prototype.every` method
  // https://tc39.es/ecma262/#sec-array.prototype.every
  every: createMethod$6(4),
  // `Array.prototype.find` method
  // https://tc39.es/ecma262/#sec-array.prototype.find
  find: createMethod$6(5),
  // `Array.prototype.findIndex` method
  // https://tc39.es/ecma262/#sec-array.prototype.findIndex
  findIndex: createMethod$6(6),
  // `Array.prototype.filterReject` method
  // https://github.com/tc39/proposal-array-filtering
  filterReject: createMethod$6(7)
};

var $$3b = _export;
var global$R = global$10;
var call$B = functionCall;
var uncurryThis$1d = functionUncurryThis;
var DESCRIPTORS$F = descriptors;
var NATIVE_SYMBOL$4 = symbolConstructorDetection;
var fails$1j = fails$1t;
var hasOwn$m = hasOwnProperty_1;
var isPrototypeOf$b = objectIsPrototypeOf;
var anObject$y = anObject$D;
var toIndexedObject$d = toIndexedObject$j;
var toPropertyKey$5 = toPropertyKey$8;
var $toString$3 = toString$D;
var createPropertyDescriptor$9 = createPropertyDescriptor$c;
var nativeObjectCreate = objectCreate;
var objectKeys$3 = objectKeys$5;
var getOwnPropertyNamesModule$1 = objectGetOwnPropertyNames;
var getOwnPropertyNamesExternal = objectGetOwnPropertyNamesExternal;
var getOwnPropertySymbolsModule$2 = objectGetOwnPropertySymbols;
var getOwnPropertyDescriptorModule$5 = objectGetOwnPropertyDescriptor;
var definePropertyModule$7 = objectDefineProperty;
var definePropertiesModule = objectDefineProperties;
var propertyIsEnumerableModule$1 = objectPropertyIsEnumerable;
var defineBuiltIn$l = defineBuiltIn$o;
var defineBuiltInAccessor$h = defineBuiltInAccessor$i;
var shared$3 = shared$7;
var sharedKey$1 = sharedKey$4;
var hiddenKeys$1 = hiddenKeys$6;
var uid$3 = uid$6;
var wellKnownSymbol$r = wellKnownSymbol$z;
var wrappedWellKnownSymbolModule = wellKnownSymbolWrapped;
var defineWellKnownSymbol$d = wellKnownSymbolDefine;
var defineSymbolToPrimitive$1 = symbolDefineToPrimitive;
var setToStringTag$d = setToStringTag$e;
var InternalStateModule$c = internalState;
var $forEach$2 = arrayIteration.forEach;
var HIDDEN = sharedKey$1('hidden');
var SYMBOL = 'Symbol';
var PROTOTYPE$1 = 'prototype';
var setInternalState$b = InternalStateModule$c.set;
var getInternalState$9 = InternalStateModule$c.getterFor(SYMBOL);
var ObjectPrototype$5 = Object[PROTOTYPE$1];
var $Symbol = global$R.Symbol;
var SymbolPrototype$1 = $Symbol && $Symbol[PROTOTYPE$1];
var RangeError$4 = global$R.RangeError;
var TypeError$8 = global$R.TypeError;
var QObject = global$R.QObject;
var nativeGetOwnPropertyDescriptor$2 = getOwnPropertyDescriptorModule$5.f;
var nativeDefineProperty$1 = definePropertyModule$7.f;
var nativeGetOwnPropertyNames = getOwnPropertyNamesExternal.f;
var nativePropertyIsEnumerable = propertyIsEnumerableModule$1.f;
var push$f = uncurryThis$1d([].push);
var AllSymbols = shared$3('symbols');
var ObjectPrototypeSymbols = shared$3('op-symbols');
var WellKnownSymbolsStore = shared$3('wks');

// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
var USE_SETTER = !QObject || !QObject[PROTOTYPE$1] || !QObject[PROTOTYPE$1].findChild;

// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
var fallbackDefineProperty = function fallbackDefineProperty(O, P, Attributes) {
  var ObjectPrototypeDescriptor = nativeGetOwnPropertyDescriptor$2(ObjectPrototype$5, P);
  if (ObjectPrototypeDescriptor) delete ObjectPrototype$5[P];
  nativeDefineProperty$1(O, P, Attributes);
  if (ObjectPrototypeDescriptor && O !== ObjectPrototype$5) {
    nativeDefineProperty$1(ObjectPrototype$5, P, ObjectPrototypeDescriptor);
  }
};
var setSymbolDescriptor = DESCRIPTORS$F && fails$1j(function () {
  return nativeObjectCreate(nativeDefineProperty$1({}, 'a', {
    get: function get() {
      return nativeDefineProperty$1(this, 'a', {
        value: 7
      }).a;
    }
  })).a !== 7;
}) ? fallbackDefineProperty : nativeDefineProperty$1;
var wrap = function wrap(tag, description) {
  var symbol = AllSymbols[tag] = nativeObjectCreate(SymbolPrototype$1);
  setInternalState$b(symbol, {
    type: SYMBOL,
    tag: tag,
    description: description
  });
  if (!DESCRIPTORS$F) symbol.description = description;
  return symbol;
};
var $defineProperty = function defineProperty(O, P, Attributes) {
  if (O === ObjectPrototype$5) $defineProperty(ObjectPrototypeSymbols, P, Attributes);
  anObject$y(O);
  var key = toPropertyKey$5(P);
  anObject$y(Attributes);
  if (hasOwn$m(AllSymbols, key)) {
    if (!Attributes.enumerable) {
      if (!hasOwn$m(O, HIDDEN)) nativeDefineProperty$1(O, HIDDEN, createPropertyDescriptor$9(1, nativeObjectCreate(null)));
      O[HIDDEN][key] = true;
    } else {
      if (hasOwn$m(O, HIDDEN) && O[HIDDEN][key]) O[HIDDEN][key] = false;
      Attributes = nativeObjectCreate(Attributes, {
        enumerable: createPropertyDescriptor$9(0, false)
      });
    }
    return setSymbolDescriptor(O, key, Attributes);
  }
  return nativeDefineProperty$1(O, key, Attributes);
};
var $defineProperties = function defineProperties(O, Properties) {
  anObject$y(O);
  var properties = toIndexedObject$d(Properties);
  var keys = objectKeys$3(properties).concat($getOwnPropertySymbols(properties));
  $forEach$2(keys, function (key) {
    if (!DESCRIPTORS$F || call$B($propertyIsEnumerable$1, properties, key)) $defineProperty(O, key, properties[key]);
  });
  return O;
};
var $create = function create(O, Properties) {
  return Properties === undefined ? nativeObjectCreate(O) : $defineProperties(nativeObjectCreate(O), Properties);
};
var $propertyIsEnumerable$1 = function propertyIsEnumerable(V) {
  var P = toPropertyKey$5(V);
  var enumerable = call$B(nativePropertyIsEnumerable, this, P);
  if (this === ObjectPrototype$5 && hasOwn$m(AllSymbols, P) && !hasOwn$m(ObjectPrototypeSymbols, P)) return false;
  return enumerable || !hasOwn$m(this, P) || !hasOwn$m(AllSymbols, P) || hasOwn$m(this, HIDDEN) && this[HIDDEN][P] ? enumerable : true;
};
var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(O, P) {
  var it = toIndexedObject$d(O);
  var key = toPropertyKey$5(P);
  if (it === ObjectPrototype$5 && hasOwn$m(AllSymbols, key) && !hasOwn$m(ObjectPrototypeSymbols, key)) return;
  var descriptor = nativeGetOwnPropertyDescriptor$2(it, key);
  if (descriptor && hasOwn$m(AllSymbols, key) && !(hasOwn$m(it, HIDDEN) && it[HIDDEN][key])) {
    descriptor.enumerable = true;
  }
  return descriptor;
};
var $getOwnPropertyNames = function getOwnPropertyNames(O) {
  var names = nativeGetOwnPropertyNames(toIndexedObject$d(O));
  var result = [];
  $forEach$2(names, function (key) {
    if (!hasOwn$m(AllSymbols, key) && !hasOwn$m(hiddenKeys$1, key)) push$f(result, key);
  });
  return result;
};
var $getOwnPropertySymbols = function $getOwnPropertySymbols(O) {
  var IS_OBJECT_PROTOTYPE = O === ObjectPrototype$5;
  var names = nativeGetOwnPropertyNames(IS_OBJECT_PROTOTYPE ? ObjectPrototypeSymbols : toIndexedObject$d(O));
  var result = [];
  $forEach$2(names, function (key) {
    if (hasOwn$m(AllSymbols, key) && (!IS_OBJECT_PROTOTYPE || hasOwn$m(ObjectPrototype$5, key))) {
      push$f(result, AllSymbols[key]);
    }
  });
  return result;
};

// `Symbol` constructor
// https://tc39.es/ecma262/#sec-symbol-constructor
if (!NATIVE_SYMBOL$4) {
  $Symbol = function _Symbol() {
    if (isPrototypeOf$b(SymbolPrototype$1, this)) throw new TypeError$8('Symbol is not a constructor');
    var description = !arguments.length || arguments[0] === undefined ? undefined : $toString$3(arguments[0]);
    var tag = uid$3(description);
    var setter = function setter(value) {
      var $this = this === undefined ? global$R : this;
      if ($this === ObjectPrototype$5) call$B(setter, ObjectPrototypeSymbols, value);
      if (hasOwn$m($this, HIDDEN) && hasOwn$m($this[HIDDEN], tag)) $this[HIDDEN][tag] = false;
      var descriptor = createPropertyDescriptor$9(1, value);
      try {
        setSymbolDescriptor($this, tag, descriptor);
      } catch (error) {
        if (!(error instanceof RangeError$4)) throw error;
        fallbackDefineProperty($this, tag, descriptor);
      }
    };
    if (DESCRIPTORS$F && USE_SETTER) setSymbolDescriptor(ObjectPrototype$5, tag, {
      configurable: true,
      set: setter
    });
    return wrap(tag, description);
  };
  SymbolPrototype$1 = $Symbol[PROTOTYPE$1];
  defineBuiltIn$l(SymbolPrototype$1, 'toString', function toString() {
    return getInternalState$9(this).tag;
  });
  defineBuiltIn$l($Symbol, 'withoutSetter', function (description) {
    return wrap(uid$3(description), description);
  });
  propertyIsEnumerableModule$1.f = $propertyIsEnumerable$1;
  definePropertyModule$7.f = $defineProperty;
  definePropertiesModule.f = $defineProperties;
  getOwnPropertyDescriptorModule$5.f = $getOwnPropertyDescriptor;
  getOwnPropertyNamesModule$1.f = getOwnPropertyNamesExternal.f = $getOwnPropertyNames;
  getOwnPropertySymbolsModule$2.f = $getOwnPropertySymbols;
  wrappedWellKnownSymbolModule.f = function (name) {
    return wrap(wellKnownSymbol$r(name), name);
  };
  if (DESCRIPTORS$F) {
    // https://github.com/tc39/proposal-Symbol-description
    defineBuiltInAccessor$h(SymbolPrototype$1, 'description', {
      configurable: true,
      get: function description() {
        return getInternalState$9(this).description;
      }
    });
    {
      defineBuiltIn$l(ObjectPrototype$5, 'propertyIsEnumerable', $propertyIsEnumerable$1, {
        unsafe: true
      });
    }
  }
}
$$3b({
  global: true,
  constructor: true,
  wrap: true,
  forced: !NATIVE_SYMBOL$4,
  sham: !NATIVE_SYMBOL$4
}, {
  Symbol: $Symbol
});
$forEach$2(objectKeys$3(WellKnownSymbolsStore), function (name) {
  defineWellKnownSymbol$d(name);
});
$$3b({
  target: SYMBOL,
  stat: true,
  forced: !NATIVE_SYMBOL$4
}, {
  useSetter: function useSetter() {
    USE_SETTER = true;
  },
  useSimple: function useSimple() {
    USE_SETTER = false;
  }
});
$$3b({
  target: 'Object',
  stat: true,
  forced: !NATIVE_SYMBOL$4,
  sham: !DESCRIPTORS$F
}, {
  // `Object.create` method
  // https://tc39.es/ecma262/#sec-object.create
  create: $create,
  // `Object.defineProperty` method
  // https://tc39.es/ecma262/#sec-object.defineproperty
  defineProperty: $defineProperty,
  // `Object.defineProperties` method
  // https://tc39.es/ecma262/#sec-object.defineproperties
  defineProperties: $defineProperties,
  // `Object.getOwnPropertyDescriptor` method
  // https://tc39.es/ecma262/#sec-object.getownpropertydescriptors
  getOwnPropertyDescriptor: $getOwnPropertyDescriptor
});
$$3b({
  target: 'Object',
  stat: true,
  forced: !NATIVE_SYMBOL$4
}, {
  // `Object.getOwnPropertyNames` method
  // https://tc39.es/ecma262/#sec-object.getownpropertynames
  getOwnPropertyNames: $getOwnPropertyNames
});

// `Symbol.prototype[@@toPrimitive]` method
// https://tc39.es/ecma262/#sec-symbol.prototype-@@toprimitive
defineSymbolToPrimitive$1();

// `Symbol.prototype[@@toStringTag]` property
// https://tc39.es/ecma262/#sec-symbol.prototype-@@tostringtag
setToStringTag$d($Symbol, SYMBOL);
hiddenKeys$1[HIDDEN] = true;

var NATIVE_SYMBOL$3 = symbolConstructorDetection;

/* eslint-disable es/no-symbol -- safe */
var symbolRegistryDetection = NATIVE_SYMBOL$3 && !!Symbol['for'] && !!Symbol.keyFor;

var $$3a = _export;
var getBuiltIn$l = getBuiltIn$r;
var hasOwn$l = hasOwnProperty_1;
var toString$C = toString$D;
var shared$2 = shared$7;
var NATIVE_SYMBOL_REGISTRY$1 = symbolRegistryDetection;
var StringToSymbolRegistry = shared$2('string-to-symbol-registry');
var SymbolToStringRegistry$1 = shared$2('symbol-to-string-registry');

// `Symbol.for` method
// https://tc39.es/ecma262/#sec-symbol.for
$$3a({
  target: 'Symbol',
  stat: true,
  forced: !NATIVE_SYMBOL_REGISTRY$1
}, {
  'for': function _for(key) {
    var string = toString$C(key);
    if (hasOwn$l(StringToSymbolRegistry, string)) return StringToSymbolRegistry[string];
    var symbol = getBuiltIn$l('Symbol')(string);
    StringToSymbolRegistry[string] = symbol;
    SymbolToStringRegistry$1[symbol] = string;
    return symbol;
  }
});

var $$39 = _export;
var hasOwn$k = hasOwnProperty_1;
var isSymbol$4 = isSymbol$7;
var tryToString$5 = tryToString$7;
var shared$1 = shared$7;
var NATIVE_SYMBOL_REGISTRY = symbolRegistryDetection;
var SymbolToStringRegistry = shared$1('symbol-to-string-registry');

// `Symbol.keyFor` method
// https://tc39.es/ecma262/#sec-symbol.keyfor
$$39({
  target: 'Symbol',
  stat: true,
  forced: !NATIVE_SYMBOL_REGISTRY
}, {
  keyFor: function keyFor(sym) {
    if (!isSymbol$4(sym)) throw new TypeError(tryToString$5(sym) + ' is not a symbol');
    if (hasOwn$k(SymbolToStringRegistry, sym)) return SymbolToStringRegistry[sym];
  }
});

var NATIVE_BIND$1 = functionBindNative;
var FunctionPrototype$2 = Function.prototype;
var apply$a = FunctionPrototype$2.apply;
var call$A = FunctionPrototype$2.call;

// eslint-disable-next-line es/no-reflect -- safe
var functionApply$1 = (typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) == 'object' && Reflect.apply || (NATIVE_BIND$1 ? call$A.bind(apply$a) : function () {
  return call$A.apply(apply$a, arguments);
});

var uncurryThis$1c = functionUncurryThis;
var isArray$7 = isArray$9;
var isCallable$l = isCallable$y;
var classof$i = classofRaw$2;
var toString$B = toString$D;
var push$e = uncurryThis$1c([].push);
var getJsonReplacerFunction = function getJsonReplacerFunction(replacer) {
  if (isCallable$l(replacer)) return replacer;
  if (!isArray$7(replacer)) return;
  var rawLength = replacer.length;
  var keys = [];
  for (var i = 0; i < rawLength; i++) {
    var element = replacer[i];
    if (typeof element == 'string') push$e(keys, element);else if (typeof element == 'number' || classof$i(element) === 'Number' || classof$i(element) === 'String') push$e(keys, toString$B(element));
  }
  var keysLength = keys.length;
  var root = true;
  return function (key, value) {
    if (root) {
      root = false;
      return value;
    }
    if (isArray$7(this)) return value;
    for (var j = 0; j < keysLength; j++) if (keys[j] === key) return value;
  };
};

var $$38 = _export;
var getBuiltIn$k = getBuiltIn$r;
var apply$9 = functionApply$1;
var call$z = functionCall;
var uncurryThis$1b = functionUncurryThis;
var fails$1i = fails$1t;
var isCallable$k = isCallable$y;
var isSymbol$3 = isSymbol$7;
var arraySlice$8 = arraySlice$a;
var getReplacerFunction = getJsonReplacerFunction;
var NATIVE_SYMBOL$2 = symbolConstructorDetection;
var $String$3 = String;
var $stringify = getBuiltIn$k('JSON', 'stringify');
var exec$8 = uncurryThis$1b(/./.exec);
var charAt$f = uncurryThis$1b(''.charAt);
var charCodeAt$7 = uncurryThis$1b(''.charCodeAt);
var replace$b = uncurryThis$1b(''.replace);
var numberToString$2 = uncurryThis$1b(1.0.toString);
var tester = /[\uD800-\uDFFF]/g;
var low = /^[\uD800-\uDBFF]$/;
var hi = /^[\uDC00-\uDFFF]$/;
var WRONG_SYMBOLS_CONVERSION = !NATIVE_SYMBOL$2 || fails$1i(function () {
  var symbol = getBuiltIn$k('Symbol')('stringify detection');
  // MS Edge converts symbol values to JSON as {}
  return $stringify([symbol]) !== '[null]'
  // WebKit converts symbol values to JSON as null
  || $stringify({
    a: symbol
  }) !== '{}'
  // V8 throws on boxed symbols
  || $stringify(Object(symbol)) !== '{}';
});

// https://github.com/tc39/proposal-well-formed-stringify
var ILL_FORMED_UNICODE = fails$1i(function () {
  return $stringify("\uDF06\uD834") !== "\"\\udf06\\ud834\"" || $stringify("\uDEAD") !== "\"\\udead\"";
});
var stringifyWithSymbolsFix = function stringifyWithSymbolsFix(it, replacer) {
  var args = arraySlice$8(arguments);
  var $replacer = getReplacerFunction(replacer);
  if (!isCallable$k($replacer) && (it === undefined || isSymbol$3(it))) return; // IE8 returns string on undefined
  args[1] = function (key, value) {
    // some old implementations (like WebKit) could pass numbers as keys
    if (isCallable$k($replacer)) value = call$z($replacer, this, $String$3(key), value);
    if (!isSymbol$3(value)) return value;
  };
  return apply$9($stringify, null, args);
};
var fixIllFormed = function fixIllFormed(match, offset, string) {
  var prev = charAt$f(string, offset - 1);
  var next = charAt$f(string, offset + 1);
  if (exec$8(low, match) && !exec$8(hi, next) || exec$8(hi, match) && !exec$8(low, prev)) {
    return "\\u" + numberToString$2(charCodeAt$7(match, 0), 16);
  }
  return match;
};
if ($stringify) {
  // `JSON.stringify` method
  // https://tc39.es/ecma262/#sec-json.stringify
  $$38({
    target: 'JSON',
    stat: true,
    arity: 3,
    forced: WRONG_SYMBOLS_CONVERSION || ILL_FORMED_UNICODE
  }, {
    // eslint-disable-next-line no-unused-vars -- required for `.length`
    stringify: function stringify(it, replacer, space) {
      var args = arraySlice$8(arguments);
      var result = apply$9(WRONG_SYMBOLS_CONVERSION ? stringifyWithSymbolsFix : $stringify, null, args);
      return ILL_FORMED_UNICODE && typeof result == 'string' ? replace$b(result, tester, fixIllFormed) : result;
    }
  });
}

var $$37 = _export;
var NATIVE_SYMBOL$1 = symbolConstructorDetection;
var fails$1h = fails$1t;
var getOwnPropertySymbolsModule$1 = objectGetOwnPropertySymbols;
var toObject$q = toObject$t;

// V8 ~ Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives
// https://bugs.chromium.org/p/v8/issues/detail?id=3443
var FORCED$E = !NATIVE_SYMBOL$1 || fails$1h(function () {
  getOwnPropertySymbolsModule$1.f(1);
});

// `Object.getOwnPropertySymbols` method
// https://tc39.es/ecma262/#sec-object.getownpropertysymbols
$$37({
  target: 'Object',
  stat: true,
  forced: FORCED$E
}, {
  getOwnPropertySymbols: function getOwnPropertySymbols(it) {
    var $getOwnPropertySymbols = getOwnPropertySymbolsModule$1.f;
    return $getOwnPropertySymbols ? $getOwnPropertySymbols(toObject$q(it)) : [];
  }
});

var $$36 = _export;
var DESCRIPTORS$E = descriptors;
var global$Q = global$10;
var uncurryThis$1a = functionUncurryThis;
var hasOwn$j = hasOwnProperty_1;
var isCallable$j = isCallable$y;
var isPrototypeOf$a = objectIsPrototypeOf;
var toString$A = toString$D;
var defineBuiltInAccessor$g = defineBuiltInAccessor$i;
var copyConstructorProperties$4 = copyConstructorProperties$6;
var NativeSymbol = global$Q.Symbol;
var SymbolPrototype = NativeSymbol && NativeSymbol.prototype;
if (DESCRIPTORS$E && isCallable$j(NativeSymbol) && (!('description' in SymbolPrototype) ||
// Safari 12 bug
NativeSymbol().description !== undefined)) {
  var EmptyStringDescriptionStore = {};
  // wrap Symbol constructor for correct work with undefined description
  var SymbolWrapper = function _Symbol() {
    var description = arguments.length < 1 || arguments[0] === undefined ? undefined : toString$A(arguments[0]);
    var result = isPrototypeOf$a(SymbolPrototype, this) ? new NativeSymbol(description)
    // in Edge 13, String(Symbol(undefined)) === 'Symbol(undefined)'
    : description === undefined ? NativeSymbol() : NativeSymbol(description);
    if (description === '') EmptyStringDescriptionStore[result] = true;
    return result;
  };
  copyConstructorProperties$4(SymbolWrapper, NativeSymbol);
  SymbolWrapper.prototype = SymbolPrototype;
  SymbolPrototype.constructor = SymbolWrapper;
  var NATIVE_SYMBOL = String(NativeSymbol('description detection')) === 'Symbol(description detection)';
  var thisSymbolValue = uncurryThis$1a(SymbolPrototype.valueOf);
  var symbolDescriptiveString = uncurryThis$1a(SymbolPrototype.toString);
  var regexp = /^Symbol\((.*)\)[^)]+$/;
  var replace$a = uncurryThis$1a(''.replace);
  var stringSlice$g = uncurryThis$1a(''.slice);
  defineBuiltInAccessor$g(SymbolPrototype, 'description', {
    configurable: true,
    get: function description() {
      var symbol = thisSymbolValue(this);
      if (hasOwn$j(EmptyStringDescriptionStore, symbol)) return '';
      var string = symbolDescriptiveString(symbol);
      var desc = NATIVE_SYMBOL ? stringSlice$g(string, 7, -1) : replace$a(string, regexp, '$1');
      return desc === '' ? undefined : desc;
    }
  });
  $$36({
    global: true,
    constructor: true,
    forced: true
  }, {
    Symbol: SymbolWrapper
  });
}

var defineWellKnownSymbol$c = wellKnownSymbolDefine;

// `Symbol.asyncIterator` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.asynciterator
defineWellKnownSymbol$c('asyncIterator');

var defineWellKnownSymbol$b = wellKnownSymbolDefine;

// `Symbol.hasInstance` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.hasinstance
defineWellKnownSymbol$b('hasInstance');

var defineWellKnownSymbol$a = wellKnownSymbolDefine;

// `Symbol.isConcatSpreadable` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.isconcatspreadable
defineWellKnownSymbol$a('isConcatSpreadable');

var defineWellKnownSymbol$9 = wellKnownSymbolDefine;

// `Symbol.iterator` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.iterator
defineWellKnownSymbol$9('iterator');

var defineWellKnownSymbol$8 = wellKnownSymbolDefine;

// `Symbol.match` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.match
defineWellKnownSymbol$8('match');

var defineWellKnownSymbol$7 = wellKnownSymbolDefine;

// `Symbol.matchAll` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.matchall
defineWellKnownSymbol$7('matchAll');

var defineWellKnownSymbol$6 = wellKnownSymbolDefine;

// `Symbol.replace` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.replace
defineWellKnownSymbol$6('replace');

var defineWellKnownSymbol$5 = wellKnownSymbolDefine;

// `Symbol.search` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.search
defineWellKnownSymbol$5('search');

var defineWellKnownSymbol$4 = wellKnownSymbolDefine;

// `Symbol.species` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.species
defineWellKnownSymbol$4('species');

var defineWellKnownSymbol$3 = wellKnownSymbolDefine;

// `Symbol.split` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.split
defineWellKnownSymbol$3('split');

var defineWellKnownSymbol$2 = wellKnownSymbolDefine;
var defineSymbolToPrimitive = symbolDefineToPrimitive;

// `Symbol.toPrimitive` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.toprimitive
defineWellKnownSymbol$2('toPrimitive');

// `Symbol.prototype[@@toPrimitive]` method
// https://tc39.es/ecma262/#sec-symbol.prototype-@@toprimitive
defineSymbolToPrimitive();

var getBuiltIn$j = getBuiltIn$r;
var defineWellKnownSymbol$1 = wellKnownSymbolDefine;
var setToStringTag$c = setToStringTag$e;

// `Symbol.toStringTag` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.tostringtag
defineWellKnownSymbol$1('toStringTag');

// `Symbol.prototype[@@toStringTag]` property
// https://tc39.es/ecma262/#sec-symbol.prototype-@@tostringtag
setToStringTag$c(getBuiltIn$j('Symbol'), 'Symbol');

var defineWellKnownSymbol = wellKnownSymbolDefine;

// `Symbol.unscopables` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.unscopables
defineWellKnownSymbol('unscopables');

var uncurryThis$19 = functionUncurryThis;
var aCallable$l = aCallable$o;
var functionUncurryThisAccessor = function functionUncurryThisAccessor(object, key, method) {
  try {
    // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
    return uncurryThis$19(aCallable$l(Object.getOwnPropertyDescriptor(object, key)[method]));
  } catch (error) {/* empty */}
};

var isObject$u = isObject$B;
var isPossiblePrototype$2 = function isPossiblePrototype(argument) {
  return isObject$u(argument) || argument === null;
};

var isPossiblePrototype$1 = isPossiblePrototype$2;
var $String$2 = String;
var $TypeError$l = TypeError;
var aPossiblePrototype$2 = function aPossiblePrototype(argument) {
  if (isPossiblePrototype$1(argument)) return argument;
  throw new $TypeError$l("Can't set " + $String$2(argument) + ' as a prototype');
};

/* eslint-disable no-proto -- safe */
var uncurryThisAccessor$3 = functionUncurryThisAccessor;
var isObject$t = isObject$B;
var requireObjectCoercible$l = requireObjectCoercible$o;
var aPossiblePrototype$1 = aPossiblePrototype$2;

// `Object.setPrototypeOf` method
// https://tc39.es/ecma262/#sec-object.setprototypeof
// Works with __proto__ only. Old v8 can't work with null proto objects.
// eslint-disable-next-line es/no-object-setprototypeof -- safe
var objectSetPrototypeOf$1 = Object.setPrototypeOf || ('__proto__' in {} ? function () {
  var CORRECT_SETTER = false;
  var test = {};
  var setter;
  try {
    setter = uncurryThisAccessor$3(Object.prototype, '__proto__', 'set');
    setter(test, []);
    CORRECT_SETTER = test instanceof Array;
  } catch (error) {/* empty */}
  return function setPrototypeOf(O, proto) {
    requireObjectCoercible$l(O);
    aPossiblePrototype$1(proto);
    if (!isObject$t(O)) return O;
    if (CORRECT_SETTER) setter(O, proto);else O.__proto__ = proto;
    return O;
  };
}() : undefined);

var defineProperty$9 = objectDefineProperty.f;
var proxyAccessor$2 = function proxyAccessor(Target, Source, key) {
  key in Target || defineProperty$9(Target, key, {
    configurable: true,
    get: function get() {
      return Source[key];
    },
    set: function set(it) {
      Source[key] = it;
    }
  });
};

var isCallable$i = isCallable$y;
var isObject$s = isObject$B;
var setPrototypeOf$9 = objectSetPrototypeOf$1;

// makes subclassing work correct for wrapped built-ins
var inheritIfRequired$7 = function inheritIfRequired($this, dummy, Wrapper) {
  var NewTarget, NewTargetPrototype;
  if (
  // it can work only with native `setPrototypeOf`
  setPrototypeOf$9 &&
  // we haven't completely correct pre-ES6 way for getting `new.target`, so use this
  isCallable$i(NewTarget = dummy.constructor) && NewTarget !== Wrapper && isObject$s(NewTargetPrototype = NewTarget.prototype) && NewTargetPrototype !== Wrapper.prototype) setPrototypeOf$9($this, NewTargetPrototype);
  return $this;
};

var toString$z = toString$D;
var normalizeStringArgument$5 = function normalizeStringArgument(argument, $default) {
  return argument === undefined ? arguments.length < 2 ? '' : $default : toString$z(argument);
};

var isObject$r = isObject$B;
var createNonEnumerableProperty$c = createNonEnumerableProperty$f;

// `InstallErrorCause` abstract operation
// https://tc39.es/proposal-error-cause/#sec-errorobjects-install-error-cause
var installErrorCause$2 = function installErrorCause(O, options) {
  if (isObject$r(options) && 'cause' in options) {
    createNonEnumerableProperty$c(O, 'cause', options.cause);
  }
};

var uncurryThis$18 = functionUncurryThis;
var $Error$1 = Error;
var replace$9 = uncurryThis$18(''.replace);
var TEST = function (arg) {
  return String(new $Error$1(arg).stack);
}('zxcasd');
// eslint-disable-next-line redos/no-vulnerable -- safe
var V8_OR_CHAKRA_STACK_ENTRY = /\n\s*at [^:]*:[^\n]*/;
var IS_V8_OR_CHAKRA_STACK = V8_OR_CHAKRA_STACK_ENTRY.test(TEST);
var errorStackClear = function errorStackClear(stack, dropEntries) {
  if (IS_V8_OR_CHAKRA_STACK && typeof stack == 'string' && !$Error$1.prepareStackTrace) {
    while (dropEntries--) stack = replace$9(stack, V8_OR_CHAKRA_STACK_ENTRY, '');
  }
  return stack;
};

var fails$1g = fails$1t;
var createPropertyDescriptor$8 = createPropertyDescriptor$c;
var errorStackInstallable = !fails$1g(function () {
  var error = new Error('a');
  if (!('stack' in error)) return true;
  // eslint-disable-next-line es/no-object-defineproperty -- safe
  Object.defineProperty(error, 'stack', createPropertyDescriptor$8(1, 7));
  return error.stack !== 7;
});

var createNonEnumerableProperty$b = createNonEnumerableProperty$f;
var clearErrorStack$2 = errorStackClear;
var ERROR_STACK_INSTALLABLE$1 = errorStackInstallable;

// non-standard V8
var captureStackTrace = Error.captureStackTrace;
var errorStackInstall = function errorStackInstall(error, C, stack, dropEntries) {
  if (ERROR_STACK_INSTALLABLE$1) {
    if (captureStackTrace) captureStackTrace(error, C);else createNonEnumerableProperty$b(error, 'stack', clearErrorStack$2(stack, dropEntries));
  }
};

var getBuiltIn$i = getBuiltIn$r;
var hasOwn$i = hasOwnProperty_1;
var createNonEnumerableProperty$a = createNonEnumerableProperty$f;
var isPrototypeOf$9 = objectIsPrototypeOf;
var setPrototypeOf$8 = objectSetPrototypeOf$1;
var copyConstructorProperties$3 = copyConstructorProperties$6;
var proxyAccessor$1 = proxyAccessor$2;
var inheritIfRequired$6 = inheritIfRequired$7;
var normalizeStringArgument$4 = normalizeStringArgument$5;
var installErrorCause$1 = installErrorCause$2;
var installErrorStack$1 = errorStackInstall;
var DESCRIPTORS$D = descriptors;
var wrapErrorConstructorWithCause$2 = function wrapErrorConstructorWithCause(FULL_NAME, wrapper, FORCED, IS_AGGREGATE_ERROR) {
  var STACK_TRACE_LIMIT = 'stackTraceLimit';
  var OPTIONS_POSITION = IS_AGGREGATE_ERROR ? 2 : 1;
  var path = FULL_NAME.split('.');
  var ERROR_NAME = path[path.length - 1];
  var OriginalError = getBuiltIn$i.apply(null, path);
  if (!OriginalError) return;
  var OriginalErrorPrototype = OriginalError.prototype;

  // V8 9.3- bug https://bugs.chromium.org/p/v8/issues/detail?id=12006
  if (hasOwn$i(OriginalErrorPrototype, 'cause')) delete OriginalErrorPrototype.cause;
  if (!FORCED) return OriginalError;
  var BaseError = getBuiltIn$i('Error');
  var WrappedError = wrapper(function (a, b) {
    var message = normalizeStringArgument$4(IS_AGGREGATE_ERROR ? b : a, undefined);
    var result = IS_AGGREGATE_ERROR ? new OriginalError(a) : new OriginalError();
    if (message !== undefined) createNonEnumerableProperty$a(result, 'message', message);
    installErrorStack$1(result, WrappedError, result.stack, 2);
    if (this && isPrototypeOf$9(OriginalErrorPrototype, this)) inheritIfRequired$6(result, this, WrappedError);
    if (arguments.length > OPTIONS_POSITION) installErrorCause$1(result, arguments[OPTIONS_POSITION]);
    return result;
  });
  WrappedError.prototype = OriginalErrorPrototype;
  if (ERROR_NAME !== 'Error') {
    if (setPrototypeOf$8) setPrototypeOf$8(WrappedError, BaseError);else copyConstructorProperties$3(WrappedError, BaseError, {
      name: true
    });
  } else if (DESCRIPTORS$D && STACK_TRACE_LIMIT in OriginalError) {
    proxyAccessor$1(WrappedError, OriginalError, STACK_TRACE_LIMIT);
    proxyAccessor$1(WrappedError, OriginalError, 'prepareStackTrace');
  }
  copyConstructorProperties$3(WrappedError, OriginalError);
  try {
    // Safari 13- bug: WebAssembly errors does not have a proper `.name`
    if (OriginalErrorPrototype.name !== ERROR_NAME) {
      createNonEnumerableProperty$a(OriginalErrorPrototype, 'name', ERROR_NAME);
    }
    OriginalErrorPrototype.constructor = WrappedError;
  } catch (error) {/* empty */}
  return WrappedError;
};

/* eslint-disable no-unused-vars -- required for functions `.length` */
var $$35 = _export;
var global$P = global$10;
var apply$8 = functionApply$1;
var wrapErrorConstructorWithCause$1 = wrapErrorConstructorWithCause$2;
var WEB_ASSEMBLY = 'WebAssembly';
var WebAssembly = global$P[WEB_ASSEMBLY];

// eslint-disable-next-line es/no-error-cause -- feature detection
var FORCED$D = new Error('e', {
  cause: 7
}).cause !== 7;
var exportGlobalErrorCauseWrapper = function exportGlobalErrorCauseWrapper(ERROR_NAME, wrapper) {
  var O = {};
  O[ERROR_NAME] = wrapErrorConstructorWithCause$1(ERROR_NAME, wrapper, FORCED$D);
  $$35({
    global: true,
    constructor: true,
    arity: 1,
    forced: FORCED$D
  }, O);
};
var exportWebAssemblyErrorCauseWrapper = function exportWebAssemblyErrorCauseWrapper(ERROR_NAME, wrapper) {
  if (WebAssembly && WebAssembly[ERROR_NAME]) {
    var O = {};
    O[ERROR_NAME] = wrapErrorConstructorWithCause$1(WEB_ASSEMBLY + '.' + ERROR_NAME, wrapper, FORCED$D);
    $$35({
      target: WEB_ASSEMBLY,
      stat: true,
      constructor: true,
      arity: 1,
      forced: FORCED$D
    }, O);
  }
};

// https://tc39.es/ecma262/#sec-nativeerror
exportGlobalErrorCauseWrapper('Error', function (init) {
  return function Error(message) {
    return apply$8(init, this, arguments);
  };
});
exportGlobalErrorCauseWrapper('EvalError', function (init) {
  return function EvalError(message) {
    return apply$8(init, this, arguments);
  };
});
exportGlobalErrorCauseWrapper('RangeError', function (init) {
  return function RangeError(message) {
    return apply$8(init, this, arguments);
  };
});
exportGlobalErrorCauseWrapper('ReferenceError', function (init) {
  return function ReferenceError(message) {
    return apply$8(init, this, arguments);
  };
});
exportGlobalErrorCauseWrapper('SyntaxError', function (init) {
  return function SyntaxError(message) {
    return apply$8(init, this, arguments);
  };
});
exportGlobalErrorCauseWrapper('TypeError', function (init) {
  return function TypeError(message) {
    return apply$8(init, this, arguments);
  };
});
exportGlobalErrorCauseWrapper('URIError', function (init) {
  return function URIError(message) {
    return apply$8(init, this, arguments);
  };
});
exportWebAssemblyErrorCauseWrapper('CompileError', function (init) {
  return function CompileError(message) {
    return apply$8(init, this, arguments);
  };
});
exportWebAssemblyErrorCauseWrapper('LinkError', function (init) {
  return function LinkError(message) {
    return apply$8(init, this, arguments);
  };
});
exportWebAssemblyErrorCauseWrapper('RuntimeError', function (init) {
  return function RuntimeError(message) {
    return apply$8(init, this, arguments);
  };
});

var DESCRIPTORS$C = descriptors;
var fails$1f = fails$1t;
var anObject$x = anObject$D;
var normalizeStringArgument$3 = normalizeStringArgument$5;
var nativeErrorToString = Error.prototype.toString;
var INCORRECT_TO_STRING$1 = fails$1f(function () {
  if (DESCRIPTORS$C) {
    // Chrome 32- incorrectly call accessor
    // eslint-disable-next-line es/no-object-create, es/no-object-defineproperty -- safe
    var object = Object.create(Object.defineProperty({}, 'name', {
      get: function get() {
        return this === object;
      }
    }));
    if (nativeErrorToString.call(object) !== 'true') return true;
  }
  // FF10- does not properly handle non-strings
  return nativeErrorToString.call({
    message: 1,
    name: 2
  }) !== '2: 1'
  // IE8 does not properly handle defaults
  || nativeErrorToString.call({}) !== 'Error';
});
var errorToString$2 = INCORRECT_TO_STRING$1 ? function toString() {
  var O = anObject$x(this);
  var name = normalizeStringArgument$3(O.name, 'Error');
  var message = normalizeStringArgument$3(O.message);
  return !name ? message : !message ? name : name + ': ' + message;
} : nativeErrorToString;

var defineBuiltIn$k = defineBuiltIn$o;
var errorToString$1 = errorToString$2;
var ErrorPrototype$1 = Error.prototype;

// `Error.prototype.toString` method fix
// https://tc39.es/ecma262/#sec-error.prototype.tostring
if (ErrorPrototype$1.toString !== errorToString$1) {
  defineBuiltIn$k(ErrorPrototype$1, 'toString', errorToString$1);
}

var fails$1e = fails$1t;
var correctPrototypeGetter = !fails$1e(function () {
  function F() {/* empty */}
  F.prototype.constructor = null;
  // eslint-disable-next-line es/no-object-getprototypeof -- required for testing
  return Object.getPrototypeOf(new F()) !== F.prototype;
});

var hasOwn$h = hasOwnProperty_1;
var isCallable$h = isCallable$y;
var toObject$p = toObject$t;
var sharedKey = sharedKey$4;
var CORRECT_PROTOTYPE_GETTER$2 = correctPrototypeGetter;
var IE_PROTO = sharedKey('IE_PROTO');
var $Object$1 = Object;
var ObjectPrototype$4 = $Object$1.prototype;

// `Object.getPrototypeOf` method
// https://tc39.es/ecma262/#sec-object.getprototypeof
// eslint-disable-next-line es/no-object-getprototypeof -- safe
var objectGetPrototypeOf$2 = CORRECT_PROTOTYPE_GETTER$2 ? $Object$1.getPrototypeOf : function (O) {
  var object = toObject$p(O);
  if (hasOwn$h(object, IE_PROTO)) return object[IE_PROTO];
  var constructor = object.constructor;
  if (isCallable$h(constructor) && object instanceof constructor) {
    return constructor.prototype;
  }
  return object instanceof $Object$1 ? ObjectPrototype$4 : null;
};

var iterators = {};

var wellKnownSymbol$q = wellKnownSymbol$z;
var Iterators$4 = iterators;
var ITERATOR$a = wellKnownSymbol$q('iterator');
var ArrayPrototype$1 = Array.prototype;

// check on default Array iterator
var isArrayIteratorMethod$3 = function isArrayIteratorMethod(it) {
  return it !== undefined && (Iterators$4.Array === it || ArrayPrototype$1[ITERATOR$a] === it);
};

var classof$h = classof$n;
var getMethod$7 = getMethod$9;
var isNullOrUndefined$b = isNullOrUndefined$e;
var Iterators$3 = iterators;
var wellKnownSymbol$p = wellKnownSymbol$z;
var ITERATOR$9 = wellKnownSymbol$p('iterator');
var getIteratorMethod$5 = function getIteratorMethod(it) {
  if (!isNullOrUndefined$b(it)) return getMethod$7(it, ITERATOR$9) || getMethod$7(it, '@@iterator') || Iterators$3[classof$h(it)];
};

var call$y = functionCall;
var aCallable$k = aCallable$o;
var anObject$w = anObject$D;
var tryToString$4 = tryToString$7;
var getIteratorMethod$4 = getIteratorMethod$5;
var $TypeError$k = TypeError;
var getIterator$4 = function getIterator(argument, usingIterator) {
  var iteratorMethod = arguments.length < 2 ? getIteratorMethod$4(argument) : usingIterator;
  if (aCallable$k(iteratorMethod)) return anObject$w(call$y(iteratorMethod, argument));
  throw new $TypeError$k(tryToString$4(argument) + ' is not iterable');
};

var call$x = functionCall;
var anObject$v = anObject$D;
var getMethod$6 = getMethod$9;
var iteratorClose$4 = function iteratorClose(iterator, kind, value) {
  var innerResult, innerError;
  anObject$v(iterator);
  try {
    innerResult = getMethod$6(iterator, 'return');
    if (!innerResult) {
      if (kind === 'throw') throw value;
      return value;
    }
    innerResult = call$x(innerResult, iterator);
  } catch (error) {
    innerError = true;
    innerResult = error;
  }
  if (kind === 'throw') throw value;
  if (innerError) throw innerResult;
  anObject$v(innerResult);
  return value;
};

var bind$d = functionBindContext;
var call$w = functionCall;
var anObject$u = anObject$D;
var tryToString$3 = tryToString$7;
var isArrayIteratorMethod$2 = isArrayIteratorMethod$3;
var lengthOfArrayLike$p = lengthOfArrayLike$s;
var isPrototypeOf$8 = objectIsPrototypeOf;
var getIterator$3 = getIterator$4;
var getIteratorMethod$3 = getIteratorMethod$5;
var iteratorClose$3 = iteratorClose$4;
var $TypeError$j = TypeError;
var Result = function Result(stopped, result) {
  this.stopped = stopped;
  this.result = result;
};
var ResultPrototype = Result.prototype;
var iterate$e = function iterate(iterable, unboundFunction, options) {
  var that = options && options.that;
  var AS_ENTRIES = !!(options && options.AS_ENTRIES);
  var IS_RECORD = !!(options && options.IS_RECORD);
  var IS_ITERATOR = !!(options && options.IS_ITERATOR);
  var INTERRUPTED = !!(options && options.INTERRUPTED);
  var fn = bind$d(unboundFunction, that);
  var iterator, iterFn, index, length, result, next, step;
  var stop = function stop(condition) {
    if (iterator) iteratorClose$3(iterator, 'normal', condition);
    return new Result(true, condition);
  };
  var callFn = function callFn(value) {
    if (AS_ENTRIES) {
      anObject$u(value);
      return INTERRUPTED ? fn(value[0], value[1], stop) : fn(value[0], value[1]);
    }
    return INTERRUPTED ? fn(value, stop) : fn(value);
  };
  if (IS_RECORD) {
    iterator = iterable.iterator;
  } else if (IS_ITERATOR) {
    iterator = iterable;
  } else {
    iterFn = getIteratorMethod$3(iterable);
    if (!iterFn) throw new $TypeError$j(tryToString$3(iterable) + ' is not iterable');
    // optimisation for array iterators
    if (isArrayIteratorMethod$2(iterFn)) {
      for (index = 0, length = lengthOfArrayLike$p(iterable); length > index; index++) {
        result = callFn(iterable[index]);
        if (result && isPrototypeOf$8(ResultPrototype, result)) return result;
      }
      return new Result(false);
    }
    iterator = getIterator$3(iterable, iterFn);
  }
  next = IS_RECORD ? iterable.next : iterator.next;
  while (!(step = call$w(next, iterator)).done) {
    try {
      result = callFn(step.value);
    } catch (error) {
      iteratorClose$3(iterator, 'throw', error);
    }
    if (_typeof(result) == 'object' && result && isPrototypeOf$8(ResultPrototype, result)) return result;
  }
  return new Result(false);
};

var $$34 = _export;
var isPrototypeOf$7 = objectIsPrototypeOf;
var getPrototypeOf$9 = objectGetPrototypeOf$2;
var setPrototypeOf$7 = objectSetPrototypeOf$1;
var copyConstructorProperties$2 = copyConstructorProperties$6;
var create$b = objectCreate;
var createNonEnumerableProperty$9 = createNonEnumerableProperty$f;
var createPropertyDescriptor$7 = createPropertyDescriptor$c;
var installErrorCause = installErrorCause$2;
var installErrorStack = errorStackInstall;
var iterate$d = iterate$e;
var normalizeStringArgument$2 = normalizeStringArgument$5;
var wellKnownSymbol$o = wellKnownSymbol$z;
var TO_STRING_TAG$1 = wellKnownSymbol$o('toStringTag');
var $Error = Error;
var push$d = [].push;
var $AggregateError$1 = function AggregateError(errors, message /* , options */) {
  var isInstance = isPrototypeOf$7(AggregateErrorPrototype, this);
  var that;
  if (setPrototypeOf$7) {
    that = setPrototypeOf$7(new $Error(), isInstance ? getPrototypeOf$9(this) : AggregateErrorPrototype);
  } else {
    that = isInstance ? this : create$b(AggregateErrorPrototype);
    createNonEnumerableProperty$9(that, TO_STRING_TAG$1, 'Error');
  }
  if (message !== undefined) createNonEnumerableProperty$9(that, 'message', normalizeStringArgument$2(message));
  installErrorStack(that, $AggregateError$1, that.stack, 1);
  if (arguments.length > 2) installErrorCause(that, arguments[2]);
  var errorsArray = [];
  iterate$d(errors, push$d, {
    that: errorsArray
  });
  createNonEnumerableProperty$9(that, 'errors', errorsArray);
  return that;
};
if (setPrototypeOf$7) setPrototypeOf$7($AggregateError$1, $Error);else copyConstructorProperties$2($AggregateError$1, $Error, {
  name: true
});
var AggregateErrorPrototype = $AggregateError$1.prototype = create$b($Error.prototype, {
  constructor: createPropertyDescriptor$7(1, $AggregateError$1),
  message: createPropertyDescriptor$7(1, ''),
  name: createPropertyDescriptor$7(1, 'AggregateError')
});

// `AggregateError` constructor
// https://tc39.es/ecma262/#sec-aggregate-error-constructor
$$34({
  global: true,
  constructor: true,
  arity: 2
}, {
  AggregateError: $AggregateError$1
});

var $$33 = _export;
var getBuiltIn$h = getBuiltIn$r;
var apply$7 = functionApply$1;
var fails$1d = fails$1t;
var wrapErrorConstructorWithCause = wrapErrorConstructorWithCause$2;
var AGGREGATE_ERROR = 'AggregateError';
var $AggregateError = getBuiltIn$h(AGGREGATE_ERROR);
var FORCED$C = !fails$1d(function () {
  return $AggregateError([1]).errors[0] !== 1;
}) && fails$1d(function () {
  return $AggregateError([1], AGGREGATE_ERROR, {
    cause: 7
  }).cause !== 7;
});

// https://tc39.es/ecma262/#sec-aggregate-error
$$33({
  global: true,
  constructor: true,
  arity: 2,
  forced: FORCED$C
}, {
  AggregateError: wrapErrorConstructorWithCause(AGGREGATE_ERROR, function (init) {
    // eslint-disable-next-line no-unused-vars -- required for functions `.length`
    return function AggregateError(errors, message) {
      return apply$7(init, this, arguments);
    };
  }, FORCED$C, true)
});

var wellKnownSymbol$n = wellKnownSymbol$z;
var create$a = objectCreate;
var defineProperty$8 = objectDefineProperty.f;
var UNSCOPABLES = wellKnownSymbol$n('unscopables');
var ArrayPrototype = Array.prototype;

// Array.prototype[@@unscopables]
// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
if (ArrayPrototype[UNSCOPABLES] === undefined) {
  defineProperty$8(ArrayPrototype, UNSCOPABLES, {
    configurable: true,
    value: create$a(null)
  });
}

// add a key to Array.prototype[@@unscopables]
var addToUnscopables$e = function addToUnscopables(key) {
  ArrayPrototype[UNSCOPABLES][key] = true;
};

var $$32 = _export;
var toObject$o = toObject$t;
var lengthOfArrayLike$o = lengthOfArrayLike$s;
var toIntegerOrInfinity$j = toIntegerOrInfinity$m;
var addToUnscopables$d = addToUnscopables$e;

// `Array.prototype.at` method
// https://tc39.es/ecma262/#sec-array.prototype.at
$$32({
  target: 'Array',
  proto: true
}, {
  at: function at(index) {
    var O = toObject$o(this);
    var len = lengthOfArrayLike$o(O);
    var relativeIndex = toIntegerOrInfinity$j(index);
    var k = relativeIndex >= 0 ? relativeIndex : len + relativeIndex;
    return k < 0 || k >= len ? undefined : O[k];
  }
});
addToUnscopables$d('at');

var $TypeError$i = TypeError;
var MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF; // 2 ** 53 - 1 == 9007199254740991

var doesNotExceedSafeInteger$6 = function doesNotExceedSafeInteger(it) {
  if (it > MAX_SAFE_INTEGER) throw $TypeError$i('Maximum allowed index exceeded');
  return it;
};

var DESCRIPTORS$B = descriptors;
var definePropertyModule$6 = objectDefineProperty;
var createPropertyDescriptor$6 = createPropertyDescriptor$c;
var createProperty$8 = function createProperty(object, key, value) {
  if (DESCRIPTORS$B) definePropertyModule$6.f(object, key, createPropertyDescriptor$6(0, value));else object[key] = value;
};

var fails$1c = fails$1t;
var wellKnownSymbol$m = wellKnownSymbol$z;
var V8_VERSION$2 = engineV8Version;
var SPECIES$5 = wellKnownSymbol$m('species');
var arrayMethodHasSpeciesSupport$5 = function arrayMethodHasSpeciesSupport(METHOD_NAME) {
  // We can't use this feature detection in V8 since it causes
  // deoptimization and serious performance degradation
  // https://github.com/zloirock/core-js/issues/677
  return V8_VERSION$2 >= 51 || !fails$1c(function () {
    var array = [];
    var constructor = array.constructor = {};
    constructor[SPECIES$5] = function () {
      return {
        foo: 1
      };
    };
    return array[METHOD_NAME](Boolean).foo !== 1;
  });
};

var $$31 = _export;
var fails$1b = fails$1t;
var isArray$6 = isArray$9;
var isObject$q = isObject$B;
var toObject$n = toObject$t;
var lengthOfArrayLike$n = lengthOfArrayLike$s;
var doesNotExceedSafeInteger$5 = doesNotExceedSafeInteger$6;
var createProperty$7 = createProperty$8;
var arraySpeciesCreate$3 = arraySpeciesCreate$5;
var arrayMethodHasSpeciesSupport$4 = arrayMethodHasSpeciesSupport$5;
var wellKnownSymbol$l = wellKnownSymbol$z;
var V8_VERSION$1 = engineV8Version;
var IS_CONCAT_SPREADABLE = wellKnownSymbol$l('isConcatSpreadable');

// We can't use this feature detection in V8 since it causes
// deoptimization and serious performance degradation
// https://github.com/zloirock/core-js/issues/679
var IS_CONCAT_SPREADABLE_SUPPORT = V8_VERSION$1 >= 51 || !fails$1b(function () {
  var array = [];
  array[IS_CONCAT_SPREADABLE] = false;
  return array.concat()[0] !== array;
});
var isConcatSpreadable = function isConcatSpreadable(O) {
  if (!isObject$q(O)) return false;
  var spreadable = O[IS_CONCAT_SPREADABLE];
  return spreadable !== undefined ? !!spreadable : isArray$6(O);
};
var FORCED$B = !IS_CONCAT_SPREADABLE_SUPPORT || !arrayMethodHasSpeciesSupport$4('concat');

// `Array.prototype.concat` method
// https://tc39.es/ecma262/#sec-array.prototype.concat
// with adding support of @@isConcatSpreadable and @@species
$$31({
  target: 'Array',
  proto: true,
  arity: 1,
  forced: FORCED$B
}, {
  // eslint-disable-next-line no-unused-vars -- required for `.length`
  concat: function concat(arg) {
    var O = toObject$n(this);
    var A = arraySpeciesCreate$3(O, 0);
    var n = 0;
    var i, k, length, len, E;
    for (i = -1, length = arguments.length; i < length; i++) {
      E = i === -1 ? O : arguments[i];
      if (isConcatSpreadable(E)) {
        len = lengthOfArrayLike$n(E);
        doesNotExceedSafeInteger$5(n + len);
        for (k = 0; k < len; k++, n++) if (k in E) createProperty$7(A, n, E[k]);
      } else {
        doesNotExceedSafeInteger$5(n + 1);
        createProperty$7(A, n++, E);
      }
    }
    A.length = n;
    return A;
  }
});

var tryToString$2 = tryToString$7;
var $TypeError$h = TypeError;
var deletePropertyOrThrow$4 = function deletePropertyOrThrow(O, P) {
  if (!delete O[P]) throw new $TypeError$h('Cannot delete property ' + tryToString$2(P) + ' of ' + tryToString$2(O));
};

var toObject$m = toObject$t;
var toAbsoluteIndex$7 = toAbsoluteIndex$9;
var lengthOfArrayLike$m = lengthOfArrayLike$s;
var deletePropertyOrThrow$3 = deletePropertyOrThrow$4;
var min$9 = Math.min;

// `Array.prototype.copyWithin` method implementation
// https://tc39.es/ecma262/#sec-array.prototype.copywithin
// eslint-disable-next-line es/no-array-prototype-copywithin -- safe
var arrayCopyWithin = [].copyWithin || function copyWithin(target /* = 0 */, start /* = 0, end = @length */) {
  var O = toObject$m(this);
  var len = lengthOfArrayLike$m(O);
  var to = toAbsoluteIndex$7(target, len);
  var from = toAbsoluteIndex$7(start, len);
  var end = arguments.length > 2 ? arguments[2] : undefined;
  var count = min$9((end === undefined ? len : toAbsoluteIndex$7(end, len)) - from, len - to);
  var inc = 1;
  if (from < to && to < from + count) {
    inc = -1;
    from += count - 1;
    to += count - 1;
  }
  while (count-- > 0) {
    if (from in O) O[to] = O[from];else deletePropertyOrThrow$3(O, to);
    to += inc;
    from += inc;
  }
  return O;
};

var $$30 = _export;
var copyWithin = arrayCopyWithin;
var addToUnscopables$c = addToUnscopables$e;

// `Array.prototype.copyWithin` method
// https://tc39.es/ecma262/#sec-array.prototype.copywithin
$$30({
  target: 'Array',
  proto: true
}, {
  copyWithin: copyWithin
});

// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables$c('copyWithin');

var fails$1a = fails$1t;
var arrayMethodIsStrict$9 = function arrayMethodIsStrict(METHOD_NAME, argument) {
  var method = [][METHOD_NAME];
  return !!method && fails$1a(function () {
    // eslint-disable-next-line no-useless-call -- required for testing
    method.call(null, argument || function () {
      return 1;
    }, 1);
  });
};

var $$2$ = _export;
var $every$1 = arrayIteration.every;
var arrayMethodIsStrict$8 = arrayMethodIsStrict$9;
var STRICT_METHOD$4 = arrayMethodIsStrict$8('every');

// `Array.prototype.every` method
// https://tc39.es/ecma262/#sec-array.prototype.every
$$2$({
  target: 'Array',
  proto: true,
  forced: !STRICT_METHOD$4
}, {
  every: function every(callbackfn /* , thisArg */) {
    return $every$1(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});

var toObject$l = toObject$t;
var toAbsoluteIndex$6 = toAbsoluteIndex$9;
var lengthOfArrayLike$l = lengthOfArrayLike$s;

// `Array.prototype.fill` method implementation
// https://tc39.es/ecma262/#sec-array.prototype.fill
var arrayFill$1 = function fill(value /* , start = 0, end = @length */) {
  var O = toObject$l(this);
  var length = lengthOfArrayLike$l(O);
  var argumentsLength = arguments.length;
  var index = toAbsoluteIndex$6(argumentsLength > 1 ? arguments[1] : undefined, length);
  var end = argumentsLength > 2 ? arguments[2] : undefined;
  var endPos = end === undefined ? length : toAbsoluteIndex$6(end, length);
  while (endPos > index) O[index++] = value;
  return O;
};

var $$2_ = _export;
var fill$1 = arrayFill$1;
var addToUnscopables$b = addToUnscopables$e;

// `Array.prototype.fill` method
// https://tc39.es/ecma262/#sec-array.prototype.fill
$$2_({
  target: 'Array',
  proto: true
}, {
  fill: fill$1
});

// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables$b('fill');

var $$2Z = _export;
var $filter$1 = arrayIteration.filter;
var arrayMethodHasSpeciesSupport$3 = arrayMethodHasSpeciesSupport$5;
var HAS_SPECIES_SUPPORT$3 = arrayMethodHasSpeciesSupport$3('filter');

// `Array.prototype.filter` method
// https://tc39.es/ecma262/#sec-array.prototype.filter
// with adding support of @@species
$$2Z({
  target: 'Array',
  proto: true,
  forced: !HAS_SPECIES_SUPPORT$3
}, {
  filter: function filter(callbackfn /* , thisArg */) {
    return $filter$1(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});

var $$2Y = _export;
var $find$1 = arrayIteration.find;
var addToUnscopables$a = addToUnscopables$e;
var FIND = 'find';
var SKIPS_HOLES$1 = true;

// Shouldn't skip holes
// eslint-disable-next-line es/no-array-prototype-find -- testing
if (FIND in []) Array(1)[FIND](function () {
  SKIPS_HOLES$1 = false;
});

// `Array.prototype.find` method
// https://tc39.es/ecma262/#sec-array.prototype.find
$$2Y({
  target: 'Array',
  proto: true,
  forced: SKIPS_HOLES$1
}, {
  find: function find(callbackfn /* , that = undefined */) {
    return $find$1(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});

// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables$a(FIND);

var $$2X = _export;
var $findIndex$1 = arrayIteration.findIndex;
var addToUnscopables$9 = addToUnscopables$e;
var FIND_INDEX = 'findIndex';
var SKIPS_HOLES = true;

// Shouldn't skip holes
// eslint-disable-next-line es/no-array-prototype-findindex -- testing
if (FIND_INDEX in []) Array(1)[FIND_INDEX](function () {
  SKIPS_HOLES = false;
});

// `Array.prototype.findIndex` method
// https://tc39.es/ecma262/#sec-array.prototype.findindex
$$2X({
  target: 'Array',
  proto: true,
  forced: SKIPS_HOLES
}, {
  findIndex: function findIndex(callbackfn /* , that = undefined */) {
    return $findIndex$1(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});

// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables$9(FIND_INDEX);

var bind$c = functionBindContext;
var IndexedObject$3 = indexedObject;
var toObject$k = toObject$t;
var lengthOfArrayLike$k = lengthOfArrayLike$s;

// `Array.prototype.{ findLast, findLastIndex }` methods implementation
var createMethod$5 = function createMethod(TYPE) {
  var IS_FIND_LAST_INDEX = TYPE === 1;
  return function ($this, callbackfn, that) {
    var O = toObject$k($this);
    var self = IndexedObject$3(O);
    var index = lengthOfArrayLike$k(self);
    var boundFunction = bind$c(callbackfn, that);
    var value, result;
    while (index-- > 0) {
      value = self[index];
      result = boundFunction(value, index, O);
      if (result) switch (TYPE) {
        case 0:
          return value;
        // findLast
        case 1:
          return index;
        // findLastIndex
      }
    }
    return IS_FIND_LAST_INDEX ? -1 : undefined;
  };
};
var arrayIterationFromLast = {
  // `Array.prototype.findLast` method
  // https://github.com/tc39/proposal-array-find-from-last
  findLast: createMethod$5(0),
  // `Array.prototype.findLastIndex` method
  // https://github.com/tc39/proposal-array-find-from-last
  findLastIndex: createMethod$5(1)
};

var $$2W = _export;
var $findLast$1 = arrayIterationFromLast.findLast;
var addToUnscopables$8 = addToUnscopables$e;

// `Array.prototype.findLast` method
// https://tc39.es/ecma262/#sec-array.prototype.findlast
$$2W({
  target: 'Array',
  proto: true
}, {
  findLast: function findLast(callbackfn /* , that = undefined */) {
    return $findLast$1(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});
addToUnscopables$8('findLast');

var $$2V = _export;
var $findLastIndex$1 = arrayIterationFromLast.findLastIndex;
var addToUnscopables$7 = addToUnscopables$e;

// `Array.prototype.findLastIndex` method
// https://tc39.es/ecma262/#sec-array.prototype.findlastindex
$$2V({
  target: 'Array',
  proto: true
}, {
  findLastIndex: function findLastIndex(callbackfn /* , that = undefined */) {
    return $findLastIndex$1(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});
addToUnscopables$7('findLastIndex');

var isArray$5 = isArray$9;
var lengthOfArrayLike$j = lengthOfArrayLike$s;
var doesNotExceedSafeInteger$4 = doesNotExceedSafeInteger$6;
var bind$b = functionBindContext;

// `FlattenIntoArray` abstract operation
// https://tc39.github.io/proposal-flatMap/#sec-FlattenIntoArray
var flattenIntoArray$2 = function flattenIntoArray(target, original, source, sourceLen, start, depth, mapper, thisArg) {
  var targetIndex = start;
  var sourceIndex = 0;
  var mapFn = mapper ? bind$b(mapper, thisArg) : false;
  var element, elementLen;
  while (sourceIndex < sourceLen) {
    if (sourceIndex in source) {
      element = mapFn ? mapFn(source[sourceIndex], sourceIndex, original) : source[sourceIndex];
      if (depth > 0 && isArray$5(element)) {
        elementLen = lengthOfArrayLike$j(element);
        targetIndex = flattenIntoArray(target, original, element, elementLen, targetIndex, depth - 1) - 1;
      } else {
        doesNotExceedSafeInteger$4(targetIndex + 1);
        target[targetIndex] = element;
      }
      targetIndex++;
    }
    sourceIndex++;
  }
  return targetIndex;
};
var flattenIntoArray_1 = flattenIntoArray$2;

var $$2U = _export;
var flattenIntoArray$1 = flattenIntoArray_1;
var toObject$j = toObject$t;
var lengthOfArrayLike$i = lengthOfArrayLike$s;
var toIntegerOrInfinity$i = toIntegerOrInfinity$m;
var arraySpeciesCreate$2 = arraySpeciesCreate$5;

// `Array.prototype.flat` method
// https://tc39.es/ecma262/#sec-array.prototype.flat
$$2U({
  target: 'Array',
  proto: true
}, {
  flat: function flat( /* depthArg = 1 */
  ) {
    var depthArg = arguments.length ? arguments[0] : undefined;
    var O = toObject$j(this);
    var sourceLen = lengthOfArrayLike$i(O);
    var A = arraySpeciesCreate$2(O, 0);
    A.length = flattenIntoArray$1(A, O, O, sourceLen, 0, depthArg === undefined ? 1 : toIntegerOrInfinity$i(depthArg));
    return A;
  }
});

var $$2T = _export;
var flattenIntoArray = flattenIntoArray_1;
var aCallable$j = aCallable$o;
var toObject$i = toObject$t;
var lengthOfArrayLike$h = lengthOfArrayLike$s;
var arraySpeciesCreate$1 = arraySpeciesCreate$5;

// `Array.prototype.flatMap` method
// https://tc39.es/ecma262/#sec-array.prototype.flatmap
$$2T({
  target: 'Array',
  proto: true
}, {
  flatMap: function flatMap(callbackfn /* , thisArg */) {
    var O = toObject$i(this);
    var sourceLen = lengthOfArrayLike$h(O);
    var A;
    aCallable$j(callbackfn);
    A = arraySpeciesCreate$1(O, 0);
    A.length = flattenIntoArray(A, O, O, sourceLen, 0, 1, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
    return A;
  }
});

var $forEach$1 = arrayIteration.forEach;
var arrayMethodIsStrict$7 = arrayMethodIsStrict$9;
var STRICT_METHOD$3 = arrayMethodIsStrict$7('forEach');

// `Array.prototype.forEach` method implementation
// https://tc39.es/ecma262/#sec-array.prototype.foreach
var arrayForEach = !STRICT_METHOD$3 ? function forEach(callbackfn /* , thisArg */) {
  return $forEach$1(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  // eslint-disable-next-line es/no-array-prototype-foreach -- safe
} : [].forEach;

var $$2S = _export;
var forEach$5 = arrayForEach;

// `Array.prototype.forEach` method
// https://tc39.es/ecma262/#sec-array.prototype.foreach
// eslint-disable-next-line es/no-array-prototype-foreach -- safe
$$2S({
  target: 'Array',
  proto: true,
  forced: [].forEach !== forEach$5
}, {
  forEach: forEach$5
});

var anObject$t = anObject$D;
var iteratorClose$2 = iteratorClose$4;

// call something on iterator step with safe closing on error
var callWithSafeIterationClosing$1 = function callWithSafeIterationClosing(iterator, fn, value, ENTRIES) {
  try {
    return ENTRIES ? fn(anObject$t(value)[0], value[1]) : fn(value);
  } catch (error) {
    iteratorClose$2(iterator, 'throw', error);
  }
};

var bind$a = functionBindContext;
var call$v = functionCall;
var toObject$h = toObject$t;
var callWithSafeIterationClosing = callWithSafeIterationClosing$1;
var isArrayIteratorMethod$1 = isArrayIteratorMethod$3;
var isConstructor$4 = isConstructor$6;
var lengthOfArrayLike$g = lengthOfArrayLike$s;
var createProperty$6 = createProperty$8;
var getIterator$2 = getIterator$4;
var getIteratorMethod$2 = getIteratorMethod$5;
var $Array$8 = Array;

// `Array.from` method implementation
// https://tc39.es/ecma262/#sec-array.from
var arrayFrom$1 = function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {
  var O = toObject$h(arrayLike);
  var IS_CONSTRUCTOR = isConstructor$4(this);
  var argumentsLength = arguments.length;
  var mapfn = argumentsLength > 1 ? arguments[1] : undefined;
  var mapping = mapfn !== undefined;
  if (mapping) mapfn = bind$a(mapfn, argumentsLength > 2 ? arguments[2] : undefined);
  var iteratorMethod = getIteratorMethod$2(O);
  var index = 0;
  var length, result, step, iterator, next, value;
  // if the target is not iterable or it's an array with the default iterator - use a simple case
  if (iteratorMethod && !(this === $Array$8 && isArrayIteratorMethod$1(iteratorMethod))) {
    result = IS_CONSTRUCTOR ? new this() : [];
    iterator = getIterator$2(O, iteratorMethod);
    next = iterator.next;
    for (; !(step = call$v(next, iterator)).done; index++) {
      value = mapping ? callWithSafeIterationClosing(iterator, mapfn, [step.value, index], true) : step.value;
      createProperty$6(result, index, value);
    }
  } else {
    length = lengthOfArrayLike$g(O);
    result = IS_CONSTRUCTOR ? new this(length) : $Array$8(length);
    for (; length > index; index++) {
      value = mapping ? mapfn(O[index], index) : O[index];
      createProperty$6(result, index, value);
    }
  }
  result.length = index;
  return result;
};

var wellKnownSymbol$k = wellKnownSymbol$z;
var ITERATOR$8 = wellKnownSymbol$k('iterator');
var SAFE_CLOSING = false;
try {
  var called = 0;
  var iteratorWithReturn = {
    next: function next() {
      return {
        done: !!called++
      };
    },
    'return': function _return() {
      SAFE_CLOSING = true;
    }
  };
  iteratorWithReturn[ITERATOR$8] = function () {
    return this;
  };
  // eslint-disable-next-line es/no-array-from, no-throw-literal -- required for testing
  Array.from(iteratorWithReturn, function () {
    throw 2;
  });
} catch (error) {/* empty */}
var checkCorrectnessOfIteration$4 = function checkCorrectnessOfIteration(exec, SKIP_CLOSING) {
  try {
    if (!SKIP_CLOSING && !SAFE_CLOSING) return false;
  } catch (error) {
    return false;
  } // workaround of old WebKit + `eval` bug
  var ITERATION_SUPPORT = false;
  try {
    var object = {};
    object[ITERATOR$8] = function () {
      return {
        next: function next() {
          return {
            done: ITERATION_SUPPORT = true
          };
        }
      };
    };
    exec(object);
  } catch (error) {/* empty */}
  return ITERATION_SUPPORT;
};

var $$2R = _export;
var from = arrayFrom$1;
var checkCorrectnessOfIteration$3 = checkCorrectnessOfIteration$4;
var INCORRECT_ITERATION = !checkCorrectnessOfIteration$3(function (iterable) {
  // eslint-disable-next-line es/no-array-from -- required for testing
  Array.from(iterable);
});

// `Array.from` method
// https://tc39.es/ecma262/#sec-array.from
$$2R({
  target: 'Array',
  stat: true,
  forced: INCORRECT_ITERATION
}, {
  from: from
});

var $$2Q = _export;
var $includes$1 = arrayIncludes.includes;
var fails$19 = fails$1t;
var addToUnscopables$6 = addToUnscopables$e;

// FF99+ bug
var BROKEN_ON_SPARSE = fails$19(function () {
  // eslint-disable-next-line es/no-array-prototype-includes -- detection
  return !Array(1).includes();
});

// `Array.prototype.includes` method
// https://tc39.es/ecma262/#sec-array.prototype.includes
$$2Q({
  target: 'Array',
  proto: true,
  forced: BROKEN_ON_SPARSE
}, {
  includes: function includes(el /* , fromIndex = 0 */) {
    return $includes$1(this, el, arguments.length > 1 ? arguments[1] : undefined);
  }
});

// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables$6('includes');

/* eslint-disable es/no-array-prototype-indexof -- required for testing */
var $$2P = _export;
var uncurryThis$17 = functionUncurryThisClause;
var $indexOf$1 = arrayIncludes.indexOf;
var arrayMethodIsStrict$6 = arrayMethodIsStrict$9;
var nativeIndexOf = uncurryThis$17([].indexOf);
var NEGATIVE_ZERO$1 = !!nativeIndexOf && 1 / nativeIndexOf([1], 1, -0) < 0;
var FORCED$A = NEGATIVE_ZERO$1 || !arrayMethodIsStrict$6('indexOf');

// `Array.prototype.indexOf` method
// https://tc39.es/ecma262/#sec-array.prototype.indexof
$$2P({
  target: 'Array',
  proto: true,
  forced: FORCED$A
}, {
  indexOf: function indexOf(searchElement /* , fromIndex = 0 */) {
    var fromIndex = arguments.length > 1 ? arguments[1] : undefined;
    return NEGATIVE_ZERO$1
    // convert -0 to +0
    ? nativeIndexOf(this, searchElement, fromIndex) || 0 : $indexOf$1(this, searchElement, fromIndex);
  }
});

var $$2O = _export;
var isArray$4 = isArray$9;

// `Array.isArray` method
// https://tc39.es/ecma262/#sec-array.isarray
$$2O({
  target: 'Array',
  stat: true
}, {
  isArray: isArray$4
});

var fails$18 = fails$1t;
var isCallable$g = isCallable$y;
var isObject$p = isObject$B;
var getPrototypeOf$8 = objectGetPrototypeOf$2;
var defineBuiltIn$j = defineBuiltIn$o;
var wellKnownSymbol$j = wellKnownSymbol$z;
var ITERATOR$7 = wellKnownSymbol$j('iterator');
var BUGGY_SAFARI_ITERATORS$1 = false;

// `%IteratorPrototype%` object
// https://tc39.es/ecma262/#sec-%iteratorprototype%-object
var IteratorPrototype$2, PrototypeOfArrayIteratorPrototype, arrayIterator;

/* eslint-disable es/no-array-prototype-keys -- safe */
if ([].keys) {
  arrayIterator = [].keys();
  // Safari 8 has buggy iterators w/o `next`
  if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS$1 = true;else {
    PrototypeOfArrayIteratorPrototype = getPrototypeOf$8(getPrototypeOf$8(arrayIterator));
    if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype$2 = PrototypeOfArrayIteratorPrototype;
  }
}
var NEW_ITERATOR_PROTOTYPE = !isObject$p(IteratorPrototype$2) || fails$18(function () {
  var test = {};
  // FF44- legacy iterators case
  return IteratorPrototype$2[ITERATOR$7].call(test) !== test;
});
if (NEW_ITERATOR_PROTOTYPE) IteratorPrototype$2 = {};

// `%IteratorPrototype%[@@iterator]()` method
// https://tc39.es/ecma262/#sec-%iteratorprototype%-@@iterator
if (!isCallable$g(IteratorPrototype$2[ITERATOR$7])) {
  defineBuiltIn$j(IteratorPrototype$2, ITERATOR$7, function () {
    return this;
  });
}
var iteratorsCore = {
  IteratorPrototype: IteratorPrototype$2,
  BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS$1
};

var IteratorPrototype$1 = iteratorsCore.IteratorPrototype;
var create$9 = objectCreate;
var createPropertyDescriptor$5 = createPropertyDescriptor$c;
var setToStringTag$b = setToStringTag$e;
var Iterators$2 = iterators;
var returnThis$1 = function returnThis() {
  return this;
};
var iteratorCreateConstructor = function iteratorCreateConstructor(IteratorConstructor, NAME, next, ENUMERABLE_NEXT) {
  var TO_STRING_TAG = NAME + ' Iterator';
  IteratorConstructor.prototype = create$9(IteratorPrototype$1, {
    next: createPropertyDescriptor$5(+!ENUMERABLE_NEXT, next)
  });
  setToStringTag$b(IteratorConstructor, TO_STRING_TAG, false);
  Iterators$2[TO_STRING_TAG] = returnThis$1;
  return IteratorConstructor;
};

var $$2N = _export;
var call$u = functionCall;
var FunctionName$1 = functionName;
var isCallable$f = isCallable$y;
var createIteratorConstructor$2 = iteratorCreateConstructor;
var getPrototypeOf$7 = objectGetPrototypeOf$2;
var setPrototypeOf$6 = objectSetPrototypeOf$1;
var setToStringTag$a = setToStringTag$e;
var createNonEnumerableProperty$8 = createNonEnumerableProperty$f;
var defineBuiltIn$i = defineBuiltIn$o;
var wellKnownSymbol$i = wellKnownSymbol$z;
var Iterators$1 = iterators;
var IteratorsCore = iteratorsCore;
var PROPER_FUNCTION_NAME$3 = FunctionName$1.PROPER;
var CONFIGURABLE_FUNCTION_NAME$1 = FunctionName$1.CONFIGURABLE;
var IteratorPrototype = IteratorsCore.IteratorPrototype;
var BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;
var ITERATOR$6 = wellKnownSymbol$i('iterator');
var KEYS = 'keys';
var VALUES = 'values';
var ENTRIES = 'entries';
var returnThis = function returnThis() {
  return this;
};
var iteratorDefine = function iteratorDefine(Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {
  createIteratorConstructor$2(IteratorConstructor, NAME, next);
  var getIterationMethod = function getIterationMethod(KIND) {
    if (KIND === DEFAULT && defaultIterator) return defaultIterator;
    if (!BUGGY_SAFARI_ITERATORS && KIND && KIND in IterablePrototype) return IterablePrototype[KIND];
    switch (KIND) {
      case KEYS:
        return function keys() {
          return new IteratorConstructor(this, KIND);
        };
      case VALUES:
        return function values() {
          return new IteratorConstructor(this, KIND);
        };
      case ENTRIES:
        return function entries() {
          return new IteratorConstructor(this, KIND);
        };
    }
    return function () {
      return new IteratorConstructor(this);
    };
  };
  var TO_STRING_TAG = NAME + ' Iterator';
  var INCORRECT_VALUES_NAME = false;
  var IterablePrototype = Iterable.prototype;
  var nativeIterator = IterablePrototype[ITERATOR$6] || IterablePrototype['@@iterator'] || DEFAULT && IterablePrototype[DEFAULT];
  var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);
  var anyNativeIterator = NAME === 'Array' ? IterablePrototype.entries || nativeIterator : nativeIterator;
  var CurrentIteratorPrototype, methods, KEY;

  // fix native
  if (anyNativeIterator) {
    CurrentIteratorPrototype = getPrototypeOf$7(anyNativeIterator.call(new Iterable()));
    if (CurrentIteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {
      if (getPrototypeOf$7(CurrentIteratorPrototype) !== IteratorPrototype) {
        if (setPrototypeOf$6) {
          setPrototypeOf$6(CurrentIteratorPrototype, IteratorPrototype);
        } else if (!isCallable$f(CurrentIteratorPrototype[ITERATOR$6])) {
          defineBuiltIn$i(CurrentIteratorPrototype, ITERATOR$6, returnThis);
        }
      }
      // Set @@toStringTag to native iterators
      setToStringTag$a(CurrentIteratorPrototype, TO_STRING_TAG, true);
    }
  }

  // fix Array.prototype.{ values, @@iterator }.name in V8 / FF
  if (PROPER_FUNCTION_NAME$3 && DEFAULT === VALUES && nativeIterator && nativeIterator.name !== VALUES) {
    if (CONFIGURABLE_FUNCTION_NAME$1) {
      createNonEnumerableProperty$8(IterablePrototype, 'name', VALUES);
    } else {
      INCORRECT_VALUES_NAME = true;
      defaultIterator = function values() {
        return call$u(nativeIterator, this);
      };
    }
  }

  // export additional methods
  if (DEFAULT) {
    methods = {
      values: getIterationMethod(VALUES),
      keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),
      entries: getIterationMethod(ENTRIES)
    };
    if (FORCED) for (KEY in methods) {
      if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {
        defineBuiltIn$i(IterablePrototype, KEY, methods[KEY]);
      }
    } else $$2N({
      target: NAME,
      proto: true,
      forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME
    }, methods);
  }

  // define iterator
  if (IterablePrototype[ITERATOR$6] !== defaultIterator) {
    defineBuiltIn$i(IterablePrototype, ITERATOR$6, defaultIterator, {
      name: DEFAULT
    });
  }
  Iterators$1[NAME] = defaultIterator;
  return methods;
};

// `CreateIterResultObject` abstract operation
// https://tc39.es/ecma262/#sec-createiterresultobject
var createIterResultObject$5 = function createIterResultObject(value, done) {
  return {
    value: value,
    done: done
  };
};

var toIndexedObject$c = toIndexedObject$j;
var addToUnscopables$5 = addToUnscopables$e;
var Iterators = iterators;
var InternalStateModule$b = internalState;
var defineProperty$7 = objectDefineProperty.f;
var defineIterator$2 = iteratorDefine;
var createIterResultObject$4 = createIterResultObject$5;
var DESCRIPTORS$A = descriptors;
var ARRAY_ITERATOR = 'Array Iterator';
var setInternalState$a = InternalStateModule$b.set;
var getInternalState$8 = InternalStateModule$b.getterFor(ARRAY_ITERATOR);

// `Array.prototype.entries` method
// https://tc39.es/ecma262/#sec-array.prototype.entries
// `Array.prototype.keys` method
// https://tc39.es/ecma262/#sec-array.prototype.keys
// `Array.prototype.values` method
// https://tc39.es/ecma262/#sec-array.prototype.values
// `Array.prototype[@@iterator]` method
// https://tc39.es/ecma262/#sec-array.prototype-@@iterator
// `CreateArrayIterator` internal method
// https://tc39.es/ecma262/#sec-createarrayiterator
var es_array_iterator = defineIterator$2(Array, 'Array', function (iterated, kind) {
  setInternalState$a(this, {
    type: ARRAY_ITERATOR,
    target: toIndexedObject$c(iterated),
    // target
    index: 0,
    // next index
    kind: kind // kind
  });
  // `%ArrayIteratorPrototype%.next` method
  // https://tc39.es/ecma262/#sec-%arrayiteratorprototype%.next
}, function () {
  var state = getInternalState$8(this);
  var target = state.target;
  var index = state.index++;
  if (!target || index >= target.length) {
    state.target = undefined;
    return createIterResultObject$4(undefined, true);
  }
  switch (state.kind) {
    case 'keys':
      return createIterResultObject$4(index, false);
    case 'values':
      return createIterResultObject$4(target[index], false);
  }
  return createIterResultObject$4([index, target[index]], false);
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values%
// https://tc39.es/ecma262/#sec-createunmappedargumentsobject
// https://tc39.es/ecma262/#sec-createmappedargumentsobject
var values = Iterators.Arguments = Iterators.Array;

// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables$5('keys');
addToUnscopables$5('values');
addToUnscopables$5('entries');

// V8 ~ Chrome 45- bug
if (DESCRIPTORS$A && values.name !== 'values') try {
  defineProperty$7(values, 'name', {
    value: 'values'
  });
} catch (error) {/* empty */}

var $$2M = _export;
var uncurryThis$16 = functionUncurryThis;
var IndexedObject$2 = indexedObject;
var toIndexedObject$b = toIndexedObject$j;
var arrayMethodIsStrict$5 = arrayMethodIsStrict$9;
var nativeJoin = uncurryThis$16([].join);
var ES3_STRINGS = IndexedObject$2 !== Object;
var FORCED$z = ES3_STRINGS || !arrayMethodIsStrict$5('join', ',');

// `Array.prototype.join` method
// https://tc39.es/ecma262/#sec-array.prototype.join
$$2M({
  target: 'Array',
  proto: true,
  forced: FORCED$z
}, {
  join: function join(separator) {
    return nativeJoin(toIndexedObject$b(this), separator === undefined ? ',' : separator);
  }
});

/* eslint-disable es/no-array-prototype-lastindexof -- safe */
var apply$6 = functionApply$1;
var toIndexedObject$a = toIndexedObject$j;
var toIntegerOrInfinity$h = toIntegerOrInfinity$m;
var lengthOfArrayLike$f = lengthOfArrayLike$s;
var arrayMethodIsStrict$4 = arrayMethodIsStrict$9;
var min$8 = Math.min;
var $lastIndexOf$1 = [].lastIndexOf;
var NEGATIVE_ZERO = !!$lastIndexOf$1 && 1 / [1].lastIndexOf(1, -0) < 0;
var STRICT_METHOD$2 = arrayMethodIsStrict$4('lastIndexOf');
var FORCED$y = NEGATIVE_ZERO || !STRICT_METHOD$2;

// `Array.prototype.lastIndexOf` method implementation
// https://tc39.es/ecma262/#sec-array.prototype.lastindexof
var arrayLastIndexOf = FORCED$y ? function lastIndexOf(searchElement /* , fromIndex = @[*-1] */) {
  // convert -0 to +0
  if (NEGATIVE_ZERO) return apply$6($lastIndexOf$1, this, arguments) || 0;
  var O = toIndexedObject$a(this);
  var length = lengthOfArrayLike$f(O);
  if (length === 0) return -1;
  var index = length - 1;
  if (arguments.length > 1) index = min$8(index, toIntegerOrInfinity$h(arguments[1]));
  if (index < 0) index = length + index;
  for (; index >= 0; index--) if (index in O && O[index] === searchElement) return index || 0;
  return -1;
} : $lastIndexOf$1;

var $$2L = _export;
var lastIndexOf = arrayLastIndexOf;

// `Array.prototype.lastIndexOf` method
// https://tc39.es/ecma262/#sec-array.prototype.lastindexof
// eslint-disable-next-line es/no-array-prototype-lastindexof -- required for testing
$$2L({
  target: 'Array',
  proto: true,
  forced: lastIndexOf !== [].lastIndexOf
}, {
  lastIndexOf: lastIndexOf
});

var $$2K = _export;
var $map$1 = arrayIteration.map;
var arrayMethodHasSpeciesSupport$2 = arrayMethodHasSpeciesSupport$5;
var HAS_SPECIES_SUPPORT$2 = arrayMethodHasSpeciesSupport$2('map');

// `Array.prototype.map` method
// https://tc39.es/ecma262/#sec-array.prototype.map
// with adding support of @@species
$$2K({
  target: 'Array',
  proto: true,
  forced: !HAS_SPECIES_SUPPORT$2
}, {
  map: function map(callbackfn /* , thisArg */) {
    return $map$1(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});

var $$2J = _export;
var fails$17 = fails$1t;
var isConstructor$3 = isConstructor$6;
var createProperty$5 = createProperty$8;
var $Array$7 = Array;
var ISNT_GENERIC = fails$17(function () {
  function F() {/* empty */}
  // eslint-disable-next-line es/no-array-of -- safe
  return !($Array$7.of.call(F) instanceof F);
});

// `Array.of` method
// https://tc39.es/ecma262/#sec-array.of
// WebKit Array.of isn't generic
$$2J({
  target: 'Array',
  stat: true,
  forced: ISNT_GENERIC
}, {
  of: function of( /* ...args */
  ) {
    var index = 0;
    var argumentsLength = arguments.length;
    var result = new (isConstructor$3(this) ? this : $Array$7)(argumentsLength);
    while (argumentsLength > index) createProperty$5(result, index, arguments[index++]);
    result.length = argumentsLength;
    return result;
  }
});

var DESCRIPTORS$z = descriptors;
var isArray$3 = isArray$9;
var $TypeError$g = TypeError;
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var getOwnPropertyDescriptor$7 = Object.getOwnPropertyDescriptor;

// Safari < 13 does not throw an error in this case
var SILENT_ON_NON_WRITABLE_LENGTH_SET = DESCRIPTORS$z && !function () {
  // makes no sense without proper strict mode support
  if (this !== undefined) return true;
  try {
    // eslint-disable-next-line es/no-object-defineproperty -- safe
    Object.defineProperty([], 'length', {
      writable: false
    }).length = 1;
  } catch (error) {
    return error instanceof TypeError;
  }
}();
var arraySetLength = SILENT_ON_NON_WRITABLE_LENGTH_SET ? function (O, length) {
  if (isArray$3(O) && !getOwnPropertyDescriptor$7(O, 'length').writable) {
    throw new $TypeError$g('Cannot set read only .length');
  }
  return O.length = length;
} : function (O, length) {
  return O.length = length;
};

var $$2I = _export;
var toObject$g = toObject$t;
var lengthOfArrayLike$e = lengthOfArrayLike$s;
var setArrayLength$2 = arraySetLength;
var doesNotExceedSafeInteger$3 = doesNotExceedSafeInteger$6;
var fails$16 = fails$1t;
var INCORRECT_TO_LENGTH = fails$16(function () {
  return [].push.call({
    length: 0x100000000
  }, 1) !== 4294967297;
});

// V8 <= 121 and Safari <= 15.4; FF < 23 throws InternalError
// https://bugs.chromium.org/p/v8/issues/detail?id=12681
var properErrorOnNonWritableLength$1 = function properErrorOnNonWritableLength() {
  try {
    // eslint-disable-next-line es/no-object-defineproperty -- safe
    Object.defineProperty([], 'length', {
      writable: false
    }).push();
  } catch (error) {
    return error instanceof TypeError;
  }
};
var FORCED$x = INCORRECT_TO_LENGTH || !properErrorOnNonWritableLength$1();

// `Array.prototype.push` method
// https://tc39.es/ecma262/#sec-array.prototype.push
$$2I({
  target: 'Array',
  proto: true,
  arity: 1,
  forced: FORCED$x
}, {
  // eslint-disable-next-line no-unused-vars -- required for `.length`
  push: function push(item) {
    var O = toObject$g(this);
    var len = lengthOfArrayLike$e(O);
    var argCount = arguments.length;
    doesNotExceedSafeInteger$3(len + argCount);
    for (var i = 0; i < argCount; i++) {
      O[len] = arguments[i];
      len++;
    }
    setArrayLength$2(O, len);
    return len;
  }
});

var aCallable$i = aCallable$o;
var toObject$f = toObject$t;
var IndexedObject$1 = indexedObject;
var lengthOfArrayLike$d = lengthOfArrayLike$s;
var $TypeError$f = TypeError;
var REDUCE_EMPTY = 'Reduce of empty array with no initial value';

// `Array.prototype.{ reduce, reduceRight }` methods implementation
var createMethod$4 = function createMethod(IS_RIGHT) {
  return function (that, callbackfn, argumentsLength, memo) {
    var O = toObject$f(that);
    var self = IndexedObject$1(O);
    var length = lengthOfArrayLike$d(O);
    aCallable$i(callbackfn);
    if (length === 0 && argumentsLength < 2) throw new $TypeError$f(REDUCE_EMPTY);
    var index = IS_RIGHT ? length - 1 : 0;
    var i = IS_RIGHT ? -1 : 1;
    if (argumentsLength < 2) while (true) {
      if (index in self) {
        memo = self[index];
        index += i;
        break;
      }
      index += i;
      if (IS_RIGHT ? index < 0 : length <= index) {
        throw new $TypeError$f(REDUCE_EMPTY);
      }
    }
    for (; IS_RIGHT ? index >= 0 : length > index; index += i) if (index in self) {
      memo = callbackfn(memo, self[index], index, O);
    }
    return memo;
  };
};
var arrayReduce = {
  // `Array.prototype.reduce` method
  // https://tc39.es/ecma262/#sec-array.prototype.reduce
  left: createMethod$4(false),
  // `Array.prototype.reduceRight` method
  // https://tc39.es/ecma262/#sec-array.prototype.reduceright
  right: createMethod$4(true)
};

var global$O = global$10;
var classof$g = classofRaw$2;
var engineIsNode = classof$g(global$O.process) === 'process';

var $$2H = _export;
var $reduce$1 = arrayReduce.left;
var arrayMethodIsStrict$3 = arrayMethodIsStrict$9;
var CHROME_VERSION$1 = engineV8Version;
var IS_NODE$7 = engineIsNode;

// Chrome 80-82 has a critical bug
// https://bugs.chromium.org/p/chromium/issues/detail?id=1049982
var CHROME_BUG$1 = !IS_NODE$7 && CHROME_VERSION$1 > 79 && CHROME_VERSION$1 < 83;
var FORCED$w = CHROME_BUG$1 || !arrayMethodIsStrict$3('reduce');

// `Array.prototype.reduce` method
// https://tc39.es/ecma262/#sec-array.prototype.reduce
$$2H({
  target: 'Array',
  proto: true,
  forced: FORCED$w
}, {
  reduce: function reduce(callbackfn /* , initialValue */) {
    var length = arguments.length;
    return $reduce$1(this, callbackfn, length, length > 1 ? arguments[1] : undefined);
  }
});

var $$2G = _export;
var $reduceRight$1 = arrayReduce.right;
var arrayMethodIsStrict$2 = arrayMethodIsStrict$9;
var CHROME_VERSION = engineV8Version;
var IS_NODE$6 = engineIsNode;

// Chrome 80-82 has a critical bug
// https://bugs.chromium.org/p/chromium/issues/detail?id=1049982
var CHROME_BUG = !IS_NODE$6 && CHROME_VERSION > 79 && CHROME_VERSION < 83;
var FORCED$v = CHROME_BUG || !arrayMethodIsStrict$2('reduceRight');

// `Array.prototype.reduceRight` method
// https://tc39.es/ecma262/#sec-array.prototype.reduceright
$$2G({
  target: 'Array',
  proto: true,
  forced: FORCED$v
}, {
  reduceRight: function reduceRight(callbackfn /* , initialValue */) {
    return $reduceRight$1(this, callbackfn, arguments.length, arguments.length > 1 ? arguments[1] : undefined);
  }
});

var $$2F = _export;
var uncurryThis$15 = functionUncurryThis;
var isArray$2 = isArray$9;
var nativeReverse = uncurryThis$15([].reverse);
var test$1 = [1, 2];

// `Array.prototype.reverse` method
// https://tc39.es/ecma262/#sec-array.prototype.reverse
// fix for Safari 12.0 bug
// https://bugs.webkit.org/show_bug.cgi?id=188794
$$2F({
  target: 'Array',
  proto: true,
  forced: String(test$1) === String(test$1.reverse())
}, {
  reverse: function reverse() {
    // eslint-disable-next-line no-self-assign -- dirty hack
    if (isArray$2(this)) this.length = this.length;
    return nativeReverse(this);
  }
});

var $$2E = _export;
var isArray$1 = isArray$9;
var isConstructor$2 = isConstructor$6;
var isObject$o = isObject$B;
var toAbsoluteIndex$5 = toAbsoluteIndex$9;
var lengthOfArrayLike$c = lengthOfArrayLike$s;
var toIndexedObject$9 = toIndexedObject$j;
var createProperty$4 = createProperty$8;
var wellKnownSymbol$h = wellKnownSymbol$z;
var arrayMethodHasSpeciesSupport$1 = arrayMethodHasSpeciesSupport$5;
var nativeSlice = arraySlice$a;
var HAS_SPECIES_SUPPORT$1 = arrayMethodHasSpeciesSupport$1('slice');
var SPECIES$4 = wellKnownSymbol$h('species');
var $Array$6 = Array;
var max$6 = Math.max;

// `Array.prototype.slice` method
// https://tc39.es/ecma262/#sec-array.prototype.slice
// fallback for not array-like ES3 strings and DOM objects
$$2E({
  target: 'Array',
  proto: true,
  forced: !HAS_SPECIES_SUPPORT$1
}, {
  slice: function slice(start, end) {
    var O = toIndexedObject$9(this);
    var length = lengthOfArrayLike$c(O);
    var k = toAbsoluteIndex$5(start, length);
    var fin = toAbsoluteIndex$5(end === undefined ? length : end, length);
    // inline `ArraySpeciesCreate` for usage native `Array#slice` where it's possible
    var Constructor, result, n;
    if (isArray$1(O)) {
      Constructor = O.constructor;
      // cross-realm fallback
      if (isConstructor$2(Constructor) && (Constructor === $Array$6 || isArray$1(Constructor.prototype))) {
        Constructor = undefined;
      } else if (isObject$o(Constructor)) {
        Constructor = Constructor[SPECIES$4];
        if (Constructor === null) Constructor = undefined;
      }
      if (Constructor === $Array$6 || Constructor === undefined) {
        return nativeSlice(O, k, fin);
      }
    }
    result = new (Constructor === undefined ? $Array$6 : Constructor)(max$6(fin - k, 0));
    for (n = 0; k < fin; k++, n++) if (k in O) createProperty$4(result, n, O[k]);
    result.length = n;
    return result;
  }
});

var $$2D = _export;
var $some$1 = arrayIteration.some;
var arrayMethodIsStrict$1 = arrayMethodIsStrict$9;
var STRICT_METHOD$1 = arrayMethodIsStrict$1('some');

// `Array.prototype.some` method
// https://tc39.es/ecma262/#sec-array.prototype.some
$$2D({
  target: 'Array',
  proto: true,
  forced: !STRICT_METHOD$1
}, {
  some: function some(callbackfn /* , thisArg */) {
    return $some$1(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});

var arraySlice$7 = arraySlice$a;
var floor$9 = Math.floor;
var sort$2 = function sort(array, comparefn) {
  var length = array.length;
  if (length < 8) {
    // insertion sort
    var i = 1;
    var element, j;
    while (i < length) {
      j = i;
      element = array[i];
      while (j && comparefn(array[j - 1], element) > 0) {
        array[j] = array[--j];
      }
      if (j !== i++) array[j] = element;
    }
  } else {
    // merge sort
    var middle = floor$9(length / 2);
    var left = sort(arraySlice$7(array, 0, middle), comparefn);
    var right = sort(arraySlice$7(array, middle), comparefn);
    var llength = left.length;
    var rlength = right.length;
    var lindex = 0;
    var rindex = 0;
    while (lindex < llength || rindex < rlength) {
      array[lindex + rindex] = lindex < llength && rindex < rlength ? comparefn(left[lindex], right[rindex]) <= 0 ? left[lindex++] : right[rindex++] : lindex < llength ? left[lindex++] : right[rindex++];
    }
  }
  return array;
};
var arraySort$1 = sort$2;

var userAgent$5 = engineUserAgent;
var firefox = userAgent$5.match(/firefox\/(\d+)/i);
var engineFfVersion = !!firefox && +firefox[1];

var UA = engineUserAgent;
var engineIsIeOrEdge = /MSIE|Trident/.test(UA);

var userAgent$4 = engineUserAgent;
var webkit = userAgent$4.match(/AppleWebKit\/(\d+)\./);
var engineWebkitVersion = !!webkit && +webkit[1];

var $$2C = _export;
var uncurryThis$14 = functionUncurryThis;
var aCallable$h = aCallable$o;
var toObject$e = toObject$t;
var lengthOfArrayLike$b = lengthOfArrayLike$s;
var deletePropertyOrThrow$2 = deletePropertyOrThrow$4;
var toString$y = toString$D;
var fails$15 = fails$1t;
var internalSort$1 = arraySort$1;
var arrayMethodIsStrict = arrayMethodIsStrict$9;
var FF$1 = engineFfVersion;
var IE_OR_EDGE$1 = engineIsIeOrEdge;
var V8$2 = engineV8Version;
var WEBKIT$2 = engineWebkitVersion;
var test = [];
var nativeSort$1 = uncurryThis$14(test.sort);
var push$c = uncurryThis$14(test.push);

// IE8-
var FAILS_ON_UNDEFINED = fails$15(function () {
  test.sort(undefined);
});
// V8 bug
var FAILS_ON_NULL = fails$15(function () {
  test.sort(null);
});
// Old WebKit
var STRICT_METHOD = arrayMethodIsStrict('sort');
var STABLE_SORT$1 = !fails$15(function () {
  // feature detection can be too slow, so check engines versions
  if (V8$2) return V8$2 < 70;
  if (FF$1 && FF$1 > 3) return;
  if (IE_OR_EDGE$1) return true;
  if (WEBKIT$2) return WEBKIT$2 < 603;
  var result = '';
  var code, chr, value, index;

  // generate an array with more 512 elements (Chakra and old V8 fails only in this case)
  for (code = 65; code < 76; code++) {
    chr = String.fromCharCode(code);
    switch (code) {
      case 66:
      case 69:
      case 70:
      case 72:
        value = 3;
        break;
      case 68:
      case 71:
        value = 4;
        break;
      default:
        value = 2;
    }
    for (index = 0; index < 47; index++) {
      test.push({
        k: chr + index,
        v: value
      });
    }
  }
  test.sort(function (a, b) {
    return b.v - a.v;
  });
  for (index = 0; index < test.length; index++) {
    chr = test[index].k.charAt(0);
    if (result.charAt(result.length - 1) !== chr) result += chr;
  }
  return result !== 'DGBEFHACIJK';
});
var FORCED$u = FAILS_ON_UNDEFINED || !FAILS_ON_NULL || !STRICT_METHOD || !STABLE_SORT$1;
var getSortCompare$1 = function getSortCompare(comparefn) {
  return function (x, y) {
    if (y === undefined) return -1;
    if (x === undefined) return 1;
    if (comparefn !== undefined) return +comparefn(x, y) || 0;
    return toString$y(x) > toString$y(y) ? 1 : -1;
  };
};

// `Array.prototype.sort` method
// https://tc39.es/ecma262/#sec-array.prototype.sort
$$2C({
  target: 'Array',
  proto: true,
  forced: FORCED$u
}, {
  sort: function sort(comparefn) {
    if (comparefn !== undefined) aCallable$h(comparefn);
    var array = toObject$e(this);
    if (STABLE_SORT$1) return comparefn === undefined ? nativeSort$1(array) : nativeSort$1(array, comparefn);
    var items = [];
    var arrayLength = lengthOfArrayLike$b(array);
    var itemsLength, index;
    for (index = 0; index < arrayLength; index++) {
      if (index in array) push$c(items, array[index]);
    }
    internalSort$1(items, getSortCompare$1(comparefn));
    itemsLength = lengthOfArrayLike$b(items);
    index = 0;
    while (index < itemsLength) array[index] = items[index++];
    while (index < arrayLength) deletePropertyOrThrow$2(array, index++);
    return array;
  }
});

var getBuiltIn$g = getBuiltIn$r;
var defineBuiltInAccessor$f = defineBuiltInAccessor$i;
var wellKnownSymbol$g = wellKnownSymbol$z;
var DESCRIPTORS$y = descriptors;
var SPECIES$3 = wellKnownSymbol$g('species');
var setSpecies$6 = function setSpecies(CONSTRUCTOR_NAME) {
  var Constructor = getBuiltIn$g(CONSTRUCTOR_NAME);
  if (DESCRIPTORS$y && Constructor && !Constructor[SPECIES$3]) {
    defineBuiltInAccessor$f(Constructor, SPECIES$3, {
      configurable: true,
      get: function get() {
        return this;
      }
    });
  }
};

var setSpecies$5 = setSpecies$6;

// `Array[@@species]` getter
// https://tc39.es/ecma262/#sec-get-array-@@species
setSpecies$5('Array');

var $$2B = _export;
var toObject$d = toObject$t;
var toAbsoluteIndex$4 = toAbsoluteIndex$9;
var toIntegerOrInfinity$g = toIntegerOrInfinity$m;
var lengthOfArrayLike$a = lengthOfArrayLike$s;
var setArrayLength$1 = arraySetLength;
var doesNotExceedSafeInteger$2 = doesNotExceedSafeInteger$6;
var arraySpeciesCreate = arraySpeciesCreate$5;
var createProperty$3 = createProperty$8;
var deletePropertyOrThrow$1 = deletePropertyOrThrow$4;
var arrayMethodHasSpeciesSupport = arrayMethodHasSpeciesSupport$5;
var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('splice');
var max$5 = Math.max;
var min$7 = Math.min;

// `Array.prototype.splice` method
// https://tc39.es/ecma262/#sec-array.prototype.splice
// with adding support of @@species
$$2B({
  target: 'Array',
  proto: true,
  forced: !HAS_SPECIES_SUPPORT
}, {
  splice: function splice(start, deleteCount /* , ...items */) {
    var O = toObject$d(this);
    var len = lengthOfArrayLike$a(O);
    var actualStart = toAbsoluteIndex$4(start, len);
    var argumentsLength = arguments.length;
    var insertCount, actualDeleteCount, A, k, from, to;
    if (argumentsLength === 0) {
      insertCount = actualDeleteCount = 0;
    } else if (argumentsLength === 1) {
      insertCount = 0;
      actualDeleteCount = len - actualStart;
    } else {
      insertCount = argumentsLength - 2;
      actualDeleteCount = min$7(max$5(toIntegerOrInfinity$g(deleteCount), 0), len - actualStart);
    }
    doesNotExceedSafeInteger$2(len + insertCount - actualDeleteCount);
    A = arraySpeciesCreate(O, actualDeleteCount);
    for (k = 0; k < actualDeleteCount; k++) {
      from = actualStart + k;
      if (from in O) createProperty$3(A, k, O[from]);
    }
    A.length = actualDeleteCount;
    if (insertCount < actualDeleteCount) {
      for (k = actualStart; k < len - actualDeleteCount; k++) {
        from = k + actualDeleteCount;
        to = k + insertCount;
        if (from in O) O[to] = O[from];else deletePropertyOrThrow$1(O, to);
      }
      for (k = len; k > len - actualDeleteCount + insertCount; k--) deletePropertyOrThrow$1(O, k - 1);
    } else if (insertCount > actualDeleteCount) {
      for (k = len - actualDeleteCount; k > actualStart; k--) {
        from = k + actualDeleteCount - 1;
        to = k + insertCount - 1;
        if (from in O) O[to] = O[from];else deletePropertyOrThrow$1(O, to);
      }
    }
    for (k = 0; k < insertCount; k++) {
      O[k + actualStart] = arguments[k + 2];
    }
    setArrayLength$1(O, len - actualDeleteCount + insertCount);
    return A;
  }
});

var lengthOfArrayLike$9 = lengthOfArrayLike$s;

// https://tc39.es/proposal-change-array-by-copy/#sec-array.prototype.toReversed
// https://tc39.es/proposal-change-array-by-copy/#sec-%typedarray%.prototype.toReversed
var arrayToReversed$2 = function arrayToReversed(O, C) {
  var len = lengthOfArrayLike$9(O);
  var A = new C(len);
  var k = 0;
  for (; k < len; k++) A[k] = O[len - k - 1];
  return A;
};

var $$2A = _export;
var arrayToReversed$1 = arrayToReversed$2;
var toIndexedObject$8 = toIndexedObject$j;
var addToUnscopables$4 = addToUnscopables$e;
var $Array$5 = Array;

// `Array.prototype.toReversed` method
// https://tc39.es/ecma262/#sec-array.prototype.toreversed
$$2A({
  target: 'Array',
  proto: true
}, {
  toReversed: function toReversed() {
    return arrayToReversed$1(toIndexedObject$8(this), $Array$5);
  }
});
addToUnscopables$4('toReversed');

var lengthOfArrayLike$8 = lengthOfArrayLike$s;
var arrayFromConstructorAndList$4 = function arrayFromConstructorAndList(Constructor, list, $length) {
  var index = 0;
  var length = arguments.length > 2 ? $length : lengthOfArrayLike$8(list);
  var result = new Constructor(length);
  while (length > index) result[index] = list[index++];
  return result;
};

var global$N = global$10;
var getBuiltInPrototypeMethod$1 = function getBuiltInPrototypeMethod(CONSTRUCTOR, METHOD) {
  var Constructor = global$N[CONSTRUCTOR];
  var Prototype = Constructor && Constructor.prototype;
  return Prototype && Prototype[METHOD];
};

var $$2z = _export;
var uncurryThis$13 = functionUncurryThis;
var aCallable$g = aCallable$o;
var toIndexedObject$7 = toIndexedObject$j;
var arrayFromConstructorAndList$3 = arrayFromConstructorAndList$4;
var getBuiltInPrototypeMethod = getBuiltInPrototypeMethod$1;
var addToUnscopables$3 = addToUnscopables$e;
var $Array$4 = Array;
var sort$1 = uncurryThis$13(getBuiltInPrototypeMethod('Array', 'sort'));

// `Array.prototype.toSorted` method
// https://tc39.es/ecma262/#sec-array.prototype.tosorted
$$2z({
  target: 'Array',
  proto: true
}, {
  toSorted: function toSorted(compareFn) {
    if (compareFn !== undefined) aCallable$g(compareFn);
    var O = toIndexedObject$7(this);
    var A = arrayFromConstructorAndList$3($Array$4, O);
    return sort$1(A, compareFn);
  }
});
addToUnscopables$3('toSorted');

var $$2y = _export;
var addToUnscopables$2 = addToUnscopables$e;
var doesNotExceedSafeInteger$1 = doesNotExceedSafeInteger$6;
var lengthOfArrayLike$7 = lengthOfArrayLike$s;
var toAbsoluteIndex$3 = toAbsoluteIndex$9;
var toIndexedObject$6 = toIndexedObject$j;
var toIntegerOrInfinity$f = toIntegerOrInfinity$m;
var $Array$3 = Array;
var max$4 = Math.max;
var min$6 = Math.min;

// `Array.prototype.toSpliced` method
// https://tc39.es/ecma262/#sec-array.prototype.tospliced
$$2y({
  target: 'Array',
  proto: true
}, {
  toSpliced: function toSpliced(start, deleteCount /* , ...items */) {
    var O = toIndexedObject$6(this);
    var len = lengthOfArrayLike$7(O);
    var actualStart = toAbsoluteIndex$3(start, len);
    var argumentsLength = arguments.length;
    var k = 0;
    var insertCount, actualDeleteCount, newLen, A;
    if (argumentsLength === 0) {
      insertCount = actualDeleteCount = 0;
    } else if (argumentsLength === 1) {
      insertCount = 0;
      actualDeleteCount = len - actualStart;
    } else {
      insertCount = argumentsLength - 2;
      actualDeleteCount = min$6(max$4(toIntegerOrInfinity$f(deleteCount), 0), len - actualStart);
    }
    newLen = doesNotExceedSafeInteger$1(len + insertCount - actualDeleteCount);
    A = $Array$3(newLen);
    for (; k < actualStart; k++) A[k] = O[k];
    for (; k < actualStart + insertCount; k++) A[k] = arguments[k - actualStart + 2];
    for (; k < newLen; k++) A[k] = O[k + actualDeleteCount - insertCount];
    return A;
  }
});
addToUnscopables$2('toSpliced');

// this method was added to unscopables after implementation
// in popular engines, so it's moved to a separate module
var addToUnscopables$1 = addToUnscopables$e;

// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables$1('flat');

// this method was added to unscopables after implementation
// in popular engines, so it's moved to a separate module
var addToUnscopables = addToUnscopables$e;

// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables('flatMap');

var $$2x = _export;
var toObject$c = toObject$t;
var lengthOfArrayLike$6 = lengthOfArrayLike$s;
var setArrayLength = arraySetLength;
var deletePropertyOrThrow = deletePropertyOrThrow$4;
var doesNotExceedSafeInteger = doesNotExceedSafeInteger$6;

// IE8-
var INCORRECT_RESULT = [].unshift(0) !== 1;

// V8 ~ Chrome < 71 and Safari <= 15.4, FF < 23 throws InternalError
var properErrorOnNonWritableLength = function properErrorOnNonWritableLength() {
  try {
    // eslint-disable-next-line es/no-object-defineproperty -- safe
    Object.defineProperty([], 'length', {
      writable: false
    }).unshift();
  } catch (error) {
    return error instanceof TypeError;
  }
};
var FORCED$t = INCORRECT_RESULT || !properErrorOnNonWritableLength();

// `Array.prototype.unshift` method
// https://tc39.es/ecma262/#sec-array.prototype.unshift
$$2x({
  target: 'Array',
  proto: true,
  arity: 1,
  forced: FORCED$t
}, {
  // eslint-disable-next-line no-unused-vars -- required for `.length`
  unshift: function unshift(item) {
    var O = toObject$c(this);
    var len = lengthOfArrayLike$6(O);
    var argCount = arguments.length;
    if (argCount) {
      doesNotExceedSafeInteger(len + argCount);
      var k = len;
      while (k--) {
        var to = k + argCount;
        if (k in O) O[to] = O[k];else deletePropertyOrThrow(O, to);
      }
      for (var j = 0; j < argCount; j++) {
        O[j] = arguments[j];
      }
    }
    return setArrayLength(O, len + argCount);
  }
});

var lengthOfArrayLike$5 = lengthOfArrayLike$s;
var toIntegerOrInfinity$e = toIntegerOrInfinity$m;
var $RangeError$a = RangeError;

// https://tc39.es/proposal-change-array-by-copy/#sec-array.prototype.with
// https://tc39.es/proposal-change-array-by-copy/#sec-%typedarray%.prototype.with
var arrayWith$2 = function arrayWith(O, C, index, value) {
  var len = lengthOfArrayLike$5(O);
  var relativeIndex = toIntegerOrInfinity$e(index);
  var actualIndex = relativeIndex < 0 ? len + relativeIndex : relativeIndex;
  if (actualIndex >= len || actualIndex < 0) throw new $RangeError$a('Incorrect index');
  var A = new C(len);
  var k = 0;
  for (; k < len; k++) A[k] = k === actualIndex ? value : O[k];
  return A;
};

var $$2w = _export;
var arrayWith$1 = arrayWith$2;
var toIndexedObject$5 = toIndexedObject$j;
var $Array$2 = Array;

// `Array.prototype.with` method
// https://tc39.es/ecma262/#sec-array.prototype.with
$$2w({
  target: 'Array',
  proto: true
}, {
  'with': function _with(index, value) {
    return arrayWith$1(toIndexedObject$5(this), $Array$2, index, value);
  }
});

// eslint-disable-next-line es/no-typed-arrays -- safe
var arrayBufferBasicDetection = typeof ArrayBuffer != 'undefined' && typeof DataView != 'undefined';

var defineBuiltIn$h = defineBuiltIn$o;
var defineBuiltIns$5 = function defineBuiltIns(target, src, options) {
  for (var key in src) defineBuiltIn$h(target, key, src[key], options);
  return target;
};

var isPrototypeOf$6 = objectIsPrototypeOf;
var $TypeError$e = TypeError;
var anInstance$a = function anInstance(it, Prototype) {
  if (isPrototypeOf$6(Prototype, it)) return it;
  throw new $TypeError$e('Incorrect invocation');
};

var toIntegerOrInfinity$d = toIntegerOrInfinity$m;
var toLength$b = toLength$d;
var $RangeError$9 = RangeError;

// `ToIndex` abstract operation
// https://tc39.es/ecma262/#sec-toindex
var toIndex$3 = function toIndex(it) {
  if (it === undefined) return 0;
  var number = toIntegerOrInfinity$d(it);
  var length = toLength$b(number);
  if (number !== length) throw new $RangeError$9('Wrong length or index');
  return length;
};

// `Math.sign` method implementation
// https://tc39.es/ecma262/#sec-math.sign
// eslint-disable-next-line es/no-math-sign -- safe
var mathSign = Math.sign || function sign(x) {
  var n = +x;
  // eslint-disable-next-line no-self-compare -- NaN check
  return n === 0 || n !== n ? n : n < 0 ? -1 : 1;
};

var sign$2 = mathSign;
var abs$8 = Math.abs;
var EPSILON = 2.220446049250313e-16; // Number.EPSILON
var INVERSE_EPSILON = 1 / EPSILON;
var roundTiesToEven = function roundTiesToEven(n) {
  return n + INVERSE_EPSILON - INVERSE_EPSILON;
};
var mathFloatRound = function mathFloatRound(x, FLOAT_EPSILON, FLOAT_MAX_VALUE, FLOAT_MIN_VALUE) {
  var n = +x;
  var absolute = abs$8(n);
  var s = sign$2(n);
  if (absolute < FLOAT_MIN_VALUE) return s * roundTiesToEven(absolute / FLOAT_MIN_VALUE / FLOAT_EPSILON) * FLOAT_MIN_VALUE * FLOAT_EPSILON;
  var a = (1 + FLOAT_EPSILON / EPSILON) * absolute;
  var result = a - (a - absolute);
  // eslint-disable-next-line no-self-compare -- NaN check
  if (result > FLOAT_MAX_VALUE || result !== result) return s * Infinity;
  return s * result;
};

var floatRound = mathFloatRound;
var FLOAT32_EPSILON = 1.1920928955078125e-7; // 2 ** -23;
var FLOAT32_MAX_VALUE = 3.4028234663852886e+38; // 2 ** 128 - 2 ** 104
var FLOAT32_MIN_VALUE = 1.1754943508222875e-38; // 2 ** -126;

// `Math.fround` method implementation
// https://tc39.es/ecma262/#sec-math.fround
// eslint-disable-next-line es/no-math-fround -- safe
var mathFround = Math.fround || function fround(x) {
  return floatRound(x, FLOAT32_EPSILON, FLOAT32_MAX_VALUE, FLOAT32_MIN_VALUE);
};

// IEEE754 conversions based on https://github.com/feross/ieee754
var $Array$1 = Array;
var abs$7 = Math.abs;
var pow$4 = Math.pow;
var floor$8 = Math.floor;
var log$8 = Math.log;
var LN2$2 = Math.LN2;
var pack = function pack(number, mantissaLength, bytes) {
  var buffer = $Array$1(bytes);
  var exponentLength = bytes * 8 - mantissaLength - 1;
  var eMax = (1 << exponentLength) - 1;
  var eBias = eMax >> 1;
  var rt = mantissaLength === 23 ? pow$4(2, -24) - pow$4(2, -77) : 0;
  var sign = number < 0 || number === 0 && 1 / number < 0 ? 1 : 0;
  var index = 0;
  var exponent, mantissa, c;
  number = abs$7(number);
  // eslint-disable-next-line no-self-compare -- NaN check
  if (number !== number || number === Infinity) {
    // eslint-disable-next-line no-self-compare -- NaN check
    mantissa = number !== number ? 1 : 0;
    exponent = eMax;
  } else {
    exponent = floor$8(log$8(number) / LN2$2);
    c = pow$4(2, -exponent);
    if (number * c < 1) {
      exponent--;
      c *= 2;
    }
    if (exponent + eBias >= 1) {
      number += rt / c;
    } else {
      number += rt * pow$4(2, 1 - eBias);
    }
    if (number * c >= 2) {
      exponent++;
      c /= 2;
    }
    if (exponent + eBias >= eMax) {
      mantissa = 0;
      exponent = eMax;
    } else if (exponent + eBias >= 1) {
      mantissa = (number * c - 1) * pow$4(2, mantissaLength);
      exponent += eBias;
    } else {
      mantissa = number * pow$4(2, eBias - 1) * pow$4(2, mantissaLength);
      exponent = 0;
    }
  }
  while (mantissaLength >= 8) {
    buffer[index++] = mantissa & 255;
    mantissa /= 256;
    mantissaLength -= 8;
  }
  exponent = exponent << mantissaLength | mantissa;
  exponentLength += mantissaLength;
  while (exponentLength > 0) {
    buffer[index++] = exponent & 255;
    exponent /= 256;
    exponentLength -= 8;
  }
  buffer[--index] |= sign * 128;
  return buffer;
};
var unpack = function unpack(buffer, mantissaLength) {
  var bytes = buffer.length;
  var exponentLength = bytes * 8 - mantissaLength - 1;
  var eMax = (1 << exponentLength) - 1;
  var eBias = eMax >> 1;
  var nBits = exponentLength - 7;
  var index = bytes - 1;
  var sign = buffer[index--];
  var exponent = sign & 127;
  var mantissa;
  sign >>= 7;
  while (nBits > 0) {
    exponent = exponent * 256 + buffer[index--];
    nBits -= 8;
  }
  mantissa = exponent & (1 << -nBits) - 1;
  exponent >>= -nBits;
  nBits += mantissaLength;
  while (nBits > 0) {
    mantissa = mantissa * 256 + buffer[index--];
    nBits -= 8;
  }
  if (exponent === 0) {
    exponent = 1 - eBias;
  } else if (exponent === eMax) {
    return mantissa ? NaN : sign ? -Infinity : Infinity;
  } else {
    mantissa += pow$4(2, mantissaLength);
    exponent -= eBias;
  }
  return (sign ? -1 : 1) * mantissa * pow$4(2, exponent - mantissaLength);
};
var ieee754 = {
  pack: pack,
  unpack: unpack
};

var global$M = global$10;
var uncurryThis$12 = functionUncurryThis;
var DESCRIPTORS$x = descriptors;
var NATIVE_ARRAY_BUFFER$2 = arrayBufferBasicDetection;
var FunctionName = functionName;
var createNonEnumerableProperty$7 = createNonEnumerableProperty$f;
var defineBuiltInAccessor$e = defineBuiltInAccessor$i;
var defineBuiltIns$4 = defineBuiltIns$5;
var fails$14 = fails$1t;
var anInstance$9 = anInstance$a;
var toIntegerOrInfinity$c = toIntegerOrInfinity$m;
var toLength$a = toLength$d;
var toIndex$2 = toIndex$3;
var fround$1 = mathFround;
var IEEE754 = ieee754;
var getPrototypeOf$6 = objectGetPrototypeOf$2;
var setPrototypeOf$5 = objectSetPrototypeOf$1;
var arrayFill = arrayFill$1;
var arraySlice$6 = arraySlice$a;
var inheritIfRequired$5 = inheritIfRequired$7;
var copyConstructorProperties$1 = copyConstructorProperties$6;
var setToStringTag$9 = setToStringTag$e;
var InternalStateModule$a = internalState;
var PROPER_FUNCTION_NAME$2 = FunctionName.PROPER;
var CONFIGURABLE_FUNCTION_NAME = FunctionName.CONFIGURABLE;
var ARRAY_BUFFER$1 = 'ArrayBuffer';
var DATA_VIEW = 'DataView';
var PROTOTYPE = 'prototype';
var WRONG_LENGTH$1 = 'Wrong length';
var WRONG_INDEX = 'Wrong index';
var getInternalArrayBufferState = InternalStateModule$a.getterFor(ARRAY_BUFFER$1);
var getInternalDataViewState = InternalStateModule$a.getterFor(DATA_VIEW);
var setInternalState$9 = InternalStateModule$a.set;
var NativeArrayBuffer$1 = global$M[ARRAY_BUFFER$1];
var $ArrayBuffer$1 = NativeArrayBuffer$1;
var ArrayBufferPrototype$3 = $ArrayBuffer$1 && $ArrayBuffer$1[PROTOTYPE];
var $DataView = global$M[DATA_VIEW];
var DataViewPrototype$2 = $DataView && $DataView[PROTOTYPE];
var ObjectPrototype$3 = Object.prototype;
var Array$2 = global$M.Array;
var RangeError$3 = global$M.RangeError;
var fill = uncurryThis$12(arrayFill);
var reverse = uncurryThis$12([].reverse);
var packIEEE754 = IEEE754.pack;
var unpackIEEE754 = IEEE754.unpack;
var packInt8 = function packInt8(number) {
  return [number & 0xFF];
};
var packInt16 = function packInt16(number) {
  return [number & 0xFF, number >> 8 & 0xFF];
};
var packInt32 = function packInt32(number) {
  return [number & 0xFF, number >> 8 & 0xFF, number >> 16 & 0xFF, number >> 24 & 0xFF];
};
var unpackInt32 = function unpackInt32(buffer) {
  return buffer[3] << 24 | buffer[2] << 16 | buffer[1] << 8 | buffer[0];
};
var packFloat32 = function packFloat32(number) {
  return packIEEE754(fround$1(number), 23, 4);
};
var packFloat64 = function packFloat64(number) {
  return packIEEE754(number, 52, 8);
};
var addGetter$1 = function addGetter(Constructor, key, getInternalState) {
  defineBuiltInAccessor$e(Constructor[PROTOTYPE], key, {
    configurable: true,
    get: function get() {
      return getInternalState(this)[key];
    }
  });
};
var get$2 = function get(view, count, index, isLittleEndian) {
  var store = getInternalDataViewState(view);
  var intIndex = toIndex$2(index);
  var boolIsLittleEndian = !!isLittleEndian;
  if (intIndex + count > store.byteLength) throw new RangeError$3(WRONG_INDEX);
  var bytes = store.bytes;
  var start = intIndex + store.byteOffset;
  var pack = arraySlice$6(bytes, start, start + count);
  return boolIsLittleEndian ? pack : reverse(pack);
};
var set$3 = function set(view, count, index, conversion, value, isLittleEndian) {
  var store = getInternalDataViewState(view);
  var intIndex = toIndex$2(index);
  var pack = conversion(+value);
  var boolIsLittleEndian = !!isLittleEndian;
  if (intIndex + count > store.byteLength) throw new RangeError$3(WRONG_INDEX);
  var bytes = store.bytes;
  var start = intIndex + store.byteOffset;
  for (var i = 0; i < count; i++) bytes[start + i] = pack[boolIsLittleEndian ? i : count - i - 1];
};
if (!NATIVE_ARRAY_BUFFER$2) {
  $ArrayBuffer$1 = function ArrayBuffer(length) {
    anInstance$9(this, ArrayBufferPrototype$3);
    var byteLength = toIndex$2(length);
    setInternalState$9(this, {
      type: ARRAY_BUFFER$1,
      bytes: fill(Array$2(byteLength), 0),
      byteLength: byteLength
    });
    if (!DESCRIPTORS$x) {
      this.byteLength = byteLength;
      this.detached = false;
    }
  };
  ArrayBufferPrototype$3 = $ArrayBuffer$1[PROTOTYPE];
  $DataView = function DataView(buffer, byteOffset, byteLength) {
    anInstance$9(this, DataViewPrototype$2);
    anInstance$9(buffer, ArrayBufferPrototype$3);
    var bufferState = getInternalArrayBufferState(buffer);
    var bufferLength = bufferState.byteLength;
    var offset = toIntegerOrInfinity$c(byteOffset);
    if (offset < 0 || offset > bufferLength) throw new RangeError$3('Wrong offset');
    byteLength = byteLength === undefined ? bufferLength - offset : toLength$a(byteLength);
    if (offset + byteLength > bufferLength) throw new RangeError$3(WRONG_LENGTH$1);
    setInternalState$9(this, {
      type: DATA_VIEW,
      buffer: buffer,
      byteLength: byteLength,
      byteOffset: offset,
      bytes: bufferState.bytes
    });
    if (!DESCRIPTORS$x) {
      this.buffer = buffer;
      this.byteLength = byteLength;
      this.byteOffset = offset;
    }
  };
  DataViewPrototype$2 = $DataView[PROTOTYPE];
  if (DESCRIPTORS$x) {
    addGetter$1($ArrayBuffer$1, 'byteLength', getInternalArrayBufferState);
    addGetter$1($DataView, 'buffer', getInternalDataViewState);
    addGetter$1($DataView, 'byteLength', getInternalDataViewState);
    addGetter$1($DataView, 'byteOffset', getInternalDataViewState);
  }
  defineBuiltIns$4(DataViewPrototype$2, {
    getInt8: function getInt8(byteOffset) {
      return get$2(this, 1, byteOffset)[0] << 24 >> 24;
    },
    getUint8: function getUint8(byteOffset) {
      return get$2(this, 1, byteOffset)[0];
    },
    getInt16: function getInt16(byteOffset /* , littleEndian */) {
      var bytes = get$2(this, 2, byteOffset, arguments.length > 1 ? arguments[1] : false);
      return (bytes[1] << 8 | bytes[0]) << 16 >> 16;
    },
    getUint16: function getUint16(byteOffset /* , littleEndian */) {
      var bytes = get$2(this, 2, byteOffset, arguments.length > 1 ? arguments[1] : false);
      return bytes[1] << 8 | bytes[0];
    },
    getInt32: function getInt32(byteOffset /* , littleEndian */) {
      return unpackInt32(get$2(this, 4, byteOffset, arguments.length > 1 ? arguments[1] : false));
    },
    getUint32: function getUint32(byteOffset /* , littleEndian */) {
      return unpackInt32(get$2(this, 4, byteOffset, arguments.length > 1 ? arguments[1] : false)) >>> 0;
    },
    getFloat32: function getFloat32(byteOffset /* , littleEndian */) {
      return unpackIEEE754(get$2(this, 4, byteOffset, arguments.length > 1 ? arguments[1] : false), 23);
    },
    getFloat64: function getFloat64(byteOffset /* , littleEndian */) {
      return unpackIEEE754(get$2(this, 8, byteOffset, arguments.length > 1 ? arguments[1] : false), 52);
    },
    setInt8: function setInt8(byteOffset, value) {
      set$3(this, 1, byteOffset, packInt8, value);
    },
    setUint8: function setUint8(byteOffset, value) {
      set$3(this, 1, byteOffset, packInt8, value);
    },
    setInt16: function setInt16(byteOffset, value /* , littleEndian */) {
      set$3(this, 2, byteOffset, packInt16, value, arguments.length > 2 ? arguments[2] : false);
    },
    setUint16: function setUint16(byteOffset, value /* , littleEndian */) {
      set$3(this, 2, byteOffset, packInt16, value, arguments.length > 2 ? arguments[2] : false);
    },
    setInt32: function setInt32(byteOffset, value /* , littleEndian */) {
      set$3(this, 4, byteOffset, packInt32, value, arguments.length > 2 ? arguments[2] : false);
    },
    setUint32: function setUint32(byteOffset, value /* , littleEndian */) {
      set$3(this, 4, byteOffset, packInt32, value, arguments.length > 2 ? arguments[2] : false);
    },
    setFloat32: function setFloat32(byteOffset, value /* , littleEndian */) {
      set$3(this, 4, byteOffset, packFloat32, value, arguments.length > 2 ? arguments[2] : false);
    },
    setFloat64: function setFloat64(byteOffset, value /* , littleEndian */) {
      set$3(this, 8, byteOffset, packFloat64, value, arguments.length > 2 ? arguments[2] : false);
    }
  });
} else {
  var INCORRECT_ARRAY_BUFFER_NAME = PROPER_FUNCTION_NAME$2 && NativeArrayBuffer$1.name !== ARRAY_BUFFER$1;
  /* eslint-disable no-new -- required for testing */
  if (!fails$14(function () {
    NativeArrayBuffer$1(1);
  }) || !fails$14(function () {
    new NativeArrayBuffer$1(-1);
  }) || fails$14(function () {
    new NativeArrayBuffer$1();
    new NativeArrayBuffer$1(1.5);
    new NativeArrayBuffer$1(NaN);
    return NativeArrayBuffer$1.length !== 1 || INCORRECT_ARRAY_BUFFER_NAME && !CONFIGURABLE_FUNCTION_NAME;
  })) {
    /* eslint-enable no-new -- required for testing */
    $ArrayBuffer$1 = function ArrayBuffer(length) {
      anInstance$9(this, ArrayBufferPrototype$3);
      return inheritIfRequired$5(new NativeArrayBuffer$1(toIndex$2(length)), this, $ArrayBuffer$1);
    };
    $ArrayBuffer$1[PROTOTYPE] = ArrayBufferPrototype$3;
    ArrayBufferPrototype$3.constructor = $ArrayBuffer$1;
    copyConstructorProperties$1($ArrayBuffer$1, NativeArrayBuffer$1);
  } else if (INCORRECT_ARRAY_BUFFER_NAME && CONFIGURABLE_FUNCTION_NAME) {
    createNonEnumerableProperty$7(NativeArrayBuffer$1, 'name', ARRAY_BUFFER$1);
  }

  // WebKit bug - the same parent prototype for typed arrays and data view
  if (setPrototypeOf$5 && getPrototypeOf$6(DataViewPrototype$2) !== ObjectPrototype$3) {
    setPrototypeOf$5(DataViewPrototype$2, ObjectPrototype$3);
  }

  // iOS Safari 7.x bug
  var testView = new $DataView(new $ArrayBuffer$1(2));
  var $setInt8 = uncurryThis$12(DataViewPrototype$2.setInt8);
  testView.setInt8(0, 2147483648);
  testView.setInt8(1, 2147483649);
  if (testView.getInt8(0) || !testView.getInt8(1)) defineBuiltIns$4(DataViewPrototype$2, {
    setInt8: function setInt8(byteOffset, value) {
      $setInt8(this, byteOffset, value << 24 >> 24);
    },
    setUint8: function setUint8(byteOffset, value) {
      $setInt8(this, byteOffset, value << 24 >> 24);
    }
  }, {
    unsafe: true
  });
}
setToStringTag$9($ArrayBuffer$1, ARRAY_BUFFER$1);
setToStringTag$9($DataView, DATA_VIEW);
var arrayBuffer = {
  ArrayBuffer: $ArrayBuffer$1,
  DataView: $DataView
};

var $$2v = _export;
var global$L = global$10;
var arrayBufferModule = arrayBuffer;
var setSpecies$4 = setSpecies$6;
var ARRAY_BUFFER = 'ArrayBuffer';
var ArrayBuffer$5 = arrayBufferModule[ARRAY_BUFFER];
var NativeArrayBuffer = global$L[ARRAY_BUFFER];

// `ArrayBuffer` constructor
// https://tc39.es/ecma262/#sec-arraybuffer-constructor
$$2v({
  global: true,
  constructor: true,
  forced: NativeArrayBuffer !== ArrayBuffer$5
}, {
  ArrayBuffer: ArrayBuffer$5
});
setSpecies$4(ARRAY_BUFFER);

var NATIVE_ARRAY_BUFFER$1 = arrayBufferBasicDetection;
var DESCRIPTORS$w = descriptors;
var global$K = global$10;
var isCallable$e = isCallable$y;
var isObject$n = isObject$B;
var hasOwn$g = hasOwnProperty_1;
var classof$f = classof$n;
var tryToString$1 = tryToString$7;
var createNonEnumerableProperty$6 = createNonEnumerableProperty$f;
var defineBuiltIn$g = defineBuiltIn$o;
var defineBuiltInAccessor$d = defineBuiltInAccessor$i;
var isPrototypeOf$5 = objectIsPrototypeOf;
var getPrototypeOf$5 = objectGetPrototypeOf$2;
var setPrototypeOf$4 = objectSetPrototypeOf$1;
var wellKnownSymbol$f = wellKnownSymbol$z;
var uid$2 = uid$6;
var InternalStateModule$9 = internalState;
var enforceInternalState$3 = InternalStateModule$9.enforce;
var getInternalState$7 = InternalStateModule$9.get;
var Int8Array$4 = global$K.Int8Array;
var Int8ArrayPrototype$1 = Int8Array$4 && Int8Array$4.prototype;
var Uint8ClampedArray$1 = global$K.Uint8ClampedArray;
var Uint8ClampedArrayPrototype = Uint8ClampedArray$1 && Uint8ClampedArray$1.prototype;
var TypedArray$1 = Int8Array$4 && getPrototypeOf$5(Int8Array$4);
var TypedArrayPrototype$2 = Int8ArrayPrototype$1 && getPrototypeOf$5(Int8ArrayPrototype$1);
var ObjectPrototype$2 = Object.prototype;
var TypeError$7 = global$K.TypeError;
var TO_STRING_TAG = wellKnownSymbol$f('toStringTag');
var TYPED_ARRAY_TAG$1 = uid$2('TYPED_ARRAY_TAG');
var TYPED_ARRAY_CONSTRUCTOR = 'TypedArrayConstructor';
// Fixing native typed arrays in Opera Presto crashes the browser, see #595
var NATIVE_ARRAY_BUFFER_VIEWS$3 = NATIVE_ARRAY_BUFFER$1 && !!setPrototypeOf$4 && classof$f(global$K.opera) !== 'Opera';
var TYPED_ARRAY_TAG_REQUIRED = false;
var NAME$1, Constructor, Prototype;
var TypedArrayConstructorsList = {
  Int8Array: 1,
  Uint8Array: 1,
  Uint8ClampedArray: 1,
  Int16Array: 2,
  Uint16Array: 2,
  Int32Array: 4,
  Uint32Array: 4,
  Float32Array: 4,
  Float64Array: 8
};
var BigIntArrayConstructorsList = {
  BigInt64Array: 8,
  BigUint64Array: 8
};
var isView = function isView(it) {
  if (!isObject$n(it)) return false;
  var klass = classof$f(it);
  return klass === 'DataView' || hasOwn$g(TypedArrayConstructorsList, klass) || hasOwn$g(BigIntArrayConstructorsList, klass);
};
var getTypedArrayConstructor$4 = function getTypedArrayConstructor(it) {
  var proto = getPrototypeOf$5(it);
  if (!isObject$n(proto)) return;
  var state = getInternalState$7(proto);
  return state && hasOwn$g(state, TYPED_ARRAY_CONSTRUCTOR) ? state[TYPED_ARRAY_CONSTRUCTOR] : getTypedArrayConstructor(proto);
};
var isTypedArray$1 = function isTypedArray(it) {
  if (!isObject$n(it)) return false;
  var klass = classof$f(it);
  return hasOwn$g(TypedArrayConstructorsList, klass) || hasOwn$g(BigIntArrayConstructorsList, klass);
};
var aTypedArray$s = function aTypedArray(it) {
  if (isTypedArray$1(it)) return it;
  throw new TypeError$7('Target is not a typed array');
};
var aTypedArrayConstructor$3 = function aTypedArrayConstructor(C) {
  if (isCallable$e(C) && (!setPrototypeOf$4 || isPrototypeOf$5(TypedArray$1, C))) return C;
  throw new TypeError$7(tryToString$1(C) + ' is not a typed array constructor');
};
var exportTypedArrayMethod$t = function exportTypedArrayMethod(KEY, property, forced, options) {
  if (!DESCRIPTORS$w) return;
  if (forced) for (var ARRAY in TypedArrayConstructorsList) {
    var TypedArrayConstructor = global$K[ARRAY];
    if (TypedArrayConstructor && hasOwn$g(TypedArrayConstructor.prototype, KEY)) try {
      delete TypedArrayConstructor.prototype[KEY];
    } catch (error) {
      // old WebKit bug - some methods are non-configurable
      try {
        TypedArrayConstructor.prototype[KEY] = property;
      } catch (error2) {/* empty */}
    }
  }
  if (!TypedArrayPrototype$2[KEY] || forced) {
    defineBuiltIn$g(TypedArrayPrototype$2, KEY, forced ? property : NATIVE_ARRAY_BUFFER_VIEWS$3 && Int8ArrayPrototype$1[KEY] || property, options);
  }
};
var exportTypedArrayStaticMethod$2 = function exportTypedArrayStaticMethod(KEY, property, forced) {
  var ARRAY, TypedArrayConstructor;
  if (!DESCRIPTORS$w) return;
  if (setPrototypeOf$4) {
    if (forced) for (ARRAY in TypedArrayConstructorsList) {
      TypedArrayConstructor = global$K[ARRAY];
      if (TypedArrayConstructor && hasOwn$g(TypedArrayConstructor, KEY)) try {
        delete TypedArrayConstructor[KEY];
      } catch (error) {/* empty */}
    }
    if (!TypedArray$1[KEY] || forced) {
      // V8 ~ Chrome 49-50 `%TypedArray%` methods are non-writable non-configurable
      try {
        return defineBuiltIn$g(TypedArray$1, KEY, forced ? property : NATIVE_ARRAY_BUFFER_VIEWS$3 && TypedArray$1[KEY] || property);
      } catch (error) {/* empty */}
    } else return;
  }
  for (ARRAY in TypedArrayConstructorsList) {
    TypedArrayConstructor = global$K[ARRAY];
    if (TypedArrayConstructor && (!TypedArrayConstructor[KEY] || forced)) {
      defineBuiltIn$g(TypedArrayConstructor, KEY, property);
    }
  }
};
for (NAME$1 in TypedArrayConstructorsList) {
  Constructor = global$K[NAME$1];
  Prototype = Constructor && Constructor.prototype;
  if (Prototype) enforceInternalState$3(Prototype)[TYPED_ARRAY_CONSTRUCTOR] = Constructor;else NATIVE_ARRAY_BUFFER_VIEWS$3 = false;
}
for (NAME$1 in BigIntArrayConstructorsList) {
  Constructor = global$K[NAME$1];
  Prototype = Constructor && Constructor.prototype;
  if (Prototype) enforceInternalState$3(Prototype)[TYPED_ARRAY_CONSTRUCTOR] = Constructor;
}

// WebKit bug - typed arrays constructors prototype is Object.prototype
if (!NATIVE_ARRAY_BUFFER_VIEWS$3 || !isCallable$e(TypedArray$1) || TypedArray$1 === Function.prototype) {
  // eslint-disable-next-line no-shadow -- safe
  TypedArray$1 = function TypedArray() {
    throw new TypeError$7('Incorrect invocation');
  };
  if (NATIVE_ARRAY_BUFFER_VIEWS$3) for (NAME$1 in TypedArrayConstructorsList) {
    if (global$K[NAME$1]) setPrototypeOf$4(global$K[NAME$1], TypedArray$1);
  }
}
if (!NATIVE_ARRAY_BUFFER_VIEWS$3 || !TypedArrayPrototype$2 || TypedArrayPrototype$2 === ObjectPrototype$2) {
  TypedArrayPrototype$2 = TypedArray$1.prototype;
  if (NATIVE_ARRAY_BUFFER_VIEWS$3) for (NAME$1 in TypedArrayConstructorsList) {
    if (global$K[NAME$1]) setPrototypeOf$4(global$K[NAME$1].prototype, TypedArrayPrototype$2);
  }
}

// WebKit bug - one more object in Uint8ClampedArray prototype chain
if (NATIVE_ARRAY_BUFFER_VIEWS$3 && getPrototypeOf$5(Uint8ClampedArrayPrototype) !== TypedArrayPrototype$2) {
  setPrototypeOf$4(Uint8ClampedArrayPrototype, TypedArrayPrototype$2);
}
if (DESCRIPTORS$w && !hasOwn$g(TypedArrayPrototype$2, TO_STRING_TAG)) {
  TYPED_ARRAY_TAG_REQUIRED = true;
  defineBuiltInAccessor$d(TypedArrayPrototype$2, TO_STRING_TAG, {
    configurable: true,
    get: function get() {
      return isObject$n(this) ? this[TYPED_ARRAY_TAG$1] : undefined;
    }
  });
  for (NAME$1 in TypedArrayConstructorsList) if (global$K[NAME$1]) {
    createNonEnumerableProperty$6(global$K[NAME$1], TYPED_ARRAY_TAG$1, NAME$1);
  }
}
var arrayBufferViewCore = {
  NATIVE_ARRAY_BUFFER_VIEWS: NATIVE_ARRAY_BUFFER_VIEWS$3,
  TYPED_ARRAY_TAG: TYPED_ARRAY_TAG_REQUIRED && TYPED_ARRAY_TAG$1,
  aTypedArray: aTypedArray$s,
  aTypedArrayConstructor: aTypedArrayConstructor$3,
  exportTypedArrayMethod: exportTypedArrayMethod$t,
  exportTypedArrayStaticMethod: exportTypedArrayStaticMethod$2,
  getTypedArrayConstructor: getTypedArrayConstructor$4,
  isView: isView,
  isTypedArray: isTypedArray$1,
  TypedArray: TypedArray$1,
  TypedArrayPrototype: TypedArrayPrototype$2
};

var $$2u = _export;
var ArrayBufferViewCore$v = arrayBufferViewCore;
var NATIVE_ARRAY_BUFFER_VIEWS$2 = ArrayBufferViewCore$v.NATIVE_ARRAY_BUFFER_VIEWS;

// `ArrayBuffer.isView` method
// https://tc39.es/ecma262/#sec-arraybuffer.isview
$$2u({
  target: 'ArrayBuffer',
  stat: true,
  forced: !NATIVE_ARRAY_BUFFER_VIEWS$2
}, {
  isView: ArrayBufferViewCore$v.isView
});

var isConstructor$1 = isConstructor$6;
var tryToString = tryToString$7;
var $TypeError$d = TypeError;

// `Assert: IsConstructor(argument) is true`
var aConstructor$3 = function aConstructor(argument) {
  if (isConstructor$1(argument)) return argument;
  throw new $TypeError$d(tryToString(argument) + ' is not a constructor');
};

var anObject$s = anObject$D;
var aConstructor$2 = aConstructor$3;
var isNullOrUndefined$a = isNullOrUndefined$e;
var wellKnownSymbol$e = wellKnownSymbol$z;
var SPECIES$2 = wellKnownSymbol$e('species');

// `SpeciesConstructor` abstract operation
// https://tc39.es/ecma262/#sec-speciesconstructor
var speciesConstructor$6 = function speciesConstructor(O, defaultConstructor) {
  var C = anObject$s(O).constructor;
  var S;
  return C === undefined || isNullOrUndefined$a(S = anObject$s(C)[SPECIES$2]) ? defaultConstructor : aConstructor$2(S);
};

var $$2t = _export;
var uncurryThis$11 = functionUncurryThisClause;
var fails$13 = fails$1t;
var ArrayBufferModule$2 = arrayBuffer;
var anObject$r = anObject$D;
var toAbsoluteIndex$2 = toAbsoluteIndex$9;
var toLength$9 = toLength$d;
var speciesConstructor$5 = speciesConstructor$6;
var ArrayBuffer$4 = ArrayBufferModule$2.ArrayBuffer;
var DataView$3 = ArrayBufferModule$2.DataView;
var DataViewPrototype$1 = DataView$3.prototype;
var nativeArrayBufferSlice = uncurryThis$11(ArrayBuffer$4.prototype.slice);
var getUint8 = uncurryThis$11(DataViewPrototype$1.getUint8);
var setUint8 = uncurryThis$11(DataViewPrototype$1.setUint8);
var INCORRECT_SLICE = fails$13(function () {
  return !new ArrayBuffer$4(2).slice(1, undefined).byteLength;
});

// `ArrayBuffer.prototype.slice` method
// https://tc39.es/ecma262/#sec-arraybuffer.prototype.slice
$$2t({
  target: 'ArrayBuffer',
  proto: true,
  unsafe: true,
  forced: INCORRECT_SLICE
}, {
  slice: function slice(start, end) {
    if (nativeArrayBufferSlice && end === undefined) {
      return nativeArrayBufferSlice(anObject$r(this), start); // FF fix
    }
    var length = anObject$r(this).byteLength;
    var first = toAbsoluteIndex$2(start, length);
    var fin = toAbsoluteIndex$2(end === undefined ? length : end, length);
    var result = new (speciesConstructor$5(this, ArrayBuffer$4))(toLength$9(fin - first));
    var viewSource = new DataView$3(this);
    var viewTarget = new DataView$3(result);
    var index = 0;
    while (first < fin) {
      setUint8(viewTarget, index++, getUint8(viewSource, first++));
    }
    return result;
  }
});

var $$2s = _export;
var ArrayBufferModule$1 = arrayBuffer;
var NATIVE_ARRAY_BUFFER = arrayBufferBasicDetection;

// `DataView` constructor
// https://tc39.es/ecma262/#sec-dataview-constructor
$$2s({
  global: true,
  constructor: true,
  forced: !NATIVE_ARRAY_BUFFER
}, {
  DataView: ArrayBufferModule$1.DataView
});

var uncurryThisAccessor$2 = functionUncurryThisAccessor;
var classof$e = classofRaw$2;
var $TypeError$c = TypeError;

// Includes
// - Perform ? RequireInternalSlot(O, [[ArrayBufferData]]).
// - If IsSharedArrayBuffer(O) is true, throw a TypeError exception.
var arrayBufferByteLength$2 = uncurryThisAccessor$2(ArrayBuffer.prototype, 'byteLength', 'get') || function (O) {
  if (classof$e(O) !== 'ArrayBuffer') throw new $TypeError$c('ArrayBuffer expected');
  return O.byteLength;
};

var uncurryThis$10 = functionUncurryThis;
var arrayBufferByteLength$1 = arrayBufferByteLength$2;
var slice$3 = uncurryThis$10(ArrayBuffer.prototype.slice);
var arrayBufferIsDetached = function arrayBufferIsDetached(O) {
  if (arrayBufferByteLength$1(O) !== 0) return false;
  try {
    slice$3(O, 0, 0);
    return false;
  } catch (error) {
    return true;
  }
};

var DESCRIPTORS$v = descriptors;
var defineBuiltInAccessor$c = defineBuiltInAccessor$i;
var isDetached$1 = arrayBufferIsDetached;
var ArrayBufferPrototype$2 = ArrayBuffer.prototype;
if (DESCRIPTORS$v && !('detached' in ArrayBufferPrototype$2)) {
  defineBuiltInAccessor$c(ArrayBufferPrototype$2, 'detached', {
    configurable: true,
    get: function detached() {
      return isDetached$1(this);
    }
  });
}

var IS_NODE$5 = engineIsNode;
var tryNodeRequire$2 = function tryNodeRequire(name) {
  try {
    // eslint-disable-next-line no-new-func -- safe
    if (IS_NODE$5) return Function('return require("' + name + '")')();
  } catch (error) {/* empty */}
};

/* global Deno -- Deno case */
var engineIsDeno = (typeof Deno === "undefined" ? "undefined" : _typeof(Deno)) == 'object' && Deno && _typeof(Deno.version) == 'object';

var IS_DENO$2 = engineIsDeno;
var IS_NODE$4 = engineIsNode;
var engineIsBrowser = !IS_DENO$2 && !IS_NODE$4 && (typeof window === "undefined" ? "undefined" : _typeof(window)) == 'object' && (typeof document === "undefined" ? "undefined" : _typeof(document)) == 'object';

var global$J = global$10;
var fails$12 = fails$1t;
var V8$1 = engineV8Version;
var IS_BROWSER$1 = engineIsBrowser;
var IS_DENO$1 = engineIsDeno;
var IS_NODE$3 = engineIsNode;
var structuredClone$2 = global$J.structuredClone;
var structuredCloneProperTransfer = !!structuredClone$2 && !fails$12(function () {
  // prevent V8 ArrayBufferDetaching protector cell invalidation and performance degradation
  // https://github.com/zloirock/core-js/issues/679
  if (IS_DENO$1 && V8$1 > 92 || IS_NODE$3 && V8$1 > 94 || IS_BROWSER$1 && V8$1 > 97) return false;
  var buffer = new ArrayBuffer(8);
  var clone = structuredClone$2(buffer, {
    transfer: [buffer]
  });
  return buffer.byteLength !== 0 || clone.byteLength !== 8;
});

var global$I = global$10;
var tryNodeRequire$1 = tryNodeRequire$2;
var PROPER_STRUCTURED_CLONE_TRANSFER$2 = structuredCloneProperTransfer;
var structuredClone$1 = global$I.structuredClone;
var $ArrayBuffer = global$I.ArrayBuffer;
var $MessageChannel = global$I.MessageChannel;
var detach$1 = false;
var WorkerThreads, channel$1, buffer, $detach;
if (PROPER_STRUCTURED_CLONE_TRANSFER$2) {
  detach$1 = function detach(transferable) {
    structuredClone$1(transferable, {
      transfer: [transferable]
    });
  };
} else if ($ArrayBuffer) try {
  if (!$MessageChannel) {
    WorkerThreads = tryNodeRequire$1('worker_threads');
    if (WorkerThreads) $MessageChannel = WorkerThreads.MessageChannel;
  }
  if ($MessageChannel) {
    channel$1 = new $MessageChannel();
    buffer = new $ArrayBuffer(2);
    $detach = function $detach(transferable) {
      channel$1.port1.postMessage(null, [transferable]);
    };
    if (buffer.byteLength === 2) {
      $detach(buffer);
      if (buffer.byteLength === 0) detach$1 = $detach;
    }
  }
} catch (error) {/* empty */}
var detachTransferable$2 = detach$1;

var global$H = global$10;
var uncurryThis$$ = functionUncurryThis;
var uncurryThisAccessor$1 = functionUncurryThisAccessor;
var toIndex$1 = toIndex$3;
var isDetached = arrayBufferIsDetached;
var arrayBufferByteLength = arrayBufferByteLength$2;
var detachTransferable$1 = detachTransferable$2;
var PROPER_STRUCTURED_CLONE_TRANSFER$1 = structuredCloneProperTransfer;
var structuredClone = global$H.structuredClone;
var ArrayBuffer$3 = global$H.ArrayBuffer;
var DataView$2 = global$H.DataView;
var TypeError$6 = global$H.TypeError;
var min$5 = Math.min;
var ArrayBufferPrototype$1 = ArrayBuffer$3.prototype;
var DataViewPrototype = DataView$2.prototype;
var slice$2 = uncurryThis$$(ArrayBufferPrototype$1.slice);
var isResizable = uncurryThisAccessor$1(ArrayBufferPrototype$1, 'resizable', 'get');
var maxByteLength = uncurryThisAccessor$1(ArrayBufferPrototype$1, 'maxByteLength', 'get');
var getInt8 = uncurryThis$$(DataViewPrototype.getInt8);
var setInt8 = uncurryThis$$(DataViewPrototype.setInt8);
var arrayBufferTransfer = (PROPER_STRUCTURED_CLONE_TRANSFER$1 || detachTransferable$1) && function (arrayBuffer, newLength, preserveResizability) {
  var byteLength = arrayBufferByteLength(arrayBuffer);
  var newByteLength = newLength === undefined ? byteLength : toIndex$1(newLength);
  var fixedLength = !isResizable || !isResizable(arrayBuffer);
  var newBuffer;
  if (isDetached(arrayBuffer)) throw new TypeError$6('ArrayBuffer is detached');
  if (PROPER_STRUCTURED_CLONE_TRANSFER$1) {
    arrayBuffer = structuredClone(arrayBuffer, {
      transfer: [arrayBuffer]
    });
    if (byteLength === newByteLength && (preserveResizability || fixedLength)) return arrayBuffer;
  }
  if (byteLength >= newByteLength && (!preserveResizability || fixedLength)) {
    newBuffer = slice$2(arrayBuffer, 0, newByteLength);
  } else {
    var options = preserveResizability && !fixedLength && maxByteLength ? {
      maxByteLength: maxByteLength(arrayBuffer)
    } : undefined;
    newBuffer = new ArrayBuffer$3(newByteLength, options);
    var a = new DataView$2(arrayBuffer);
    var b = new DataView$2(newBuffer);
    var copyLength = min$5(newByteLength, byteLength);
    for (var i = 0; i < copyLength; i++) setInt8(b, i, getInt8(a, i));
  }
  if (!PROPER_STRUCTURED_CLONE_TRANSFER$1) detachTransferable$1(arrayBuffer);
  return newBuffer;
};

var $$2r = _export;
var $transfer$1 = arrayBufferTransfer;

// `ArrayBuffer.prototype.transfer` method
// https://tc39.es/proposal-arraybuffer-transfer/#sec-arraybuffer.prototype.transfer
if ($transfer$1) $$2r({
  target: 'ArrayBuffer',
  proto: true
}, {
  transfer: function transfer() {
    return $transfer$1(this, arguments.length ? arguments[0] : undefined, true);
  }
});

var $$2q = _export;
var $transfer = arrayBufferTransfer;

// `ArrayBuffer.prototype.transferToFixedLength` method
// https://tc39.es/proposal-arraybuffer-transfer/#sec-arraybuffer.prototype.transfertofixedlength
if ($transfer) $$2q({
  target: 'ArrayBuffer',
  proto: true
}, {
  transferToFixedLength: function transferToFixedLength() {
    return $transfer(this, arguments.length ? arguments[0] : undefined, false);
  }
});

var $$2p = _export;
var uncurryThis$_ = functionUncurryThis;
var fails$11 = fails$1t;

// IE8- non-standard case
var FORCED$s = fails$11(function () {
  // eslint-disable-next-line es/no-date-prototype-getyear-setyear -- detection
  return new Date(16e11).getYear() !== 120;
});
var getFullYear = uncurryThis$_(Date.prototype.getFullYear);

// `Date.prototype.getYear` method
// https://tc39.es/ecma262/#sec-date.prototype.getyear
$$2p({
  target: 'Date',
  proto: true,
  forced: FORCED$s
}, {
  getYear: function getYear() {
    return getFullYear(this) - 1900;
  }
});

// TODO: Remove from `core-js@4`
var $$2o = _export;
var uncurryThis$Z = functionUncurryThis;
var $Date = Date;
var thisTimeValue$4 = uncurryThis$Z($Date.prototype.getTime);

// `Date.now` method
// https://tc39.es/ecma262/#sec-date.now
$$2o({
  target: 'Date',
  stat: true
}, {
  now: function now() {
    return thisTimeValue$4(new $Date());
  }
});

var $$2n = _export;
var uncurryThis$Y = functionUncurryThis;
var toIntegerOrInfinity$b = toIntegerOrInfinity$m;
var DatePrototype$3 = Date.prototype;
var thisTimeValue$3 = uncurryThis$Y(DatePrototype$3.getTime);
var setFullYear = uncurryThis$Y(DatePrototype$3.setFullYear);

// `Date.prototype.setYear` method
// https://tc39.es/ecma262/#sec-date.prototype.setyear
$$2n({
  target: 'Date',
  proto: true
}, {
  setYear: function setYear(year) {
    // validate
    thisTimeValue$3(this);
    var yi = toIntegerOrInfinity$b(year);
    var yyyy = yi >= 0 && yi <= 99 ? yi + 1900 : yi;
    return setFullYear(this, yyyy);
  }
});

var $$2m = _export;

// `Date.prototype.toGMTString` method
// https://tc39.es/ecma262/#sec-date.prototype.togmtstring
$$2m({
  target: 'Date',
  proto: true
}, {
  toGMTString: Date.prototype.toUTCString
});

var toIntegerOrInfinity$a = toIntegerOrInfinity$m;
var toString$x = toString$D;
var requireObjectCoercible$k = requireObjectCoercible$o;
var $RangeError$8 = RangeError;

// `String.prototype.repeat` method implementation
// https://tc39.es/ecma262/#sec-string.prototype.repeat
var stringRepeat = function repeat(count) {
  var str = toString$x(requireObjectCoercible$k(this));
  var result = '';
  var n = toIntegerOrInfinity$a(count);
  if (n < 0 || n === Infinity) throw new $RangeError$8('Wrong number of repetitions');
  for (; n > 0; (n >>>= 1) && (str += str)) if (n & 1) result += str;
  return result;
};

// https://github.com/tc39/proposal-string-pad-start-end
var uncurryThis$X = functionUncurryThis;
var toLength$8 = toLength$d;
var toString$w = toString$D;
var $repeat$2 = stringRepeat;
var requireObjectCoercible$j = requireObjectCoercible$o;
var repeat$3 = uncurryThis$X($repeat$2);
var stringSlice$f = uncurryThis$X(''.slice);
var ceil = Math.ceil;

// `String.prototype.{ padStart, padEnd }` methods implementation
var createMethod$3 = function createMethod(IS_END) {
  return function ($this, maxLength, fillString) {
    var S = toString$w(requireObjectCoercible$j($this));
    var intMaxLength = toLength$8(maxLength);
    var stringLength = S.length;
    var fillStr = fillString === undefined ? ' ' : toString$w(fillString);
    var fillLen, stringFiller;
    if (intMaxLength <= stringLength || fillStr === '') return S;
    fillLen = intMaxLength - stringLength;
    stringFiller = repeat$3(fillStr, ceil(fillLen / fillStr.length));
    if (stringFiller.length > fillLen) stringFiller = stringSlice$f(stringFiller, 0, fillLen);
    return IS_END ? S + stringFiller : stringFiller + S;
  };
};
var stringPad = {
  // `String.prototype.padStart` method
  // https://tc39.es/ecma262/#sec-string.prototype.padstart
  start: createMethod$3(false),
  // `String.prototype.padEnd` method
  // https://tc39.es/ecma262/#sec-string.prototype.padend
  end: createMethod$3(true)
};

var uncurryThis$W = functionUncurryThis;
var fails$10 = fails$1t;
var padStart = stringPad.start;
var $RangeError$7 = RangeError;
var $isFinite$1 = isFinite;
var abs$6 = Math.abs;
var DatePrototype$2 = Date.prototype;
var nativeDateToISOString = DatePrototype$2.toISOString;
var thisTimeValue$2 = uncurryThis$W(DatePrototype$2.getTime);
var getUTCDate = uncurryThis$W(DatePrototype$2.getUTCDate);
var getUTCFullYear = uncurryThis$W(DatePrototype$2.getUTCFullYear);
var getUTCHours = uncurryThis$W(DatePrototype$2.getUTCHours);
var getUTCMilliseconds = uncurryThis$W(DatePrototype$2.getUTCMilliseconds);
var getUTCMinutes = uncurryThis$W(DatePrototype$2.getUTCMinutes);
var getUTCMonth = uncurryThis$W(DatePrototype$2.getUTCMonth);
var getUTCSeconds = uncurryThis$W(DatePrototype$2.getUTCSeconds);

// `Date.prototype.toISOString` method implementation
// https://tc39.es/ecma262/#sec-date.prototype.toisostring
// PhantomJS / old WebKit fails here:
var dateToIsoString = fails$10(function () {
  return nativeDateToISOString.call(new Date(-5e13 - 1)) !== '0385-07-25T07:06:39.999Z';
}) || !fails$10(function () {
  nativeDateToISOString.call(new Date(NaN));
}) ? function toISOString() {
  if (!$isFinite$1(thisTimeValue$2(this))) throw new $RangeError$7('Invalid time value');
  var date = this;
  var year = getUTCFullYear(date);
  var milliseconds = getUTCMilliseconds(date);
  var sign = year < 0 ? '-' : year > 9999 ? '+' : '';
  return sign + padStart(abs$6(year), sign ? 6 : 4, 0) + '-' + padStart(getUTCMonth(date) + 1, 2, 0) + '-' + padStart(getUTCDate(date), 2, 0) + 'T' + padStart(getUTCHours(date), 2, 0) + ':' + padStart(getUTCMinutes(date), 2, 0) + ':' + padStart(getUTCSeconds(date), 2, 0) + '.' + padStart(milliseconds, 3, 0) + 'Z';
} : nativeDateToISOString;

var $$2l = _export;
var toISOString = dateToIsoString;

// `Date.prototype.toISOString` method
// https://tc39.es/ecma262/#sec-date.prototype.toisostring
// PhantomJS / old WebKit has a broken implementations
$$2l({
  target: 'Date',
  proto: true,
  forced: Date.prototype.toISOString !== toISOString
}, {
  toISOString: toISOString
});

var $$2k = _export;
var fails$$ = fails$1t;
var toObject$b = toObject$t;
var toPrimitive$2 = toPrimitive$4;
var FORCED$r = fails$$(function () {
  return new Date(NaN).toJSON() !== null || Date.prototype.toJSON.call({
    toISOString: function toISOString() {
      return 1;
    }
  }) !== 1;
});

// `Date.prototype.toJSON` method
// https://tc39.es/ecma262/#sec-date.prototype.tojson
$$2k({
  target: 'Date',
  proto: true,
  arity: 1,
  forced: FORCED$r
}, {
  // eslint-disable-next-line no-unused-vars -- required for `.length`
  toJSON: function toJSON(key) {
    var O = toObject$b(this);
    var pv = toPrimitive$2(O, 'number');
    return typeof pv == 'number' && !isFinite(pv) ? null : O.toISOString();
  }
});

var anObject$q = anObject$D;
var ordinaryToPrimitive = ordinaryToPrimitive$2;
var $TypeError$b = TypeError;

// `Date.prototype[@@toPrimitive](hint)` method implementation
// https://tc39.es/ecma262/#sec-date.prototype-@@toprimitive
var dateToPrimitive$1 = function dateToPrimitive(hint) {
  anObject$q(this);
  if (hint === 'string' || hint === 'default') hint = 'string';else if (hint !== 'number') throw new $TypeError$b('Incorrect hint');
  return ordinaryToPrimitive(this, hint);
};

var hasOwn$f = hasOwnProperty_1;
var defineBuiltIn$f = defineBuiltIn$o;
var dateToPrimitive = dateToPrimitive$1;
var wellKnownSymbol$d = wellKnownSymbol$z;
var TO_PRIMITIVE = wellKnownSymbol$d('toPrimitive');
var DatePrototype$1 = Date.prototype;

// `Date.prototype[@@toPrimitive]` method
// https://tc39.es/ecma262/#sec-date.prototype-@@toprimitive
if (!hasOwn$f(DatePrototype$1, TO_PRIMITIVE)) {
  defineBuiltIn$f(DatePrototype$1, TO_PRIMITIVE, dateToPrimitive);
}

// TODO: Remove from `core-js@4`
var uncurryThis$V = functionUncurryThis;
var defineBuiltIn$e = defineBuiltIn$o;
var DatePrototype = Date.prototype;
var INVALID_DATE = 'Invalid Date';
var TO_STRING$1 = 'toString';
var nativeDateToString = uncurryThis$V(DatePrototype[TO_STRING$1]);
var thisTimeValue$1 = uncurryThis$V(DatePrototype.getTime);

// `Date.prototype.toString` method
// https://tc39.es/ecma262/#sec-date.prototype.tostring
if (String(new Date(NaN)) !== INVALID_DATE) {
  defineBuiltIn$e(DatePrototype, TO_STRING$1, function toString() {
    var value = thisTimeValue$1(this);
    // eslint-disable-next-line no-self-compare -- NaN check
    return value === value ? nativeDateToString(this) : INVALID_DATE;
  });
}

var $$2j = _export;
var uncurryThis$U = functionUncurryThis;
var toString$v = toString$D;
var charAt$e = uncurryThis$U(''.charAt);
var charCodeAt$6 = uncurryThis$U(''.charCodeAt);
var exec$7 = uncurryThis$U(/./.exec);
var numberToString$1 = uncurryThis$U(1.0.toString);
var toUpperCase = uncurryThis$U(''.toUpperCase);
var raw = /[\w*+\-./@]/;
var hex$1 = function hex(code, length) {
  var result = numberToString$1(code, 16);
  while (result.length < length) result = '0' + result;
  return result;
};

// `escape` method
// https://tc39.es/ecma262/#sec-escape-string
$$2j({
  global: true
}, {
  escape: function escape(string) {
    var str = toString$v(string);
    var result = '';
    var length = str.length;
    var index = 0;
    var chr, code;
    while (index < length) {
      chr = charAt$e(str, index++);
      if (exec$7(raw, chr)) {
        result += chr;
      } else {
        code = charCodeAt$6(chr, 0);
        if (code < 256) {
          result += '%' + hex$1(code, 2);
        } else {
          result += '%u' + toUpperCase(hex$1(code, 4));
        }
      }
    }
    return result;
  }
});

var uncurryThis$T = functionUncurryThis;
var aCallable$f = aCallable$o;
var isObject$m = isObject$B;
var hasOwn$e = hasOwnProperty_1;
var arraySlice$5 = arraySlice$a;
var NATIVE_BIND = functionBindNative;
var $Function = Function;
var concat$2 = uncurryThis$T([].concat);
var join$7 = uncurryThis$T([].join);
var factories = {};
var construct = function construct(C, argsLength, args) {
  if (!hasOwn$e(factories, argsLength)) {
    var list = [];
    var i = 0;
    for (; i < argsLength; i++) list[i] = 'a[' + i + ']';
    factories[argsLength] = $Function('C,a', 'return new C(' + join$7(list, ',') + ')');
  }
  return factories[argsLength](C, args);
};

// `Function.prototype.bind` method implementation
// https://tc39.es/ecma262/#sec-function.prototype.bind
// eslint-disable-next-line es/no-function-prototype-bind -- detection
var functionBind = NATIVE_BIND ? $Function.bind : function bind(that /* , ...args */) {
  var F = aCallable$f(this);
  var Prototype = F.prototype;
  var partArgs = arraySlice$5(arguments, 1);
  var boundFunction = function bound( /* args... */
  ) {
    var args = concat$2(partArgs, arraySlice$5(arguments));
    return this instanceof boundFunction ? construct(F, args.length, args) : F.apply(that, args);
  };
  if (isObject$m(Prototype)) boundFunction.prototype = Prototype;
  return boundFunction;
};

// TODO: Remove from `core-js@4`
var $$2i = _export;
var bind$9 = functionBind;

// `Function.prototype.bind` method
// https://tc39.es/ecma262/#sec-function.prototype.bind
// eslint-disable-next-line es/no-function-prototype-bind -- detection
$$2i({
  target: 'Function',
  proto: true,
  forced: Function.bind !== bind$9
}, {
  bind: bind$9
});

var isCallable$d = isCallable$y;
var isObject$l = isObject$B;
var definePropertyModule$5 = objectDefineProperty;
var isPrototypeOf$4 = objectIsPrototypeOf;
var wellKnownSymbol$c = wellKnownSymbol$z;
var makeBuiltIn = makeBuiltInExports;
var HAS_INSTANCE = wellKnownSymbol$c('hasInstance');
var FunctionPrototype$1 = Function.prototype;

// `Function.prototype[@@hasInstance]` method
// https://tc39.es/ecma262/#sec-function.prototype-@@hasinstance
if (!(HAS_INSTANCE in FunctionPrototype$1)) {
  definePropertyModule$5.f(FunctionPrototype$1, HAS_INSTANCE, {
    value: makeBuiltIn(function (O) {
      if (!isCallable$d(this) || !isObject$l(O)) return false;
      var P = this.prototype;
      return isObject$l(P) ? isPrototypeOf$4(P, O) : O instanceof this;
    }, HAS_INSTANCE)
  });
}

var DESCRIPTORS$u = descriptors;
var FUNCTION_NAME_EXISTS = functionName.EXISTS;
var uncurryThis$S = functionUncurryThis;
var defineBuiltInAccessor$b = defineBuiltInAccessor$i;
var FunctionPrototype = Function.prototype;
var functionToString = uncurryThis$S(FunctionPrototype.toString);
var nameRE = /function\b(?:\s|\/\*[\S\s]*?\*\/|\/\/[^\n\r]*[\n\r]+)*([^\s(/]*)/;
var regExpExec$5 = uncurryThis$S(nameRE.exec);
var NAME = 'name';

// Function instances `.name` property
// https://tc39.es/ecma262/#sec-function-instances-name
if (DESCRIPTORS$u && !FUNCTION_NAME_EXISTS) {
  defineBuiltInAccessor$b(FunctionPrototype, NAME, {
    configurable: true,
    get: function get() {
      try {
        return regExpExec$5(nameRE, functionToString(this))[1];
      } catch (error) {
        return '';
      }
    }
  });
}

var $$2h = _export;
var global$G = global$10;

// `globalThis` object
// https://tc39.es/ecma262/#sec-globalthis
$$2h({
  global: true,
  forced: global$G.globalThis !== global$G
}, {
  globalThis: global$G
});

var global$F = global$10;
var setToStringTag$8 = setToStringTag$e;

// JSON[@@toStringTag] property
// https://tc39.es/ecma262/#sec-json-@@tostringtag
setToStringTag$8(global$F.JSON, 'JSON', true);

var internalMetadata = {exports: {}};

// FF26- bug: ArrayBuffers are non-extensible, but Object.isExtensible does not report it
var fails$_ = fails$1t;
var arrayBufferNonExtensible = fails$_(function () {
  if (typeof ArrayBuffer == 'function') {
    var buffer = new ArrayBuffer(8);
    // eslint-disable-next-line es/no-object-isextensible, es/no-object-defineproperty -- safe
    if (Object.isExtensible(buffer)) Object.defineProperty(buffer, 'a', {
      value: 8
    });
  }
});

var fails$Z = fails$1t;
var isObject$k = isObject$B;
var classof$d = classofRaw$2;
var ARRAY_BUFFER_NON_EXTENSIBLE$2 = arrayBufferNonExtensible;

// eslint-disable-next-line es/no-object-isextensible -- safe
var $isExtensible$2 = Object.isExtensible;
var FAILS_ON_PRIMITIVES$6 = fails$Z(function () {
  $isExtensible$2(1);
});

// `Object.isExtensible` method
// https://tc39.es/ecma262/#sec-object.isextensible
var objectIsExtensible = FAILS_ON_PRIMITIVES$6 || ARRAY_BUFFER_NON_EXTENSIBLE$2 ? function isExtensible(it) {
  if (!isObject$k(it)) return false;
  if (ARRAY_BUFFER_NON_EXTENSIBLE$2 && classof$d(it) === 'ArrayBuffer') return false;
  return $isExtensible$2 ? $isExtensible$2(it) : true;
} : $isExtensible$2;

var fails$Y = fails$1t;
var freezing = !fails$Y(function () {
  // eslint-disable-next-line es/no-object-isextensible, es/no-object-preventextensions -- required for testing
  return Object.isExtensible(Object.preventExtensions({}));
});

var $$2g = _export;
var uncurryThis$R = functionUncurryThis;
var hiddenKeys = hiddenKeys$6;
var isObject$j = isObject$B;
var hasOwn$d = hasOwnProperty_1;
var defineProperty$6 = objectDefineProperty.f;
var getOwnPropertyNamesModule = objectGetOwnPropertyNames;
var getOwnPropertyNamesExternalModule = objectGetOwnPropertyNamesExternal;
var isExtensible$1 = objectIsExtensible;
var uid$1 = uid$6;
var FREEZING$5 = freezing;
var REQUIRED = false;
var METADATA = uid$1('meta');
var id$1 = 0;
var setMetadata = function setMetadata(it) {
  defineProperty$6(it, METADATA, {
    value: {
      objectID: 'O' + id$1++,
      // object ID
      weakData: {} // weak collections IDs
    }
  });
};
var fastKey$1 = function fastKey(it, create) {
  // return a primitive with prefix
  if (!isObject$j(it)) return _typeof(it) == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
  if (!hasOwn$d(it, METADATA)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible$1(it)) return 'F';
    // not necessary to add metadata
    if (!create) return 'E';
    // add missing metadata
    setMetadata(it);
    // return object ID
  }
  return it[METADATA].objectID;
};
var getWeakData$1 = function getWeakData(it, create) {
  if (!hasOwn$d(it, METADATA)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible$1(it)) return true;
    // not necessary to add metadata
    if (!create) return false;
    // add missing metadata
    setMetadata(it);
    // return the store of weak collections IDs
  }
  return it[METADATA].weakData;
};

// add metadata on freeze-family methods calling
var onFreeze$3 = function onFreeze(it) {
  if (FREEZING$5 && REQUIRED && isExtensible$1(it) && !hasOwn$d(it, METADATA)) setMetadata(it);
  return it;
};
var enable = function enable() {
  meta.enable = function () {/* empty */};
  REQUIRED = true;
  var getOwnPropertyNames = getOwnPropertyNamesModule.f;
  var splice = uncurryThis$R([].splice);
  var test = {};
  test[METADATA] = 1;

  // prevent exposing of metadata key
  if (getOwnPropertyNames(test).length) {
    getOwnPropertyNamesModule.f = function (it) {
      var result = getOwnPropertyNames(it);
      for (var i = 0, length = result.length; i < length; i++) {
        if (result[i] === METADATA) {
          splice(result, i, 1);
          break;
        }
      }
      return result;
    };
    $$2g({
      target: 'Object',
      stat: true,
      forced: true
    }, {
      getOwnPropertyNames: getOwnPropertyNamesExternalModule.f
    });
  }
};
var meta = internalMetadata.exports = {
  enable: enable,
  fastKey: fastKey$1,
  getWeakData: getWeakData$1,
  onFreeze: onFreeze$3
};
hiddenKeys[METADATA] = true;
var internalMetadataExports = internalMetadata.exports;

var $$2f = _export;
var global$E = global$10;
var uncurryThis$Q = functionUncurryThis;
var isForced$3 = isForced_1;
var defineBuiltIn$d = defineBuiltIn$o;
var InternalMetadataModule$1 = internalMetadataExports;
var iterate$c = iterate$e;
var anInstance$8 = anInstance$a;
var isCallable$c = isCallable$y;
var isNullOrUndefined$9 = isNullOrUndefined$e;
var isObject$i = isObject$B;
var fails$X = fails$1t;
var checkCorrectnessOfIteration$2 = checkCorrectnessOfIteration$4;
var setToStringTag$7 = setToStringTag$e;
var inheritIfRequired$4 = inheritIfRequired$7;
var collection$4 = function collection(CONSTRUCTOR_NAME, wrapper, common) {
  var IS_MAP = CONSTRUCTOR_NAME.indexOf('Map') !== -1;
  var IS_WEAK = CONSTRUCTOR_NAME.indexOf('Weak') !== -1;
  var ADDER = IS_MAP ? 'set' : 'add';
  var NativeConstructor = global$E[CONSTRUCTOR_NAME];
  var NativePrototype = NativeConstructor && NativeConstructor.prototype;
  var Constructor = NativeConstructor;
  var exported = {};
  var fixMethod = function fixMethod(KEY) {
    var uncurriedNativeMethod = uncurryThis$Q(NativePrototype[KEY]);
    defineBuiltIn$d(NativePrototype, KEY, KEY === 'add' ? function add(value) {
      uncurriedNativeMethod(this, value === 0 ? 0 : value);
      return this;
    } : KEY === 'delete' ? function (key) {
      return IS_WEAK && !isObject$i(key) ? false : uncurriedNativeMethod(this, key === 0 ? 0 : key);
    } : KEY === 'get' ? function get(key) {
      return IS_WEAK && !isObject$i(key) ? undefined : uncurriedNativeMethod(this, key === 0 ? 0 : key);
    } : KEY === 'has' ? function has(key) {
      return IS_WEAK && !isObject$i(key) ? false : uncurriedNativeMethod(this, key === 0 ? 0 : key);
    } : function set(key, value) {
      uncurriedNativeMethod(this, key === 0 ? 0 : key, value);
      return this;
    });
  };
  var REPLACE = isForced$3(CONSTRUCTOR_NAME, !isCallable$c(NativeConstructor) || !(IS_WEAK || NativePrototype.forEach && !fails$X(function () {
    new NativeConstructor().entries().next();
  })));
  if (REPLACE) {
    // create collection constructor
    Constructor = common.getConstructor(wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER);
    InternalMetadataModule$1.enable();
  } else if (isForced$3(CONSTRUCTOR_NAME, true)) {
    var instance = new Constructor();
    // early implementations not supports chaining
    var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) !== instance;
    // V8 ~ Chromium 40- weak-collections throws on primitives, but should return false
    var THROWS_ON_PRIMITIVES = fails$X(function () {
      instance.has(1);
    });
    // most early implementations doesn't supports iterables, most modern - not close it correctly
    // eslint-disable-next-line no-new -- required for testing
    var ACCEPT_ITERABLES = checkCorrectnessOfIteration$2(function (iterable) {
      new NativeConstructor(iterable);
    });
    // for early implementations -0 and +0 not the same
    var BUGGY_ZERO = !IS_WEAK && fails$X(function () {
      // V8 ~ Chromium 42- fails only with 5+ elements
      var $instance = new NativeConstructor();
      var index = 5;
      while (index--) $instance[ADDER](index, index);
      return !$instance.has(-0);
    });
    if (!ACCEPT_ITERABLES) {
      Constructor = wrapper(function (dummy, iterable) {
        anInstance$8(dummy, NativePrototype);
        var that = inheritIfRequired$4(new NativeConstructor(), dummy, Constructor);
        if (!isNullOrUndefined$9(iterable)) iterate$c(iterable, that[ADDER], {
          that: that,
          AS_ENTRIES: IS_MAP
        });
        return that;
      });
      Constructor.prototype = NativePrototype;
      NativePrototype.constructor = Constructor;
    }
    if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {
      fixMethod('delete');
      fixMethod('has');
      IS_MAP && fixMethod('get');
    }
    if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);

    // weak collections should not contains .clear method
    if (IS_WEAK && NativePrototype.clear) delete NativePrototype.clear;
  }
  exported[CONSTRUCTOR_NAME] = Constructor;
  $$2f({
    global: true,
    constructor: true,
    forced: Constructor !== NativeConstructor
  }, exported);
  setToStringTag$7(Constructor, CONSTRUCTOR_NAME);
  if (!IS_WEAK) common.setStrong(Constructor, CONSTRUCTOR_NAME, IS_MAP);
  return Constructor;
};

var create$8 = objectCreate;
var defineBuiltInAccessor$a = defineBuiltInAccessor$i;
var defineBuiltIns$3 = defineBuiltIns$5;
var bind$8 = functionBindContext;
var anInstance$7 = anInstance$a;
var isNullOrUndefined$8 = isNullOrUndefined$e;
var iterate$b = iterate$e;
var defineIterator$1 = iteratorDefine;
var createIterResultObject$3 = createIterResultObject$5;
var setSpecies$3 = setSpecies$6;
var DESCRIPTORS$t = descriptors;
var fastKey = internalMetadataExports.fastKey;
var InternalStateModule$8 = internalState;
var setInternalState$8 = InternalStateModule$8.set;
var internalStateGetterFor$1 = InternalStateModule$8.getterFor;
var collectionStrong$2 = {
  getConstructor: function getConstructor(wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER) {
    var Constructor = wrapper(function (that, iterable) {
      anInstance$7(that, Prototype);
      setInternalState$8(that, {
        type: CONSTRUCTOR_NAME,
        index: create$8(null),
        first: undefined,
        last: undefined,
        size: 0
      });
      if (!DESCRIPTORS$t) that.size = 0;
      if (!isNullOrUndefined$8(iterable)) iterate$b(iterable, that[ADDER], {
        that: that,
        AS_ENTRIES: IS_MAP
      });
    });
    var Prototype = Constructor.prototype;
    var getInternalState = internalStateGetterFor$1(CONSTRUCTOR_NAME);
    var define = function define(that, key, value) {
      var state = getInternalState(that);
      var entry = getEntry(that, key);
      var previous, index;
      // change existing entry
      if (entry) {
        entry.value = value;
        // create new entry
      } else {
        state.last = entry = {
          index: index = fastKey(key, true),
          key: key,
          value: value,
          previous: previous = state.last,
          next: undefined,
          removed: false
        };
        if (!state.first) state.first = entry;
        if (previous) previous.next = entry;
        if (DESCRIPTORS$t) state.size++;else that.size++;
        // add to index
        if (index !== 'F') state.index[index] = entry;
      }
      return that;
    };
    var getEntry = function getEntry(that, key) {
      var state = getInternalState(that);
      // fast case
      var index = fastKey(key);
      var entry;
      if (index !== 'F') return state.index[index];
      // frozen object case
      for (entry = state.first; entry; entry = entry.next) {
        if (entry.key === key) return entry;
      }
    };
    defineBuiltIns$3(Prototype, {
      // `{ Map, Set }.prototype.clear()` methods
      // https://tc39.es/ecma262/#sec-map.prototype.clear
      // https://tc39.es/ecma262/#sec-set.prototype.clear
      clear: function clear() {
        var that = this;
        var state = getInternalState(that);
        var entry = state.first;
        while (entry) {
          entry.removed = true;
          if (entry.previous) entry.previous = entry.previous.next = undefined;
          entry = entry.next;
        }
        state.first = state.last = undefined;
        state.index = create$8(null);
        if (DESCRIPTORS$t) state.size = 0;else that.size = 0;
      },
      // `{ Map, Set }.prototype.delete(key)` methods
      // https://tc39.es/ecma262/#sec-map.prototype.delete
      // https://tc39.es/ecma262/#sec-set.prototype.delete
      'delete': function _delete(key) {
        var that = this;
        var state = getInternalState(that);
        var entry = getEntry(that, key);
        if (entry) {
          var next = entry.next;
          var prev = entry.previous;
          delete state.index[entry.index];
          entry.removed = true;
          if (prev) prev.next = next;
          if (next) next.previous = prev;
          if (state.first === entry) state.first = next;
          if (state.last === entry) state.last = prev;
          if (DESCRIPTORS$t) state.size--;else that.size--;
        }
        return !!entry;
      },
      // `{ Map, Set }.prototype.forEach(callbackfn, thisArg = undefined)` methods
      // https://tc39.es/ecma262/#sec-map.prototype.foreach
      // https://tc39.es/ecma262/#sec-set.prototype.foreach
      forEach: function forEach(callbackfn /* , that = undefined */) {
        var state = getInternalState(this);
        var boundFunction = bind$8(callbackfn, arguments.length > 1 ? arguments[1] : undefined);
        var entry;
        while (entry = entry ? entry.next : state.first) {
          boundFunction(entry.value, entry.key, this);
          // revert to the last existing entry
          while (entry && entry.removed) entry = entry.previous;
        }
      },
      // `{ Map, Set}.prototype.has(key)` methods
      // https://tc39.es/ecma262/#sec-map.prototype.has
      // https://tc39.es/ecma262/#sec-set.prototype.has
      has: function has(key) {
        return !!getEntry(this, key);
      }
    });
    defineBuiltIns$3(Prototype, IS_MAP ? {
      // `Map.prototype.get(key)` method
      // https://tc39.es/ecma262/#sec-map.prototype.get
      get: function get(key) {
        var entry = getEntry(this, key);
        return entry && entry.value;
      },
      // `Map.prototype.set(key, value)` method
      // https://tc39.es/ecma262/#sec-map.prototype.set
      set: function set(key, value) {
        return define(this, key === 0 ? 0 : key, value);
      }
    } : {
      // `Set.prototype.add(value)` method
      // https://tc39.es/ecma262/#sec-set.prototype.add
      add: function add(value) {
        return define(this, value = value === 0 ? 0 : value, value);
      }
    });
    if (DESCRIPTORS$t) defineBuiltInAccessor$a(Prototype, 'size', {
      configurable: true,
      get: function get() {
        return getInternalState(this).size;
      }
    });
    return Constructor;
  },
  setStrong: function setStrong(Constructor, CONSTRUCTOR_NAME, IS_MAP) {
    var ITERATOR_NAME = CONSTRUCTOR_NAME + ' Iterator';
    var getInternalCollectionState = internalStateGetterFor$1(CONSTRUCTOR_NAME);
    var getInternalIteratorState = internalStateGetterFor$1(ITERATOR_NAME);
    // `{ Map, Set }.prototype.{ keys, values, entries, @@iterator }()` methods
    // https://tc39.es/ecma262/#sec-map.prototype.entries
    // https://tc39.es/ecma262/#sec-map.prototype.keys
    // https://tc39.es/ecma262/#sec-map.prototype.values
    // https://tc39.es/ecma262/#sec-map.prototype-@@iterator
    // https://tc39.es/ecma262/#sec-set.prototype.entries
    // https://tc39.es/ecma262/#sec-set.prototype.keys
    // https://tc39.es/ecma262/#sec-set.prototype.values
    // https://tc39.es/ecma262/#sec-set.prototype-@@iterator
    defineIterator$1(Constructor, CONSTRUCTOR_NAME, function (iterated, kind) {
      setInternalState$8(this, {
        type: ITERATOR_NAME,
        target: iterated,
        state: getInternalCollectionState(iterated),
        kind: kind,
        last: undefined
      });
    }, function () {
      var state = getInternalIteratorState(this);
      var kind = state.kind;
      var entry = state.last;
      // revert to the last existing entry
      while (entry && entry.removed) entry = entry.previous;
      // get next entry
      if (!state.target || !(state.last = entry = entry ? entry.next : state.state.first)) {
        // or finish the iteration
        state.target = undefined;
        return createIterResultObject$3(undefined, true);
      }
      // return step by kind
      if (kind === 'keys') return createIterResultObject$3(entry.key, false);
      if (kind === 'values') return createIterResultObject$3(entry.value, false);
      return createIterResultObject$3([entry.key, entry.value], false);
    }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);

    // `{ Map, Set }.prototype[@@species]` accessors
    // https://tc39.es/ecma262/#sec-get-map-@@species
    // https://tc39.es/ecma262/#sec-get-set-@@species
    setSpecies$3(CONSTRUCTOR_NAME);
  }
};

var collection$3 = collection$4;
var collectionStrong$1 = collectionStrong$2;

// `Map` constructor
// https://tc39.es/ecma262/#sec-map-objects
collection$3('Map', function (init) {
  return function Map() {
    return init(this, arguments.length ? arguments[0] : undefined);
  };
}, collectionStrong$1);

var uncurryThis$P = functionUncurryThis;

// eslint-disable-next-line es/no-map -- safe
var MapPrototype = Map.prototype;
var mapHelpers = {
  // eslint-disable-next-line es/no-map -- safe
  Map: Map,
  set: uncurryThis$P(MapPrototype.set),
  get: uncurryThis$P(MapPrototype.get),
  has: uncurryThis$P(MapPrototype.has),
  remove: uncurryThis$P(MapPrototype['delete']),
  proto: MapPrototype
};

var $$2e = _export;
var uncurryThis$O = functionUncurryThis;
var aCallable$e = aCallable$o;
var requireObjectCoercible$i = requireObjectCoercible$o;
var iterate$a = iterate$e;
var MapHelpers$1 = mapHelpers;
var fails$W = fails$1t;
var Map$2 = MapHelpers$1.Map;
var has$6 = MapHelpers$1.has;
var get$1 = MapHelpers$1.get;
var set$2 = MapHelpers$1.set;
var push$b = uncurryThis$O([].push);
var DOES_NOT_WORK_WITH_PRIMITIVES$1 = fails$W(function () {
  return Map$2.groupBy('ab', function (it) {
    return it;
  }).get('a').length !== 1;
});

// `Map.groupBy` method
// https://github.com/tc39/proposal-array-grouping
$$2e({
  target: 'Map',
  stat: true,
  forced: DOES_NOT_WORK_WITH_PRIMITIVES$1
}, {
  groupBy: function groupBy(items, callbackfn) {
    requireObjectCoercible$i(items);
    aCallable$e(callbackfn);
    var map = new Map$2();
    var k = 0;
    iterate$a(items, function (value) {
      var key = callbackfn(value, k++);
      if (!has$6(map, key)) set$2(map, key, [value]);else push$b(get$1(map, key), value);
    });
    return map;
  }
});

var log$7 = Math.log;

// `Math.log1p` method implementation
// https://tc39.es/ecma262/#sec-math.log1p
// eslint-disable-next-line es/no-math-log1p -- safe
var mathLog1p = Math.log1p || function log1p(x) {
  var n = +x;
  return n > -1e-8 && n < 1e-8 ? n - n * n / 2 : log$7(1 + n);
};

var $$2d = _export;
var log1p$1 = mathLog1p;

// eslint-disable-next-line es/no-math-acosh -- required for testing
var $acosh = Math.acosh;
var log$6 = Math.log;
var sqrt$2 = Math.sqrt;
var LN2$1 = Math.LN2;
var FORCED$q = !$acosh
// V8 bug: https://code.google.com/p/v8/issues/detail?id=3509
|| Math.floor($acosh(Number.MAX_VALUE)) !== 710
// Tor Browser bug: Math.acosh(Infinity) -> NaN
|| $acosh(Infinity) !== Infinity;

// `Math.acosh` method
// https://tc39.es/ecma262/#sec-math.acosh
$$2d({
  target: 'Math',
  stat: true,
  forced: FORCED$q
}, {
  acosh: function acosh(x) {
    var n = +x;
    return n < 1 ? NaN : n > 94906265.62425156 ? log$6(n) + LN2$1 : log1p$1(n - 1 + sqrt$2(n - 1) * sqrt$2(n + 1));
  }
});

var $$2c = _export;

// eslint-disable-next-line es/no-math-asinh -- required for testing
var $asinh = Math.asinh;
var log$5 = Math.log;
var sqrt$1 = Math.sqrt;
function asinh(x) {
  var n = +x;
  return !isFinite(n) || n === 0 ? n : n < 0 ? -asinh(-n) : log$5(n + sqrt$1(n * n + 1));
}
var FORCED$p = !($asinh && 1 / $asinh(0) > 0);

// `Math.asinh` method
// https://tc39.es/ecma262/#sec-math.asinh
// Tor Browser bug: Math.asinh(0) -> -0
$$2c({
  target: 'Math',
  stat: true,
  forced: FORCED$p
}, {
  asinh: asinh
});

var $$2b = _export;

// eslint-disable-next-line es/no-math-atanh -- required for testing
var $atanh = Math.atanh;
var log$4 = Math.log;
var FORCED$o = !($atanh && 1 / $atanh(-0) < 0);

// `Math.atanh` method
// https://tc39.es/ecma262/#sec-math.atanh
// Tor Browser bug: Math.atanh(-0) -> 0
$$2b({
  target: 'Math',
  stat: true,
  forced: FORCED$o
}, {
  atanh: function atanh(x) {
    var n = +x;
    return n === 0 ? n : log$4((1 + n) / (1 - n)) / 2;
  }
});

var $$2a = _export;
var sign$1 = mathSign;
var abs$5 = Math.abs;
var pow$3 = Math.pow;

// `Math.cbrt` method
// https://tc39.es/ecma262/#sec-math.cbrt
$$2a({
  target: 'Math',
  stat: true
}, {
  cbrt: function cbrt(x) {
    var n = +x;
    return sign$1(n) * pow$3(abs$5(n), 1 / 3);
  }
});

var $$29 = _export;
var floor$7 = Math.floor;
var log$3 = Math.log;
var LOG2E = Math.LOG2E;

// `Math.clz32` method
// https://tc39.es/ecma262/#sec-math.clz32
$$29({
  target: 'Math',
  stat: true
}, {
  clz32: function clz32(x) {
    var n = x >>> 0;
    return n ? 31 - floor$7(log$3(n + 0.5) * LOG2E) : 32;
  }
});

// eslint-disable-next-line es/no-math-expm1 -- safe
var $expm1 = Math.expm1;
var exp$2 = Math.exp;

// `Math.expm1` method implementation
// https://tc39.es/ecma262/#sec-math.expm1
var mathExpm1 = !$expm1
// Old FF bug
// eslint-disable-next-line no-loss-of-precision -- required for old engines
|| $expm1(10) > 22025.465794806719 || $expm1(10) < 22025.4657948067165168
// Tor Browser bug
|| $expm1(-2e-17) !== -2e-17 ? function expm1(x) {
  var n = +x;
  return n === 0 ? n : n > -1e-6 && n < 1e-6 ? n + n * n / 2 : exp$2(n) - 1;
} : $expm1;

var $$28 = _export;
var expm1$3 = mathExpm1;

// eslint-disable-next-line es/no-math-cosh -- required for testing
var $cosh = Math.cosh;
var abs$4 = Math.abs;
var E$1 = Math.E;
var FORCED$n = !$cosh || $cosh(710) === Infinity;

// `Math.cosh` method
// https://tc39.es/ecma262/#sec-math.cosh
$$28({
  target: 'Math',
  stat: true,
  forced: FORCED$n
}, {
  cosh: function cosh(x) {
    var t = expm1$3(abs$4(x) - 1) + 1;
    return (t + 1 / (t * E$1 * E$1)) * (E$1 / 2);
  }
});

var $$27 = _export;
var expm1$2 = mathExpm1;

// `Math.expm1` method
// https://tc39.es/ecma262/#sec-math.expm1
// eslint-disable-next-line es/no-math-expm1 -- required for testing
$$27({
  target: 'Math',
  stat: true,
  forced: expm1$2 !== Math.expm1
}, {
  expm1: expm1$2
});

var $$26 = _export;
var fround = mathFround;

// `Math.fround` method
// https://tc39.es/ecma262/#sec-math.fround
$$26({
  target: 'Math',
  stat: true
}, {
  fround: fround
});

var $$25 = _export;

// eslint-disable-next-line es/no-math-hypot -- required for testing
var $hypot = Math.hypot;
var abs$3 = Math.abs;
var sqrt = Math.sqrt;

// Chrome 77 bug
// https://bugs.chromium.org/p/v8/issues/detail?id=9546
var FORCED$m = !!$hypot && $hypot(Infinity, NaN) !== Infinity;

// `Math.hypot` method
// https://tc39.es/ecma262/#sec-math.hypot
$$25({
  target: 'Math',
  stat: true,
  arity: 2,
  forced: FORCED$m
}, {
  // eslint-disable-next-line no-unused-vars -- required for `.length`
  hypot: function hypot(value1, value2) {
    var sum = 0;
    var i = 0;
    var aLen = arguments.length;
    var larg = 0;
    var arg, div;
    while (i < aLen) {
      arg = abs$3(arguments[i++]);
      if (larg < arg) {
        div = larg / arg;
        sum = sum * div * div + 1;
        larg = arg;
      } else if (arg > 0) {
        div = arg / larg;
        sum += div * div;
      } else sum += arg;
    }
    return larg === Infinity ? Infinity : larg * sqrt(sum);
  }
});

var $$24 = _export;
var fails$V = fails$1t;

// eslint-disable-next-line es/no-math-imul -- required for testing
var $imul = Math.imul;
var FORCED$l = fails$V(function () {
  return $imul(0xFFFFFFFF, 5) !== -5 || $imul.length !== 2;
});

// `Math.imul` method
// https://tc39.es/ecma262/#sec-math.imul
// some WebKit versions fails with big numbers, some has wrong arity
$$24({
  target: 'Math',
  stat: true,
  forced: FORCED$l
}, {
  imul: function imul(x, y) {
    var UINT16 = 0xFFFF;
    var xn = +x;
    var yn = +y;
    var xl = UINT16 & xn;
    var yl = UINT16 & yn;
    return 0 | xl * yl + ((UINT16 & xn >>> 16) * yl + xl * (UINT16 & yn >>> 16) << 16 >>> 0);
  }
});

var log$2 = Math.log;
var LOG10E = Math.LOG10E;

// eslint-disable-next-line es/no-math-log10 -- safe
var mathLog10 = Math.log10 || function log10(x) {
  return log$2(x) * LOG10E;
};

var $$23 = _export;
var log10$1 = mathLog10;

// `Math.log10` method
// https://tc39.es/ecma262/#sec-math.log10
$$23({
  target: 'Math',
  stat: true
}, {
  log10: log10$1
});

var $$22 = _export;
var log1p = mathLog1p;

// `Math.log1p` method
// https://tc39.es/ecma262/#sec-math.log1p
$$22({
  target: 'Math',
  stat: true
}, {
  log1p: log1p
});

var $$21 = _export;
var log$1 = Math.log;
var LN2 = Math.LN2;

// `Math.log2` method
// https://tc39.es/ecma262/#sec-math.log2
$$21({
  target: 'Math',
  stat: true
}, {
  log2: function log2(x) {
    return log$1(x) / LN2;
  }
});

var $$20 = _export;
var sign = mathSign;

// `Math.sign` method
// https://tc39.es/ecma262/#sec-math.sign
$$20({
  target: 'Math',
  stat: true
}, {
  sign: sign
});

var $$1$ = _export;
var fails$U = fails$1t;
var expm1$1 = mathExpm1;
var abs$2 = Math.abs;
var exp$1 = Math.exp;
var E = Math.E;
var FORCED$k = fails$U(function () {
  // eslint-disable-next-line es/no-math-sinh -- required for testing
  return Math.sinh(-2e-17) !== -2e-17;
});

// `Math.sinh` method
// https://tc39.es/ecma262/#sec-math.sinh
// V8 near Chromium 38 has a problem with very small numbers
$$1$({
  target: 'Math',
  stat: true,
  forced: FORCED$k
}, {
  sinh: function sinh(x) {
    var n = +x;
    return abs$2(n) < 1 ? (expm1$1(n) - expm1$1(-n)) / 2 : (exp$1(n - 1) - exp$1(-n - 1)) * (E / 2);
  }
});

var $$1_ = _export;
var expm1 = mathExpm1;
var exp = Math.exp;

// `Math.tanh` method
// https://tc39.es/ecma262/#sec-math.tanh
$$1_({
  target: 'Math',
  stat: true
}, {
  tanh: function tanh(x) {
    var n = +x;
    var a = expm1(n);
    var b = expm1(-n);
    return a === Infinity ? 1 : b === Infinity ? -1 : (a - b) / (exp(n) + exp(-n));
  }
});

var setToStringTag$6 = setToStringTag$e;

// Math[@@toStringTag] property
// https://tc39.es/ecma262/#sec-math-@@tostringtag
setToStringTag$6(Math, 'Math', true);

var $$1Z = _export;
var trunc = mathTrunc;

// `Math.trunc` method
// https://tc39.es/ecma262/#sec-math.trunc
$$1Z({
  target: 'Math',
  stat: true
}, {
  trunc: trunc
});

var uncurryThis$N = functionUncurryThis;

// `thisNumberValue` abstract operation
// https://tc39.es/ecma262/#sec-thisnumbervalue
var thisNumberValue$5 = uncurryThis$N(1.0.valueOf);

// a string of all valid unicode whitespaces
var whitespaces$5 = "\t\n\x0B\f\r \xA0\u1680\u2000\u2001\u2002" + "\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF";

var uncurryThis$M = functionUncurryThis;
var requireObjectCoercible$h = requireObjectCoercible$o;
var toString$u = toString$D;
var whitespaces$4 = whitespaces$5;
var replace$8 = uncurryThis$M(''.replace);
var ltrim = RegExp('^[' + whitespaces$4 + ']+');
var rtrim = RegExp('(^|[^' + whitespaces$4 + '])[' + whitespaces$4 + ']+$');

// `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation
var createMethod$2 = function createMethod(TYPE) {
  return function ($this) {
    var string = toString$u(requireObjectCoercible$h($this));
    if (TYPE & 1) string = replace$8(string, ltrim, '');
    if (TYPE & 2) string = replace$8(string, rtrim, '$1');
    return string;
  };
};
var stringTrim = {
  // `String.prototype.{ trimLeft, trimStart }` methods
  // https://tc39.es/ecma262/#sec-string.prototype.trimstart
  start: createMethod$2(1),
  // `String.prototype.{ trimRight, trimEnd }` methods
  // https://tc39.es/ecma262/#sec-string.prototype.trimend
  end: createMethod$2(2),
  // `String.prototype.trim` method
  // https://tc39.es/ecma262/#sec-string.prototype.trim
  trim: createMethod$2(3)
};

var $$1Y = _export;
var IS_PURE$2 = isPure;
var DESCRIPTORS$s = descriptors;
var global$D = global$10;
var path = path$2;
var uncurryThis$L = functionUncurryThis;
var isForced$2 = isForced_1;
var hasOwn$c = hasOwnProperty_1;
var inheritIfRequired$3 = inheritIfRequired$7;
var isPrototypeOf$3 = objectIsPrototypeOf;
var isSymbol$2 = isSymbol$7;
var toPrimitive$1 = toPrimitive$4;
var fails$T = fails$1t;
var getOwnPropertyNames$3 = objectGetOwnPropertyNames.f;
var getOwnPropertyDescriptor$6 = objectGetOwnPropertyDescriptor.f;
var defineProperty$5 = objectDefineProperty.f;
var thisNumberValue$4 = thisNumberValue$5;
var trim$2 = stringTrim.trim;
var NUMBER = 'Number';
var NativeNumber = global$D[NUMBER];
path[NUMBER];
var NumberPrototype = NativeNumber.prototype;
var TypeError$5 = global$D.TypeError;
var stringSlice$e = uncurryThis$L(''.slice);
var charCodeAt$5 = uncurryThis$L(''.charCodeAt);

// `ToNumeric` abstract operation
// https://tc39.es/ecma262/#sec-tonumeric
var toNumeric = function toNumeric(value) {
  var primValue = toPrimitive$1(value, 'number');
  return typeof primValue == 'bigint' ? primValue : toNumber(primValue);
};

// `ToNumber` abstract operation
// https://tc39.es/ecma262/#sec-tonumber
var toNumber = function toNumber(argument) {
  var it = toPrimitive$1(argument, 'number');
  var first, third, radix, maxCode, digits, length, index, code;
  if (isSymbol$2(it)) throw new TypeError$5('Cannot convert a Symbol value to a number');
  if (typeof it == 'string' && it.length > 2) {
    it = trim$2(it);
    first = charCodeAt$5(it, 0);
    if (first === 43 || first === 45) {
      third = charCodeAt$5(it, 2);
      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix
    } else if (first === 48) {
      switch (charCodeAt$5(it, 1)) {
        // fast equal of /^0b[01]+$/i
        case 66:
        case 98:
          radix = 2;
          maxCode = 49;
          break;
        // fast equal of /^0o[0-7]+$/i
        case 79:
        case 111:
          radix = 8;
          maxCode = 55;
          break;
        default:
          return +it;
      }
      digits = stringSlice$e(it, 2);
      length = digits.length;
      for (index = 0; index < length; index++) {
        code = charCodeAt$5(digits, index);
        // parseInt parses a string to a first unavailable symbol
        // but ToNumber should return NaN if a string contains unavailable symbols
        if (code < 48 || code > maxCode) return NaN;
      }
      return parseInt(digits, radix);
    }
  }
  return +it;
};
var FORCED$j = isForced$2(NUMBER, !NativeNumber(' 0o1') || !NativeNumber('0b1') || NativeNumber('+0x1'));
var calledWithNew = function calledWithNew(dummy) {
  // includes check on 1..constructor(foo) case
  return isPrototypeOf$3(NumberPrototype, dummy) && fails$T(function () {
    thisNumberValue$4(dummy);
  });
};

// `Number` constructor
// https://tc39.es/ecma262/#sec-number-constructor
var NumberWrapper = function Number(value) {
  var n = arguments.length < 1 ? 0 : NativeNumber(toNumeric(value));
  return calledWithNew(this) ? inheritIfRequired$3(Object(n), this, NumberWrapper) : n;
};
NumberWrapper.prototype = NumberPrototype;
if (FORCED$j && !IS_PURE$2) NumberPrototype.constructor = NumberWrapper;
$$1Y({
  global: true,
  constructor: true,
  wrap: true,
  forced: FORCED$j
}, {
  Number: NumberWrapper
});

// Use `internal/copy-constructor-properties` helper in `core-js@4`
var copyConstructorProperties = function copyConstructorProperties(target, source) {
  for (var keys = DESCRIPTORS$s ? getOwnPropertyNames$3(source) : (
    // ES3:
    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +
    // ES2015 (in case, if modules with ES2015 Number statics required before):
    'EPSILON,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,isFinite,isInteger,isNaN,isSafeInteger,parseFloat,parseInt,' +
    // ESNext
    'fromString,range').split(','), j = 0, key; keys.length > j; j++) {
    if (hasOwn$c(source, key = keys[j]) && !hasOwn$c(target, key)) {
      defineProperty$5(target, key, getOwnPropertyDescriptor$6(source, key));
    }
  }
};
if (FORCED$j || IS_PURE$2) copyConstructorProperties(path[NUMBER], NativeNumber);

var $$1X = _export;

// `Number.EPSILON` constant
// https://tc39.es/ecma262/#sec-number.epsilon
$$1X({
  target: 'Number',
  stat: true,
  nonConfigurable: true,
  nonWritable: true
}, {
  EPSILON: Math.pow(2, -52)
});

var global$C = global$10;
var globalIsFinite = global$C.isFinite;

// `Number.isFinite` method
// https://tc39.es/ecma262/#sec-number.isfinite
// eslint-disable-next-line es/no-number-isfinite -- safe
var numberIsFinite$1 = Number.isFinite || function isFinite(it) {
  return typeof it == 'number' && globalIsFinite(it);
};

var $$1W = _export;
var numberIsFinite = numberIsFinite$1;

// `Number.isFinite` method
// https://tc39.es/ecma262/#sec-number.isfinite
$$1W({
  target: 'Number',
  stat: true
}, {
  isFinite: numberIsFinite
});

var isObject$h = isObject$B;
var floor$6 = Math.floor;

// `IsIntegralNumber` abstract operation
// https://tc39.es/ecma262/#sec-isintegralnumber
// eslint-disable-next-line es/no-number-isinteger -- safe
var isIntegralNumber$3 = Number.isInteger || function isInteger(it) {
  return !isObject$h(it) && isFinite(it) && floor$6(it) === it;
};

var $$1V = _export;
var isIntegralNumber$2 = isIntegralNumber$3;

// `Number.isInteger` method
// https://tc39.es/ecma262/#sec-number.isinteger
$$1V({
  target: 'Number',
  stat: true
}, {
  isInteger: isIntegralNumber$2
});

var $$1U = _export;

// `Number.isNaN` method
// https://tc39.es/ecma262/#sec-number.isnan
$$1U({
  target: 'Number',
  stat: true
}, {
  isNaN: function isNaN(number) {
    // eslint-disable-next-line no-self-compare -- NaN check
    return number !== number;
  }
});

var $$1T = _export;
var isIntegralNumber$1 = isIntegralNumber$3;
var abs$1 = Math.abs;

// `Number.isSafeInteger` method
// https://tc39.es/ecma262/#sec-number.issafeinteger
$$1T({
  target: 'Number',
  stat: true
}, {
  isSafeInteger: function isSafeInteger(number) {
    return isIntegralNumber$1(number) && abs$1(number) <= 0x1FFFFFFFFFFFFF;
  }
});

var $$1S = _export;

// `Number.MAX_SAFE_INTEGER` constant
// https://tc39.es/ecma262/#sec-number.max_safe_integer
$$1S({
  target: 'Number',
  stat: true,
  nonConfigurable: true,
  nonWritable: true
}, {
  MAX_SAFE_INTEGER: 0x1FFFFFFFFFFFFF
});

var $$1R = _export;

// `Number.MIN_SAFE_INTEGER` constant
// https://tc39.es/ecma262/#sec-number.min_safe_integer
$$1R({
  target: 'Number',
  stat: true,
  nonConfigurable: true,
  nonWritable: true
}, {
  MIN_SAFE_INTEGER: -0x1FFFFFFFFFFFFF
});

var global$B = global$10;
var fails$S = fails$1t;
var uncurryThis$K = functionUncurryThis;
var toString$t = toString$D;
var trim$1 = stringTrim.trim;
var whitespaces$3 = whitespaces$5;
var charAt$d = uncurryThis$K(''.charAt);
var $parseFloat$1 = global$B.parseFloat;
var _Symbol$1 = global$B.Symbol;
var ITERATOR$5 = _Symbol$1 && _Symbol$1.iterator;
var FORCED$i = 1 / $parseFloat$1(whitespaces$3 + '-0') !== -Infinity
// MS Edge 18- broken with boxed symbols
|| ITERATOR$5 && !fails$S(function () {
  $parseFloat$1(Object(ITERATOR$5));
});

// `parseFloat` method
// https://tc39.es/ecma262/#sec-parsefloat-string
var numberParseFloat = FORCED$i ? function parseFloat(string) {
  var trimmedString = trim$1(toString$t(string));
  var result = $parseFloat$1(trimmedString);
  return result === 0 && charAt$d(trimmedString, 0) === '-' ? -0 : result;
} : $parseFloat$1;

var $$1Q = _export;
var parseFloat$1 = numberParseFloat;

// `Number.parseFloat` method
// https://tc39.es/ecma262/#sec-number.parseFloat
// eslint-disable-next-line es/no-number-parsefloat -- required for testing
$$1Q({
  target: 'Number',
  stat: true,
  forced: Number.parseFloat !== parseFloat$1
}, {
  parseFloat: parseFloat$1
});

var global$A = global$10;
var fails$R = fails$1t;
var uncurryThis$J = functionUncurryThis;
var toString$s = toString$D;
var trim = stringTrim.trim;
var whitespaces$2 = whitespaces$5;
var $parseInt$1 = global$A.parseInt;
var _Symbol = global$A.Symbol;
var ITERATOR$4 = _Symbol && _Symbol.iterator;
var hex = /^[+-]?0x/i;
var exec$6 = uncurryThis$J(hex.exec);
var FORCED$h = $parseInt$1(whitespaces$2 + '08') !== 8 || $parseInt$1(whitespaces$2 + '0x16') !== 22
// MS Edge 18- broken with boxed symbols
|| ITERATOR$4 && !fails$R(function () {
  $parseInt$1(Object(ITERATOR$4));
});

// `parseInt` method
// https://tc39.es/ecma262/#sec-parseint-string-radix
var numberParseInt = FORCED$h ? function parseInt(string, radix) {
  var S = trim(toString$s(string));
  return $parseInt$1(S, radix >>> 0 || (exec$6(hex, S) ? 16 : 10));
} : $parseInt$1;

var $$1P = _export;
var parseInt$2 = numberParseInt;

// `Number.parseInt` method
// https://tc39.es/ecma262/#sec-number.parseint
// eslint-disable-next-line es/no-number-parseint -- required for testing
$$1P({
  target: 'Number',
  stat: true,
  forced: Number.parseInt !== parseInt$2
}, {
  parseInt: parseInt$2
});

var $$1O = _export;
var uncurryThis$I = functionUncurryThis;
var toIntegerOrInfinity$9 = toIntegerOrInfinity$m;
var thisNumberValue$3 = thisNumberValue$5;
var $repeat$1 = stringRepeat;
var log10 = mathLog10;
var fails$Q = fails$1t;
var $RangeError$6 = RangeError;
var $String$1 = String;
var $isFinite = isFinite;
var abs = Math.abs;
var floor$5 = Math.floor;
var pow$2 = Math.pow;
var round$1 = Math.round;
var nativeToExponential = uncurryThis$I(1.0.toExponential);
var repeat$2 = uncurryThis$I($repeat$1);
var stringSlice$d = uncurryThis$I(''.slice);

// Edge 17-
var ROUNDS_PROPERLY = nativeToExponential(-6.9e-11, 4) === '-6.9000e-11'
// IE11- && Edge 14-
&& nativeToExponential(1.255, 2) === '1.25e+0'
// FF86-, V8 ~ Chrome 49-50
&& nativeToExponential(12345, 3) === '1.235e+4'
// FF86-, V8 ~ Chrome 49-50
&& nativeToExponential(25, 0) === '3e+1';

// IE8-
var throwsOnInfinityFraction = function throwsOnInfinityFraction() {
  return fails$Q(function () {
    nativeToExponential(1, Infinity);
  }) && fails$Q(function () {
    nativeToExponential(1, -Infinity);
  });
};

// Safari <11 && FF <50
var properNonFiniteThisCheck = function properNonFiniteThisCheck() {
  return !fails$Q(function () {
    nativeToExponential(Infinity, Infinity);
    nativeToExponential(NaN, Infinity);
  });
};
var FORCED$g = !ROUNDS_PROPERLY || !throwsOnInfinityFraction() || !properNonFiniteThisCheck();

// `Number.prototype.toExponential` method
// https://tc39.es/ecma262/#sec-number.prototype.toexponential
$$1O({
  target: 'Number',
  proto: true,
  forced: FORCED$g
}, {
  toExponential: function toExponential(fractionDigits) {
    var x = thisNumberValue$3(this);
    if (fractionDigits === undefined) return nativeToExponential(x);
    var f = toIntegerOrInfinity$9(fractionDigits);
    if (!$isFinite(x)) return String(x);
    // TODO: ES2018 increased the maximum number of fraction digits to 100, need to improve the implementation
    if (f < 0 || f > 20) throw new $RangeError$6('Incorrect fraction digits');
    if (ROUNDS_PROPERLY) return nativeToExponential(x, f);
    var s = '';
    var m = '';
    var e = 0;
    var c = '';
    var d = '';
    if (x < 0) {
      s = '-';
      x = -x;
    }
    if (x === 0) {
      e = 0;
      m = repeat$2('0', f + 1);
    } else {
      // this block is based on https://gist.github.com/SheetJSDev/1100ad56b9f856c95299ed0e068eea08
      // TODO: improve accuracy with big fraction digits
      var l = log10(x);
      e = floor$5(l);
      var n = 0;
      var w = pow$2(10, e - f);
      n = round$1(x / w);
      if (2 * x >= (2 * n + 1) * w) {
        n += 1;
      }
      if (n >= pow$2(10, f + 1)) {
        n /= 10;
        e += 1;
      }
      m = $String$1(n);
    }
    if (f !== 0) {
      m = stringSlice$d(m, 0, 1) + '.' + stringSlice$d(m, 1);
    }
    if (e === 0) {
      c = '+';
      d = '0';
    } else {
      c = e > 0 ? '+' : '-';
      d = $String$1(abs(e));
    }
    m += 'e' + c + d;
    return s + m;
  }
});

var $$1N = _export;
var uncurryThis$H = functionUncurryThis;
var toIntegerOrInfinity$8 = toIntegerOrInfinity$m;
var thisNumberValue$2 = thisNumberValue$5;
var $repeat = stringRepeat;
var fails$P = fails$1t;
var $RangeError$5 = RangeError;
var $String = String;
var floor$4 = Math.floor;
var repeat$1 = uncurryThis$H($repeat);
var stringSlice$c = uncurryThis$H(''.slice);
var nativeToFixed = uncurryThis$H(1.0.toFixed);
var pow$1 = function pow(x, n, acc) {
  return n === 0 ? acc : n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc);
};
var log = function log(x) {
  var n = 0;
  var x2 = x;
  while (x2 >= 4096) {
    n += 12;
    x2 /= 4096;
  }
  while (x2 >= 2) {
    n += 1;
    x2 /= 2;
  }
  return n;
};
var multiply = function multiply(data, n, c) {
  var index = -1;
  var c2 = c;
  while (++index < 6) {
    c2 += n * data[index];
    data[index] = c2 % 1e7;
    c2 = floor$4(c2 / 1e7);
  }
};
var divide = function divide(data, n) {
  var index = 6;
  var c = 0;
  while (--index >= 0) {
    c += data[index];
    data[index] = floor$4(c / n);
    c = c % n * 1e7;
  }
};
var dataToString = function dataToString(data) {
  var index = 6;
  var s = '';
  while (--index >= 0) {
    if (s !== '' || index === 0 || data[index] !== 0) {
      var t = $String(data[index]);
      s = s === '' ? t : s + repeat$1('0', 7 - t.length) + t;
    }
  }
  return s;
};
var FORCED$f = fails$P(function () {
  return nativeToFixed(0.00008, 3) !== '0.000' || nativeToFixed(0.9, 0) !== '1' || nativeToFixed(1.255, 2) !== '1.25' || nativeToFixed(1000000000000000128.0, 0) !== '1000000000000000128';
}) || !fails$P(function () {
  // V8 ~ Android 4.3-
  nativeToFixed({});
});

// `Number.prototype.toFixed` method
// https://tc39.es/ecma262/#sec-number.prototype.tofixed
$$1N({
  target: 'Number',
  proto: true,
  forced: FORCED$f
}, {
  toFixed: function toFixed(fractionDigits) {
    var number = thisNumberValue$2(this);
    var fractDigits = toIntegerOrInfinity$8(fractionDigits);
    var data = [0, 0, 0, 0, 0, 0];
    var sign = '';
    var result = '0';
    var e, z, j, k;

    // TODO: ES2018 increased the maximum number of fraction digits to 100, need to improve the implementation
    if (fractDigits < 0 || fractDigits > 20) throw new $RangeError$5('Incorrect fraction digits');
    // eslint-disable-next-line no-self-compare -- NaN check
    if (number !== number) return 'NaN';
    if (number <= -1e21 || number >= 1e21) return $String(number);
    if (number < 0) {
      sign = '-';
      number = -number;
    }
    if (number > 1e-21) {
      e = log(number * pow$1(2, 69, 1)) - 69;
      z = e < 0 ? number * pow$1(2, -e, 1) : number / pow$1(2, e, 1);
      z *= 0x10000000000000;
      e = 52 - e;
      if (e > 0) {
        multiply(data, 0, z);
        j = fractDigits;
        while (j >= 7) {
          multiply(data, 1e7, 0);
          j -= 7;
        }
        multiply(data, pow$1(10, j, 1), 0);
        j = e - 1;
        while (j >= 23) {
          divide(data, 1 << 23);
          j -= 23;
        }
        divide(data, 1 << j);
        multiply(data, 1, 1);
        divide(data, 2);
        result = dataToString(data);
      } else {
        multiply(data, 0, z);
        multiply(data, 1 << -e, 0);
        result = dataToString(data) + repeat$1('0', fractDigits);
      }
    }
    if (fractDigits > 0) {
      k = result.length;
      result = sign + (k <= fractDigits ? '0.' + repeat$1('0', fractDigits - k) + result : stringSlice$c(result, 0, k - fractDigits) + '.' + stringSlice$c(result, k - fractDigits));
    } else {
      result = sign + result;
    }
    return result;
  }
});

var $$1M = _export;
var uncurryThis$G = functionUncurryThis;
var fails$O = fails$1t;
var thisNumberValue$1 = thisNumberValue$5;
var nativeToPrecision = uncurryThis$G(1.0.toPrecision);
var FORCED$e = fails$O(function () {
  // IE7-
  return nativeToPrecision(1, undefined) !== '1';
}) || !fails$O(function () {
  // V8 ~ Android 4.3-
  nativeToPrecision({});
});

// `Number.prototype.toPrecision` method
// https://tc39.es/ecma262/#sec-number.prototype.toprecision
$$1M({
  target: 'Number',
  proto: true,
  forced: FORCED$e
}, {
  toPrecision: function toPrecision(precision) {
    return precision === undefined ? nativeToPrecision(thisNumberValue$1(this)) : nativeToPrecision(thisNumberValue$1(this), precision);
  }
});

var DESCRIPTORS$r = descriptors;
var uncurryThis$F = functionUncurryThis;
var call$t = functionCall;
var fails$N = fails$1t;
var objectKeys$2 = objectKeys$5;
var getOwnPropertySymbolsModule = objectGetOwnPropertySymbols;
var propertyIsEnumerableModule = objectPropertyIsEnumerable;
var toObject$a = toObject$t;
var IndexedObject = indexedObject;

// eslint-disable-next-line es/no-object-assign -- safe
var $assign = Object.assign;
// eslint-disable-next-line es/no-object-defineproperty -- required for testing
var defineProperty$4 = Object.defineProperty;
var concat$1 = uncurryThis$F([].concat);

// `Object.assign` method
// https://tc39.es/ecma262/#sec-object.assign
var objectAssign = !$assign || fails$N(function () {
  // should have correct order of operations (Edge bug)
  if (DESCRIPTORS$r && $assign({
    b: 1
  }, $assign(defineProperty$4({}, 'a', {
    enumerable: true,
    get: function get() {
      defineProperty$4(this, 'b', {
        value: 3,
        enumerable: false
      });
    }
  }), {
    b: 2
  })).b !== 1) return true;
  // should work with symbols and should have deterministic property order (V8 bug)
  var A = {};
  var B = {};
  // eslint-disable-next-line es/no-symbol -- safe
  var symbol = Symbol('assign detection');
  var alphabet = 'abcdefghijklmnopqrst';
  A[symbol] = 7;
  alphabet.split('').forEach(function (chr) {
    B[chr] = chr;
  });
  return $assign({}, A)[symbol] !== 7 || objectKeys$2($assign({}, B)).join('') !== alphabet;
}) ? function assign(target, source) {
  // eslint-disable-line no-unused-vars -- required for `.length`
  var T = toObject$a(target);
  var argumentsLength = arguments.length;
  var index = 1;
  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
  var propertyIsEnumerable = propertyIsEnumerableModule.f;
  while (argumentsLength > index) {
    var S = IndexedObject(arguments[index++]);
    var keys = getOwnPropertySymbols ? concat$1(objectKeys$2(S), getOwnPropertySymbols(S)) : objectKeys$2(S);
    var length = keys.length;
    var j = 0;
    var key;
    while (length > j) {
      key = keys[j++];
      if (!DESCRIPTORS$r || call$t(propertyIsEnumerable, S, key)) T[key] = S[key];
    }
  }
  return T;
} : $assign;

var $$1L = _export;
var assign$2 = objectAssign;

// `Object.assign` method
// https://tc39.es/ecma262/#sec-object.assign
// eslint-disable-next-line es/no-object-assign -- required for testing
$$1L({
  target: 'Object',
  stat: true,
  arity: 2,
  forced: Object.assign !== assign$2
}, {
  assign: assign$2
});

// TODO: Remove from `core-js@4`
var $$1K = _export;
var DESCRIPTORS$q = descriptors;
var create$7 = objectCreate;

// `Object.create` method
// https://tc39.es/ecma262/#sec-object.create
$$1K({
  target: 'Object',
  stat: true,
  sham: !DESCRIPTORS$q
}, {
  create: create$7
});

var global$z = global$10;
var fails$M = fails$1t;
var WEBKIT$1 = engineWebkitVersion;

// Forced replacement object prototype accessors methods
var objectPrototypeAccessorsForced = !fails$M(function () {
  // This feature detection crashes old WebKit
  // https://github.com/zloirock/core-js/issues/232
  if (WEBKIT$1 && WEBKIT$1 < 535) return;
  var key = Math.random();
  // In FF throws only define methods
  // eslint-disable-next-line no-undef, no-useless-call, es/no-legacy-object-prototype-accessor-methods -- required for testing
  __defineSetter__.call(null, key, function () {/* empty */});
  delete global$z[key];
});

var $$1J = _export;
var DESCRIPTORS$p = descriptors;
var FORCED$d = objectPrototypeAccessorsForced;
var aCallable$d = aCallable$o;
var toObject$9 = toObject$t;
var definePropertyModule$4 = objectDefineProperty;

// `Object.prototype.__defineGetter__` method
// https://tc39.es/ecma262/#sec-object.prototype.__defineGetter__
if (DESCRIPTORS$p) {
  $$1J({
    target: 'Object',
    proto: true,
    forced: FORCED$d
  }, {
    __defineGetter__: function __defineGetter__(P, getter) {
      definePropertyModule$4.f(toObject$9(this), P, {
        get: aCallable$d(getter),
        enumerable: true,
        configurable: true
      });
    }
  });
}

var $$1I = _export;
var DESCRIPTORS$o = descriptors;
var defineProperties = objectDefineProperties.f;

// `Object.defineProperties` method
// https://tc39.es/ecma262/#sec-object.defineproperties
// eslint-disable-next-line es/no-object-defineproperties -- safe
$$1I({
  target: 'Object',
  stat: true,
  forced: Object.defineProperties !== defineProperties,
  sham: !DESCRIPTORS$o
}, {
  defineProperties: defineProperties
});

var $$1H = _export;
var DESCRIPTORS$n = descriptors;
var defineProperty$3 = objectDefineProperty.f;

// `Object.defineProperty` method
// https://tc39.es/ecma262/#sec-object.defineproperty
// eslint-disable-next-line es/no-object-defineproperty -- safe
$$1H({
  target: 'Object',
  stat: true,
  forced: Object.defineProperty !== defineProperty$3,
  sham: !DESCRIPTORS$n
}, {
  defineProperty: defineProperty$3
});

var $$1G = _export;
var DESCRIPTORS$m = descriptors;
var FORCED$c = objectPrototypeAccessorsForced;
var aCallable$c = aCallable$o;
var toObject$8 = toObject$t;
var definePropertyModule$3 = objectDefineProperty;

// `Object.prototype.__defineSetter__` method
// https://tc39.es/ecma262/#sec-object.prototype.__defineSetter__
if (DESCRIPTORS$m) {
  $$1G({
    target: 'Object',
    proto: true,
    forced: FORCED$c
  }, {
    __defineSetter__: function __defineSetter__(P, setter) {
      definePropertyModule$3.f(toObject$8(this), P, {
        set: aCallable$c(setter),
        enumerable: true,
        configurable: true
      });
    }
  });
}

var DESCRIPTORS$l = descriptors;
var fails$L = fails$1t;
var uncurryThis$E = functionUncurryThis;
var objectGetPrototypeOf$1 = objectGetPrototypeOf$2;
var objectKeys$1 = objectKeys$5;
var toIndexedObject$4 = toIndexedObject$j;
var $propertyIsEnumerable = objectPropertyIsEnumerable.f;
var propertyIsEnumerable = uncurryThis$E($propertyIsEnumerable);
var push$a = uncurryThis$E([].push);

// in some IE versions, `propertyIsEnumerable` returns incorrect result on integer keys
// of `null` prototype objects
var IE_BUG = DESCRIPTORS$l && fails$L(function () {
  // eslint-disable-next-line es/no-object-create -- safe
  var O = Object.create(null);
  O[2] = 2;
  return !propertyIsEnumerable(O, 2);
});

// `Object.{ entries, values }` methods implementation
var createMethod$1 = function createMethod(TO_ENTRIES) {
  return function (it) {
    var O = toIndexedObject$4(it);
    var keys = objectKeys$1(O);
    var IE_WORKAROUND = IE_BUG && objectGetPrototypeOf$1(O) === null;
    var length = keys.length;
    var i = 0;
    var result = [];
    var key;
    while (length > i) {
      key = keys[i++];
      if (!DESCRIPTORS$l || (IE_WORKAROUND ? key in O : propertyIsEnumerable(O, key))) {
        push$a(result, TO_ENTRIES ? [key, O[key]] : O[key]);
      }
    }
    return result;
  };
};
var objectToArray = {
  // `Object.entries` method
  // https://tc39.es/ecma262/#sec-object.entries
  entries: createMethod$1(true),
  // `Object.values` method
  // https://tc39.es/ecma262/#sec-object.values
  values: createMethod$1(false)
};

var $$1F = _export;
var $entries = objectToArray.entries;

// `Object.entries` method
// https://tc39.es/ecma262/#sec-object.entries
$$1F({
  target: 'Object',
  stat: true
}, {
  entries: function entries(O) {
    return $entries(O);
  }
});

var $$1E = _export;
var FREEZING$4 = freezing;
var fails$K = fails$1t;
var isObject$g = isObject$B;
var onFreeze$2 = internalMetadataExports.onFreeze;

// eslint-disable-next-line es/no-object-freeze -- safe
var $freeze = Object.freeze;
var FAILS_ON_PRIMITIVES$5 = fails$K(function () {
  $freeze(1);
});

// `Object.freeze` method
// https://tc39.es/ecma262/#sec-object.freeze
$$1E({
  target: 'Object',
  stat: true,
  forced: FAILS_ON_PRIMITIVES$5,
  sham: !FREEZING$4
}, {
  freeze: function freeze(it) {
    return $freeze && isObject$g(it) ? $freeze(onFreeze$2(it)) : it;
  }
});

var $$1D = _export;
var iterate$9 = iterate$e;
var createProperty$2 = createProperty$8;

// `Object.fromEntries` method
// https://github.com/tc39/proposal-object-from-entries
$$1D({
  target: 'Object',
  stat: true
}, {
  fromEntries: function fromEntries(iterable) {
    var obj = {};
    iterate$9(iterable, function (k, v) {
      createProperty$2(obj, k, v);
    }, {
      AS_ENTRIES: true
    });
    return obj;
  }
});

var $$1C = _export;
var fails$J = fails$1t;
var toIndexedObject$3 = toIndexedObject$j;
var nativeGetOwnPropertyDescriptor$1 = objectGetOwnPropertyDescriptor.f;
var DESCRIPTORS$k = descriptors;
var FORCED$b = !DESCRIPTORS$k || fails$J(function () {
  nativeGetOwnPropertyDescriptor$1(1);
});

// `Object.getOwnPropertyDescriptor` method
// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor
$$1C({
  target: 'Object',
  stat: true,
  forced: FORCED$b,
  sham: !DESCRIPTORS$k
}, {
  getOwnPropertyDescriptor: function getOwnPropertyDescriptor(it, key) {
    return nativeGetOwnPropertyDescriptor$1(toIndexedObject$3(it), key);
  }
});

var $$1B = _export;
var DESCRIPTORS$j = descriptors;
var ownKeys$1 = ownKeys$3;
var toIndexedObject$2 = toIndexedObject$j;
var getOwnPropertyDescriptorModule$4 = objectGetOwnPropertyDescriptor;
var createProperty$1 = createProperty$8;

// `Object.getOwnPropertyDescriptors` method
// https://tc39.es/ecma262/#sec-object.getownpropertydescriptors
$$1B({
  target: 'Object',
  stat: true,
  sham: !DESCRIPTORS$j
}, {
  getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object) {
    var O = toIndexedObject$2(object);
    var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule$4.f;
    var keys = ownKeys$1(O);
    var result = {};
    var index = 0;
    var key, descriptor;
    while (keys.length > index) {
      descriptor = getOwnPropertyDescriptor(O, key = keys[index++]);
      if (descriptor !== undefined) createProperty$1(result, key, descriptor);
    }
    return result;
  }
});

var $$1A = _export;
var fails$I = fails$1t;
var getOwnPropertyNames$2 = objectGetOwnPropertyNamesExternal.f;

// eslint-disable-next-line es/no-object-getownpropertynames -- required for testing
var FAILS_ON_PRIMITIVES$4 = fails$I(function () {
  return !Object.getOwnPropertyNames(1);
});

// `Object.getOwnPropertyNames` method
// https://tc39.es/ecma262/#sec-object.getownpropertynames
$$1A({
  target: 'Object',
  stat: true,
  forced: FAILS_ON_PRIMITIVES$4
}, {
  getOwnPropertyNames: getOwnPropertyNames$2
});

var $$1z = _export;
var fails$H = fails$1t;
var toObject$7 = toObject$t;
var nativeGetPrototypeOf = objectGetPrototypeOf$2;
var CORRECT_PROTOTYPE_GETTER$1 = correctPrototypeGetter;
var FAILS_ON_PRIMITIVES$3 = fails$H(function () {
  nativeGetPrototypeOf(1);
});

// `Object.getPrototypeOf` method
// https://tc39.es/ecma262/#sec-object.getprototypeof
$$1z({
  target: 'Object',
  stat: true,
  forced: FAILS_ON_PRIMITIVES$3,
  sham: !CORRECT_PROTOTYPE_GETTER$1
}, {
  getPrototypeOf: function getPrototypeOf(it) {
    return nativeGetPrototypeOf(toObject$7(it));
  }
});

var $$1y = _export;
var getBuiltIn$f = getBuiltIn$r;
var uncurryThis$D = functionUncurryThis;
var aCallable$b = aCallable$o;
var requireObjectCoercible$g = requireObjectCoercible$o;
var toPropertyKey$4 = toPropertyKey$8;
var iterate$8 = iterate$e;
var fails$G = fails$1t;

// eslint-disable-next-line es/no-object-map-groupby -- testing
var nativeGroupBy = Object.groupBy;
var create$6 = getBuiltIn$f('Object', 'create');
var push$9 = uncurryThis$D([].push);
var DOES_NOT_WORK_WITH_PRIMITIVES = !nativeGroupBy || fails$G(function () {
  return nativeGroupBy('ab', function (it) {
    return it;
  }).a.length !== 1;
});

// `Object.groupBy` method
// https://github.com/tc39/proposal-array-grouping
$$1y({
  target: 'Object',
  stat: true,
  forced: DOES_NOT_WORK_WITH_PRIMITIVES
}, {
  groupBy: function groupBy(items, callbackfn) {
    requireObjectCoercible$g(items);
    aCallable$b(callbackfn);
    var obj = create$6(null);
    var k = 0;
    iterate$8(items, function (value) {
      var key = toPropertyKey$4(callbackfn(value, k++));
      // in some IE versions, `hasOwnProperty` returns incorrect result on integer keys
      // but since it's a `null` prototype object, we can safely use `in`
      if (key in obj) push$9(obj[key], value);else obj[key] = [value];
    });
    return obj;
  }
});

var $$1x = _export;
var hasOwn$b = hasOwnProperty_1;

// `Object.hasOwn` method
// https://tc39.es/ecma262/#sec-object.hasown
$$1x({
  target: 'Object',
  stat: true
}, {
  hasOwn: hasOwn$b
});

// `SameValue` abstract operation
// https://tc39.es/ecma262/#sec-samevalue
// eslint-disable-next-line es/no-object-is -- safe
var sameValue$1 = Object.is || function is(x, y) {
  // eslint-disable-next-line no-self-compare -- NaN check
  return x === y ? x !== 0 || 1 / x === 1 / y : x !== x && y !== y;
};

var $$1w = _export;
var is = sameValue$1;

// `Object.is` method
// https://tc39.es/ecma262/#sec-object.is
$$1w({
  target: 'Object',
  stat: true
}, {
  is: is
});

var $$1v = _export;
var $isExtensible$1 = objectIsExtensible;

// `Object.isExtensible` method
// https://tc39.es/ecma262/#sec-object.isextensible
// eslint-disable-next-line es/no-object-isextensible -- safe
$$1v({
  target: 'Object',
  stat: true,
  forced: Object.isExtensible !== $isExtensible$1
}, {
  isExtensible: $isExtensible$1
});

var $$1u = _export;
var fails$F = fails$1t;
var isObject$f = isObject$B;
var classof$c = classofRaw$2;
var ARRAY_BUFFER_NON_EXTENSIBLE$1 = arrayBufferNonExtensible;

// eslint-disable-next-line es/no-object-isfrozen -- safe
var $isFrozen = Object.isFrozen;
var FORCED$a = ARRAY_BUFFER_NON_EXTENSIBLE$1 || fails$F(function () {
  $isFrozen(1);
});

// `Object.isFrozen` method
// https://tc39.es/ecma262/#sec-object.isfrozen
$$1u({
  target: 'Object',
  stat: true,
  forced: FORCED$a
}, {
  isFrozen: function isFrozen(it) {
    if (!isObject$f(it)) return true;
    if (ARRAY_BUFFER_NON_EXTENSIBLE$1 && classof$c(it) === 'ArrayBuffer') return true;
    return $isFrozen ? $isFrozen(it) : false;
  }
});

var $$1t = _export;
var fails$E = fails$1t;
var isObject$e = isObject$B;
var classof$b = classofRaw$2;
var ARRAY_BUFFER_NON_EXTENSIBLE = arrayBufferNonExtensible;

// eslint-disable-next-line es/no-object-issealed -- safe
var $isSealed = Object.isSealed;
var FORCED$9 = ARRAY_BUFFER_NON_EXTENSIBLE || fails$E(function () {
  $isSealed(1);
});

// `Object.isSealed` method
// https://tc39.es/ecma262/#sec-object.issealed
$$1t({
  target: 'Object',
  stat: true,
  forced: FORCED$9
}, {
  isSealed: function isSealed(it) {
    if (!isObject$e(it)) return true;
    if (ARRAY_BUFFER_NON_EXTENSIBLE && classof$b(it) === 'ArrayBuffer') return true;
    return $isSealed ? $isSealed(it) : false;
  }
});

var $$1s = _export;
var toObject$6 = toObject$t;
var nativeKeys = objectKeys$5;
var fails$D = fails$1t;
var FAILS_ON_PRIMITIVES$2 = fails$D(function () {
  nativeKeys(1);
});

// `Object.keys` method
// https://tc39.es/ecma262/#sec-object.keys
$$1s({
  target: 'Object',
  stat: true,
  forced: FAILS_ON_PRIMITIVES$2
}, {
  keys: function keys(it) {
    return nativeKeys(toObject$6(it));
  }
});

var $$1r = _export;
var DESCRIPTORS$i = descriptors;
var FORCED$8 = objectPrototypeAccessorsForced;
var toObject$5 = toObject$t;
var toPropertyKey$3 = toPropertyKey$8;
var getPrototypeOf$4 = objectGetPrototypeOf$2;
var getOwnPropertyDescriptor$5 = objectGetOwnPropertyDescriptor.f;

// `Object.prototype.__lookupGetter__` method
// https://tc39.es/ecma262/#sec-object.prototype.__lookupGetter__
if (DESCRIPTORS$i) {
  $$1r({
    target: 'Object',
    proto: true,
    forced: FORCED$8
  }, {
    __lookupGetter__: function __lookupGetter__(P) {
      var O = toObject$5(this);
      var key = toPropertyKey$3(P);
      var desc;
      do {
        if (desc = getOwnPropertyDescriptor$5(O, key)) return desc.get;
      } while (O = getPrototypeOf$4(O));
    }
  });
}

var $$1q = _export;
var DESCRIPTORS$h = descriptors;
var FORCED$7 = objectPrototypeAccessorsForced;
var toObject$4 = toObject$t;
var toPropertyKey$2 = toPropertyKey$8;
var getPrototypeOf$3 = objectGetPrototypeOf$2;
var getOwnPropertyDescriptor$4 = objectGetOwnPropertyDescriptor.f;

// `Object.prototype.__lookupSetter__` method
// https://tc39.es/ecma262/#sec-object.prototype.__lookupSetter__
if (DESCRIPTORS$h) {
  $$1q({
    target: 'Object',
    proto: true,
    forced: FORCED$7
  }, {
    __lookupSetter__: function __lookupSetter__(P) {
      var O = toObject$4(this);
      var key = toPropertyKey$2(P);
      var desc;
      do {
        if (desc = getOwnPropertyDescriptor$4(O, key)) return desc.set;
      } while (O = getPrototypeOf$3(O));
    }
  });
}

var $$1p = _export;
var isObject$d = isObject$B;
var onFreeze$1 = internalMetadataExports.onFreeze;
var FREEZING$3 = freezing;
var fails$C = fails$1t;

// eslint-disable-next-line es/no-object-preventextensions -- safe
var $preventExtensions = Object.preventExtensions;
var FAILS_ON_PRIMITIVES$1 = fails$C(function () {
  $preventExtensions(1);
});

// `Object.preventExtensions` method
// https://tc39.es/ecma262/#sec-object.preventextensions
$$1p({
  target: 'Object',
  stat: true,
  forced: FAILS_ON_PRIMITIVES$1,
  sham: !FREEZING$3
}, {
  preventExtensions: function preventExtensions(it) {
    return $preventExtensions && isObject$d(it) ? $preventExtensions(onFreeze$1(it)) : it;
  }
});

var DESCRIPTORS$g = descriptors;
var defineBuiltInAccessor$9 = defineBuiltInAccessor$i;
var isObject$c = isObject$B;
var isPossiblePrototype = isPossiblePrototype$2;
var toObject$3 = toObject$t;
var requireObjectCoercible$f = requireObjectCoercible$o;

// eslint-disable-next-line es/no-object-getprototypeof -- safe
var getPrototypeOf$2 = Object.getPrototypeOf;
// eslint-disable-next-line es/no-object-setprototypeof -- safe
var setPrototypeOf$3 = Object.setPrototypeOf;
var ObjectPrototype$1 = Object.prototype;
var PROTO = '__proto__';

// `Object.prototype.__proto__` accessor
// https://tc39.es/ecma262/#sec-object.prototype.__proto__
if (DESCRIPTORS$g && getPrototypeOf$2 && setPrototypeOf$3 && !(PROTO in ObjectPrototype$1)) try {
  defineBuiltInAccessor$9(ObjectPrototype$1, PROTO, {
    configurable: true,
    get: function __proto__() {
      return getPrototypeOf$2(toObject$3(this));
    },
    set: function __proto__(proto) {
      var O = requireObjectCoercible$f(this);
      if (isPossiblePrototype(proto) && isObject$c(O)) {
        setPrototypeOf$3(O, proto);
      }
    }
  });
} catch (error) {/* empty */}

var $$1o = _export;
var isObject$b = isObject$B;
var onFreeze = internalMetadataExports.onFreeze;
var FREEZING$2 = freezing;
var fails$B = fails$1t;

// eslint-disable-next-line es/no-object-seal -- safe
var $seal = Object.seal;
var FAILS_ON_PRIMITIVES = fails$B(function () {
  $seal(1);
});

// `Object.seal` method
// https://tc39.es/ecma262/#sec-object.seal
$$1o({
  target: 'Object',
  stat: true,
  forced: FAILS_ON_PRIMITIVES,
  sham: !FREEZING$2
}, {
  seal: function seal(it) {
    return $seal && isObject$b(it) ? $seal(onFreeze(it)) : it;
  }
});

var $$1n = _export;
var setPrototypeOf$2 = objectSetPrototypeOf$1;

// `Object.setPrototypeOf` method
// https://tc39.es/ecma262/#sec-object.setprototypeof
$$1n({
  target: 'Object',
  stat: true
}, {
  setPrototypeOf: setPrototypeOf$2
});

var TO_STRING_TAG_SUPPORT$1 = toStringTagSupport;
var classof$a = classof$n;

// `Object.prototype.toString` method implementation
// https://tc39.es/ecma262/#sec-object.prototype.tostring
var objectToString = TO_STRING_TAG_SUPPORT$1 ? {}.toString : function toString() {
  return '[object ' + classof$a(this) + ']';
};

var TO_STRING_TAG_SUPPORT = toStringTagSupport;
var defineBuiltIn$c = defineBuiltIn$o;
var toString$r = objectToString;

// `Object.prototype.toString` method
// https://tc39.es/ecma262/#sec-object.prototype.tostring
if (!TO_STRING_TAG_SUPPORT) {
  defineBuiltIn$c(Object.prototype, 'toString', toString$r, {
    unsafe: true
  });
}

var $$1m = _export;
var $values = objectToArray.values;

// `Object.values` method
// https://tc39.es/ecma262/#sec-object.values
$$1m({
  target: 'Object',
  stat: true
}, {
  values: function values(O) {
    return $values(O);
  }
});

var $$1l = _export;
var $parseFloat = numberParseFloat;

// `parseFloat` method
// https://tc39.es/ecma262/#sec-parsefloat-string
$$1l({
  global: true,
  forced: parseFloat !== $parseFloat
}, {
  parseFloat: $parseFloat
});

var $$1k = _export;
var $parseInt = numberParseInt;

// `parseInt` method
// https://tc39.es/ecma262/#sec-parseint-string-radix
$$1k({
  global: true,
  forced: parseInt !== $parseInt
}, {
  parseInt: $parseInt
});

var $TypeError$a = TypeError;
var validateArgumentsLength$c = function validateArgumentsLength(passed, required) {
  if (passed < required) throw new $TypeError$a('Not enough arguments');
  return passed;
};

var userAgent$3 = engineUserAgent;

// eslint-disable-next-line redos/no-vulnerable -- safe
var engineIsIos = /(?:ipad|iphone|ipod).*applewebkit/i.test(userAgent$3);

var global$y = global$10;
var apply$5 = functionApply$1;
var bind$7 = functionBindContext;
var isCallable$b = isCallable$y;
var hasOwn$a = hasOwnProperty_1;
var fails$A = fails$1t;
var html = html$2;
var arraySlice$4 = arraySlice$a;
var createElement = documentCreateElement$2;
var validateArgumentsLength$b = validateArgumentsLength$c;
var IS_IOS$1 = engineIsIos;
var IS_NODE$2 = engineIsNode;
var set$1 = global$y.setImmediate;
var clear = global$y.clearImmediate;
var process$2 = global$y.process;
var Dispatch = global$y.Dispatch;
var Function$2 = global$y.Function;
var MessageChannel = global$y.MessageChannel;
var String$1 = global$y.String;
var counter = 0;
var queue$2 = {};
var ONREADYSTATECHANGE = 'onreadystatechange';
var $location, defer, channel, port;
fails$A(function () {
  // Deno throws a ReferenceError on `location` access without `--location` flag
  $location = global$y.location;
});
var run$1 = function run(id) {
  if (hasOwn$a(queue$2, id)) {
    var fn = queue$2[id];
    delete queue$2[id];
    fn();
  }
};
var runner = function runner(id) {
  return function () {
    run$1(id);
  };
};
var eventListener = function eventListener(event) {
  run$1(event.data);
};
var globalPostMessageDefer = function globalPostMessageDefer(id) {
  // old engines have not location.origin
  global$y.postMessage(String$1(id), $location.protocol + '//' + $location.host);
};

// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
if (!set$1 || !clear) {
  set$1 = function setImmediate(handler) {
    validateArgumentsLength$b(arguments.length, 1);
    var fn = isCallable$b(handler) ? handler : Function$2(handler);
    var args = arraySlice$4(arguments, 1);
    queue$2[++counter] = function () {
      apply$5(fn, undefined, args);
    };
    defer(counter);
    return counter;
  };
  clear = function clearImmediate(id) {
    delete queue$2[id];
  };
  // Node.js 0.8-
  if (IS_NODE$2) {
    defer = function defer(id) {
      process$2.nextTick(runner(id));
    };
    // Sphere (JS game engine) Dispatch API
  } else if (Dispatch && Dispatch.now) {
    defer = function defer(id) {
      Dispatch.now(runner(id));
    };
    // Browsers with MessageChannel, includes WebWorkers
    // except iOS - https://github.com/zloirock/core-js/issues/624
  } else if (MessageChannel && !IS_IOS$1) {
    channel = new MessageChannel();
    port = channel.port2;
    channel.port1.onmessage = eventListener;
    defer = bind$7(port.postMessage, port);
    // Browsers with postMessage, skip WebWorkers
    // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
  } else if (global$y.addEventListener && isCallable$b(global$y.postMessage) && !global$y.importScripts && $location && $location.protocol !== 'file:' && !fails$A(globalPostMessageDefer)) {
    defer = globalPostMessageDefer;
    global$y.addEventListener('message', eventListener, false);
    // IE8-
  } else if (ONREADYSTATECHANGE in createElement('script')) {
    defer = function defer(id) {
      html.appendChild(createElement('script'))[ONREADYSTATECHANGE] = function () {
        html.removeChild(this);
        run$1(id);
      };
    };
    // Rest old browsers
  } else {
    defer = function defer(id) {
      setTimeout(runner(id), 0);
    };
  }
}
var task$1 = {
  set: set$1,
  clear: clear
};

var global$x = global$10;
var DESCRIPTORS$f = descriptors;

// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var getOwnPropertyDescriptor$3 = Object.getOwnPropertyDescriptor;

// Avoid NodeJS experimental warning
var safeGetBuiltIn$2 = function safeGetBuiltIn(name) {
  if (!DESCRIPTORS$f) return global$x[name];
  var descriptor = getOwnPropertyDescriptor$3(global$x, name);
  return descriptor && descriptor.value;
};

var Queue$2 = function Queue() {
  this.head = null;
  this.tail = null;
};
Queue$2.prototype = {
  add: function add(item) {
    var entry = {
      item: item,
      next: null
    };
    var tail = this.tail;
    if (tail) tail.next = entry;else this.head = entry;
    this.tail = entry;
  },
  get: function get() {
    var entry = this.head;
    if (entry) {
      var next = this.head = entry.next;
      if (next === null) this.tail = null;
      return entry.item;
    }
  }
};
var queue$1 = Queue$2;

var userAgent$2 = engineUserAgent;
var engineIsIosPebble = /ipad|iphone|ipod/i.test(userAgent$2) && typeof Pebble != 'undefined';

var userAgent$1 = engineUserAgent;
var engineIsWebosWebkit = /web0s(?!.*chrome)/i.test(userAgent$1);

var global$w = global$10;
var safeGetBuiltIn$1 = safeGetBuiltIn$2;
var bind$6 = functionBindContext;
var macrotask = task$1.set;
var Queue$1 = queue$1;
var IS_IOS = engineIsIos;
var IS_IOS_PEBBLE = engineIsIosPebble;
var IS_WEBOS_WEBKIT = engineIsWebosWebkit;
var IS_NODE$1 = engineIsNode;
var MutationObserver = global$w.MutationObserver || global$w.WebKitMutationObserver;
var document$2 = global$w.document;
var process$1 = global$w.process;
var Promise$1 = global$w.Promise;
var microtask$2 = safeGetBuiltIn$1('queueMicrotask');
var notify$1, toggle, node, promise, then;

// modern engines have queueMicrotask method
if (!microtask$2) {
  var queue = new Queue$1();
  var flush$1 = function flush() {
    var parent, fn;
    if (IS_NODE$1 && (parent = process$1.domain)) parent.exit();
    while (fn = queue.get()) try {
      fn();
    } catch (error) {
      if (queue.head) notify$1();
      throw error;
    }
    if (parent) parent.enter();
  };

  // browsers with MutationObserver, except iOS - https://github.com/zloirock/core-js/issues/339
  // also except WebOS Webkit https://github.com/zloirock/core-js/issues/898
  if (!IS_IOS && !IS_NODE$1 && !IS_WEBOS_WEBKIT && MutationObserver && document$2) {
    toggle = true;
    node = document$2.createTextNode('');
    new MutationObserver(flush$1).observe(node, {
      characterData: true
    });
    notify$1 = function notify() {
      node.data = toggle = !toggle;
    };
    // environments with maybe non-completely correct, but existent Promise
  } else if (!IS_IOS_PEBBLE && Promise$1 && Promise$1.resolve) {
    // Promise.resolve without an argument throws an error in LG WebOS 2
    promise = Promise$1.resolve(undefined);
    // workaround of WebKit ~ iOS Safari 10.1 bug
    promise.constructor = Promise$1;
    then = bind$6(promise.then, promise);
    notify$1 = function notify() {
      then(flush$1);
    };
    // Node.js without promises
  } else if (IS_NODE$1) {
    notify$1 = function notify() {
      process$1.nextTick(flush$1);
    };
    // for other environments - macrotask based on:
    // - setImmediate
    // - MessageChannel
    // - window.postMessage
    // - onreadystatechange
    // - setTimeout
  } else {
    // `webpack` dev server bug on IE global methods - use bind(fn, global)
    macrotask = bind$6(macrotask, global$w);
    notify$1 = function notify() {
      macrotask(flush$1);
    };
  }
  microtask$2 = function microtask(fn) {
    if (!queue.head) notify$1();
    queue.add(fn);
  };
}
var microtask_1 = microtask$2;

var hostReportErrors$1 = function hostReportErrors(a, b) {
  try {
    // eslint-disable-next-line no-console -- safe
    arguments.length === 1 ? console.error(a) : console.error(a, b);
  } catch (error) {/* empty */}
};

var perform$5 = function perform(exec) {
  try {
    return {
      error: false,
      value: exec()
    };
  } catch (error) {
    return {
      error: true,
      value: error
    };
  }
};

var global$v = global$10;
var promiseNativeConstructor = global$v.Promise;

var global$u = global$10;
var NativePromiseConstructor$4 = promiseNativeConstructor;
var isCallable$a = isCallable$y;
var isForced$1 = isForced_1;
var inspectSource = inspectSource$3;
var wellKnownSymbol$b = wellKnownSymbol$z;
var IS_BROWSER = engineIsBrowser;
var IS_DENO = engineIsDeno;
var V8_VERSION = engineV8Version;
NativePromiseConstructor$4 && NativePromiseConstructor$4.prototype;
var SPECIES$1 = wellKnownSymbol$b('species');
var SUBCLASSING = false;
var NATIVE_PROMISE_REJECTION_EVENT$1 = isCallable$a(global$u.PromiseRejectionEvent);
var FORCED_PROMISE_CONSTRUCTOR$5 = isForced$1('Promise', function () {
  var PROMISE_CONSTRUCTOR_SOURCE = inspectSource(NativePromiseConstructor$4);
  var GLOBAL_CORE_JS_PROMISE = PROMISE_CONSTRUCTOR_SOURCE !== String(NativePromiseConstructor$4);
  // V8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables
  // https://bugs.chromium.org/p/chromium/issues/detail?id=830565
  // We can't detect it synchronously, so just check versions
  if (!GLOBAL_CORE_JS_PROMISE && V8_VERSION === 66) return true;
  // We can't use @@species feature detection in V8 since it causes
  // deoptimization and performance degradation
  // https://github.com/zloirock/core-js/issues/679
  if (!V8_VERSION || V8_VERSION < 51 || !/native code/.test(PROMISE_CONSTRUCTOR_SOURCE)) {
    // Detect correctness of subclassing with @@species support
    var promise = new NativePromiseConstructor$4(function (resolve) {
      resolve(1);
    });
    var FakePromise = function FakePromise(exec) {
      exec(function () {/* empty */}, function () {/* empty */});
    };
    var constructor = promise.constructor = {};
    constructor[SPECIES$1] = FakePromise;
    SUBCLASSING = promise.then(function () {/* empty */}) instanceof FakePromise;
    if (!SUBCLASSING) return true;
    // Unhandled rejections tracking support, NodeJS Promise without it fails @@species test
  }
  return !GLOBAL_CORE_JS_PROMISE && (IS_BROWSER || IS_DENO) && !NATIVE_PROMISE_REJECTION_EVENT$1;
});
var promiseConstructorDetection = {
  CONSTRUCTOR: FORCED_PROMISE_CONSTRUCTOR$5,
  REJECTION_EVENT: NATIVE_PROMISE_REJECTION_EVENT$1,
  SUBCLASSING: SUBCLASSING
};

var newPromiseCapability$2 = {};

var aCallable$a = aCallable$o;
var $TypeError$9 = TypeError;
var PromiseCapability = function PromiseCapability(C) {
  var resolve, reject;
  this.promise = new C(function ($$resolve, $$reject) {
    if (resolve !== undefined || reject !== undefined) throw new $TypeError$9('Bad Promise constructor');
    resolve = $$resolve;
    reject = $$reject;
  });
  this.resolve = aCallable$a(resolve);
  this.reject = aCallable$a(reject);
};

// `NewPromiseCapability` abstract operation
// https://tc39.es/ecma262/#sec-newpromisecapability
newPromiseCapability$2.f = function (C) {
  return new PromiseCapability(C);
};

var $$1j = _export;
var IS_NODE = engineIsNode;
var global$t = global$10;
var call$s = functionCall;
var defineBuiltIn$b = defineBuiltIn$o;
var setPrototypeOf$1 = objectSetPrototypeOf$1;
var setToStringTag$5 = setToStringTag$e;
var setSpecies$2 = setSpecies$6;
var aCallable$9 = aCallable$o;
var isCallable$9 = isCallable$y;
var isObject$a = isObject$B;
var anInstance$6 = anInstance$a;
var speciesConstructor$4 = speciesConstructor$6;
var task = task$1.set;
var microtask$1 = microtask_1;
var hostReportErrors = hostReportErrors$1;
var perform$4 = perform$5;
var Queue = queue$1;
var InternalStateModule$7 = internalState;
var NativePromiseConstructor$3 = promiseNativeConstructor;
var PromiseConstructorDetection = promiseConstructorDetection;
var newPromiseCapabilityModule$6 = newPromiseCapability$2;
var PROMISE = 'Promise';
var FORCED_PROMISE_CONSTRUCTOR$4 = PromiseConstructorDetection.CONSTRUCTOR;
var NATIVE_PROMISE_REJECTION_EVENT = PromiseConstructorDetection.REJECTION_EVENT;
var NATIVE_PROMISE_SUBCLASSING = PromiseConstructorDetection.SUBCLASSING;
var getInternalPromiseState = InternalStateModule$7.getterFor(PROMISE);
var setInternalState$7 = InternalStateModule$7.set;
var NativePromisePrototype$2 = NativePromiseConstructor$3 && NativePromiseConstructor$3.prototype;
var PromiseConstructor = NativePromiseConstructor$3;
var PromisePrototype = NativePromisePrototype$2;
var TypeError$4 = global$t.TypeError;
var document$1 = global$t.document;
var process = global$t.process;
var newPromiseCapability$1 = newPromiseCapabilityModule$6.f;
var newGenericPromiseCapability = newPromiseCapability$1;
var DISPATCH_EVENT = !!(document$1 && document$1.createEvent && global$t.dispatchEvent);
var UNHANDLED_REJECTION = 'unhandledrejection';
var REJECTION_HANDLED = 'rejectionhandled';
var PENDING = 0;
var FULFILLED = 1;
var REJECTED = 2;
var HANDLED = 1;
var UNHANDLED = 2;
var Internal, OwnPromiseCapability, PromiseWrapper, nativeThen;

// helpers
var isThenable = function isThenable(it) {
  var then;
  return isObject$a(it) && isCallable$9(then = it.then) ? then : false;
};
var callReaction = function callReaction(reaction, state) {
  var value = state.value;
  var ok = state.state === FULFILLED;
  var handler = ok ? reaction.ok : reaction.fail;
  var resolve = reaction.resolve;
  var reject = reaction.reject;
  var domain = reaction.domain;
  var result, then, exited;
  try {
    if (handler) {
      if (!ok) {
        if (state.rejection === UNHANDLED) onHandleUnhandled(state);
        state.rejection = HANDLED;
      }
      if (handler === true) result = value;else {
        if (domain) domain.enter();
        result = handler(value); // can throw
        if (domain) {
          domain.exit();
          exited = true;
        }
      }
      if (result === reaction.promise) {
        reject(new TypeError$4('Promise-chain cycle'));
      } else if (then = isThenable(result)) {
        call$s(then, result, resolve, reject);
      } else resolve(result);
    } else reject(value);
  } catch (error) {
    if (domain && !exited) domain.exit();
    reject(error);
  }
};
var notify = function notify(state, isReject) {
  if (state.notified) return;
  state.notified = true;
  microtask$1(function () {
    var reactions = state.reactions;
    var reaction;
    while (reaction = reactions.get()) {
      callReaction(reaction, state);
    }
    state.notified = false;
    if (isReject && !state.rejection) onUnhandled(state);
  });
};
var dispatchEvent = function dispatchEvent(name, promise, reason) {
  var event, handler;
  if (DISPATCH_EVENT) {
    event = document$1.createEvent('Event');
    event.promise = promise;
    event.reason = reason;
    event.initEvent(name, false, true);
    global$t.dispatchEvent(event);
  } else event = {
    promise: promise,
    reason: reason
  };
  if (!NATIVE_PROMISE_REJECTION_EVENT && (handler = global$t['on' + name])) handler(event);else if (name === UNHANDLED_REJECTION) hostReportErrors('Unhandled promise rejection', reason);
};
var onUnhandled = function onUnhandled(state) {
  call$s(task, global$t, function () {
    var promise = state.facade;
    var value = state.value;
    var IS_UNHANDLED = isUnhandled(state);
    var result;
    if (IS_UNHANDLED) {
      result = perform$4(function () {
        if (IS_NODE) {
          process.emit('unhandledRejection', value, promise);
        } else dispatchEvent(UNHANDLED_REJECTION, promise, value);
      });
      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
      state.rejection = IS_NODE || isUnhandled(state) ? UNHANDLED : HANDLED;
      if (result.error) throw result.value;
    }
  });
};
var isUnhandled = function isUnhandled(state) {
  return state.rejection !== HANDLED && !state.parent;
};
var onHandleUnhandled = function onHandleUnhandled(state) {
  call$s(task, global$t, function () {
    var promise = state.facade;
    if (IS_NODE) {
      process.emit('rejectionHandled', promise);
    } else dispatchEvent(REJECTION_HANDLED, promise, state.value);
  });
};
var bind$5 = function bind(fn, state, unwrap) {
  return function (value) {
    fn(state, value, unwrap);
  };
};
var internalReject = function internalReject(state, value, unwrap) {
  if (state.done) return;
  state.done = true;
  if (unwrap) state = unwrap;
  state.value = value;
  state.state = REJECTED;
  notify(state, true);
};
var internalResolve = function internalResolve(state, value, unwrap) {
  if (state.done) return;
  state.done = true;
  if (unwrap) state = unwrap;
  try {
    if (state.facade === value) throw new TypeError$4("Promise can't be resolved itself");
    var then = isThenable(value);
    if (then) {
      microtask$1(function () {
        var wrapper = {
          done: false
        };
        try {
          call$s(then, value, bind$5(internalResolve, wrapper, state), bind$5(internalReject, wrapper, state));
        } catch (error) {
          internalReject(wrapper, error, state);
        }
      });
    } else {
      state.value = value;
      state.state = FULFILLED;
      notify(state, false);
    }
  } catch (error) {
    internalReject({
      done: false
    }, error, state);
  }
};

// constructor polyfill
if (FORCED_PROMISE_CONSTRUCTOR$4) {
  // 25.4.3.1 Promise(executor)
  PromiseConstructor = function Promise(executor) {
    anInstance$6(this, PromisePrototype);
    aCallable$9(executor);
    call$s(Internal, this);
    var state = getInternalPromiseState(this);
    try {
      executor(bind$5(internalResolve, state), bind$5(internalReject, state));
    } catch (error) {
      internalReject(state, error);
    }
  };
  PromisePrototype = PromiseConstructor.prototype;

  // eslint-disable-next-line no-unused-vars -- required for `.length`
  Internal = function Promise(executor) {
    setInternalState$7(this, {
      type: PROMISE,
      done: false,
      notified: false,
      parent: false,
      reactions: new Queue(),
      rejection: false,
      state: PENDING,
      value: undefined
    });
  };

  // `Promise.prototype.then` method
  // https://tc39.es/ecma262/#sec-promise.prototype.then
  Internal.prototype = defineBuiltIn$b(PromisePrototype, 'then', function then(onFulfilled, onRejected) {
    var state = getInternalPromiseState(this);
    var reaction = newPromiseCapability$1(speciesConstructor$4(this, PromiseConstructor));
    state.parent = true;
    reaction.ok = isCallable$9(onFulfilled) ? onFulfilled : true;
    reaction.fail = isCallable$9(onRejected) && onRejected;
    reaction.domain = IS_NODE ? process.domain : undefined;
    if (state.state === PENDING) state.reactions.add(reaction);else microtask$1(function () {
      callReaction(reaction, state);
    });
    return reaction.promise;
  });
  OwnPromiseCapability = function OwnPromiseCapability() {
    var promise = new Internal();
    var state = getInternalPromiseState(promise);
    this.promise = promise;
    this.resolve = bind$5(internalResolve, state);
    this.reject = bind$5(internalReject, state);
  };
  newPromiseCapabilityModule$6.f = newPromiseCapability$1 = function newPromiseCapability(C) {
    return C === PromiseConstructor || C === PromiseWrapper ? new OwnPromiseCapability(C) : newGenericPromiseCapability(C);
  };
  if (isCallable$9(NativePromiseConstructor$3) && NativePromisePrototype$2 !== Object.prototype) {
    nativeThen = NativePromisePrototype$2.then;
    if (!NATIVE_PROMISE_SUBCLASSING) {
      // make `Promise#then` return a polyfilled `Promise` for native promise-based APIs
      defineBuiltIn$b(NativePromisePrototype$2, 'then', function then(onFulfilled, onRejected) {
        var that = this;
        return new PromiseConstructor(function (resolve, reject) {
          call$s(nativeThen, that, resolve, reject);
        }).then(onFulfilled, onRejected);
        // https://github.com/zloirock/core-js/issues/640
      }, {
        unsafe: true
      });
    }

    // make `.constructor === Promise` work for native promise-based APIs
    try {
      delete NativePromisePrototype$2.constructor;
    } catch (error) {/* empty */}

    // make `instanceof Promise` work for native promise-based APIs
    if (setPrototypeOf$1) {
      setPrototypeOf$1(NativePromisePrototype$2, PromisePrototype);
    }
  }
}
$$1j({
  global: true,
  constructor: true,
  wrap: true,
  forced: FORCED_PROMISE_CONSTRUCTOR$4
}, {
  Promise: PromiseConstructor
});
setToStringTag$5(PromiseConstructor, PROMISE, false);
setSpecies$2(PROMISE);

var NativePromiseConstructor$2 = promiseNativeConstructor;
var checkCorrectnessOfIteration$1 = checkCorrectnessOfIteration$4;
var FORCED_PROMISE_CONSTRUCTOR$3 = promiseConstructorDetection.CONSTRUCTOR;
var promiseStaticsIncorrectIteration = FORCED_PROMISE_CONSTRUCTOR$3 || !checkCorrectnessOfIteration$1(function (iterable) {
  NativePromiseConstructor$2.all(iterable).then(undefined, function () {/* empty */});
});

var $$1i = _export;
var call$r = functionCall;
var aCallable$8 = aCallable$o;
var newPromiseCapabilityModule$5 = newPromiseCapability$2;
var perform$3 = perform$5;
var iterate$7 = iterate$e;
var PROMISE_STATICS_INCORRECT_ITERATION$3 = promiseStaticsIncorrectIteration;

// `Promise.all` method
// https://tc39.es/ecma262/#sec-promise.all
$$1i({
  target: 'Promise',
  stat: true,
  forced: PROMISE_STATICS_INCORRECT_ITERATION$3
}, {
  all: function all(iterable) {
    var C = this;
    var capability = newPromiseCapabilityModule$5.f(C);
    var resolve = capability.resolve;
    var reject = capability.reject;
    var result = perform$3(function () {
      var $promiseResolve = aCallable$8(C.resolve);
      var values = [];
      var counter = 0;
      var remaining = 1;
      iterate$7(iterable, function (promise) {
        var index = counter++;
        var alreadyCalled = false;
        remaining++;
        call$r($promiseResolve, C, promise).then(function (value) {
          if (alreadyCalled) return;
          alreadyCalled = true;
          values[index] = value;
          --remaining || resolve(values);
        }, reject);
      });
      --remaining || resolve(values);
    });
    if (result.error) reject(result.value);
    return capability.promise;
  }
});

var $$1h = _export;
var FORCED_PROMISE_CONSTRUCTOR$2 = promiseConstructorDetection.CONSTRUCTOR;
var NativePromiseConstructor$1 = promiseNativeConstructor;
var getBuiltIn$e = getBuiltIn$r;
var isCallable$8 = isCallable$y;
var defineBuiltIn$a = defineBuiltIn$o;
var NativePromisePrototype$1 = NativePromiseConstructor$1 && NativePromiseConstructor$1.prototype;

// `Promise.prototype.catch` method
// https://tc39.es/ecma262/#sec-promise.prototype.catch
$$1h({
  target: 'Promise',
  proto: true,
  forced: FORCED_PROMISE_CONSTRUCTOR$2,
  real: true
}, {
  'catch': function _catch(onRejected) {
    return this.then(undefined, onRejected);
  }
});

// makes sure that native promise-based APIs `Promise#catch` properly works with patched `Promise#then`
if (isCallable$8(NativePromiseConstructor$1)) {
  var method$1 = getBuiltIn$e('Promise').prototype['catch'];
  if (NativePromisePrototype$1['catch'] !== method$1) {
    defineBuiltIn$a(NativePromisePrototype$1, 'catch', method$1, {
      unsafe: true
    });
  }
}

var $$1g = _export;
var call$q = functionCall;
var aCallable$7 = aCallable$o;
var newPromiseCapabilityModule$4 = newPromiseCapability$2;
var perform$2 = perform$5;
var iterate$6 = iterate$e;
var PROMISE_STATICS_INCORRECT_ITERATION$2 = promiseStaticsIncorrectIteration;

// `Promise.race` method
// https://tc39.es/ecma262/#sec-promise.race
$$1g({
  target: 'Promise',
  stat: true,
  forced: PROMISE_STATICS_INCORRECT_ITERATION$2
}, {
  race: function race(iterable) {
    var C = this;
    var capability = newPromiseCapabilityModule$4.f(C);
    var reject = capability.reject;
    var result = perform$2(function () {
      var $promiseResolve = aCallable$7(C.resolve);
      iterate$6(iterable, function (promise) {
        call$q($promiseResolve, C, promise).then(capability.resolve, reject);
      });
    });
    if (result.error) reject(result.value);
    return capability.promise;
  }
});

var $$1f = _export;
var newPromiseCapabilityModule$3 = newPromiseCapability$2;
var FORCED_PROMISE_CONSTRUCTOR$1 = promiseConstructorDetection.CONSTRUCTOR;

// `Promise.reject` method
// https://tc39.es/ecma262/#sec-promise.reject
$$1f({
  target: 'Promise',
  stat: true,
  forced: FORCED_PROMISE_CONSTRUCTOR$1
}, {
  reject: function reject(r) {
    var capability = newPromiseCapabilityModule$3.f(this);
    var capabilityReject = capability.reject;
    capabilityReject(r);
    return capability.promise;
  }
});

var anObject$p = anObject$D;
var isObject$9 = isObject$B;
var newPromiseCapability = newPromiseCapability$2;
var promiseResolve$2 = function promiseResolve(C, x) {
  anObject$p(C);
  if (isObject$9(x) && x.constructor === C) return x;
  var promiseCapability = newPromiseCapability.f(C);
  var resolve = promiseCapability.resolve;
  resolve(x);
  return promiseCapability.promise;
};

var $$1e = _export;
var getBuiltIn$d = getBuiltIn$r;
var FORCED_PROMISE_CONSTRUCTOR = promiseConstructorDetection.CONSTRUCTOR;
var promiseResolve$1 = promiseResolve$2;
getBuiltIn$d('Promise');

// `Promise.resolve` method
// https://tc39.es/ecma262/#sec-promise.resolve
$$1e({
  target: 'Promise',
  stat: true,
  forced: FORCED_PROMISE_CONSTRUCTOR
}, {
  resolve: function resolve(x) {
    return promiseResolve$1(this, x);
  }
});

var $$1d = _export;
var call$p = functionCall;
var aCallable$6 = aCallable$o;
var newPromiseCapabilityModule$2 = newPromiseCapability$2;
var perform$1 = perform$5;
var iterate$5 = iterate$e;
var PROMISE_STATICS_INCORRECT_ITERATION$1 = promiseStaticsIncorrectIteration;

// `Promise.allSettled` method
// https://tc39.es/ecma262/#sec-promise.allsettled
$$1d({
  target: 'Promise',
  stat: true,
  forced: PROMISE_STATICS_INCORRECT_ITERATION$1
}, {
  allSettled: function allSettled(iterable) {
    var C = this;
    var capability = newPromiseCapabilityModule$2.f(C);
    var resolve = capability.resolve;
    var reject = capability.reject;
    var result = perform$1(function () {
      var promiseResolve = aCallable$6(C.resolve);
      var values = [];
      var counter = 0;
      var remaining = 1;
      iterate$5(iterable, function (promise) {
        var index = counter++;
        var alreadyCalled = false;
        remaining++;
        call$p(promiseResolve, C, promise).then(function (value) {
          if (alreadyCalled) return;
          alreadyCalled = true;
          values[index] = {
            status: 'fulfilled',
            value: value
          };
          --remaining || resolve(values);
        }, function (error) {
          if (alreadyCalled) return;
          alreadyCalled = true;
          values[index] = {
            status: 'rejected',
            reason: error
          };
          --remaining || resolve(values);
        });
      });
      --remaining || resolve(values);
    });
    if (result.error) reject(result.value);
    return capability.promise;
  }
});

var $$1c = _export;
var call$o = functionCall;
var aCallable$5 = aCallable$o;
var getBuiltIn$c = getBuiltIn$r;
var newPromiseCapabilityModule$1 = newPromiseCapability$2;
var perform = perform$5;
var iterate$4 = iterate$e;
var PROMISE_STATICS_INCORRECT_ITERATION = promiseStaticsIncorrectIteration;
var PROMISE_ANY_ERROR = 'No one promise resolved';

// `Promise.any` method
// https://tc39.es/ecma262/#sec-promise.any
$$1c({
  target: 'Promise',
  stat: true,
  forced: PROMISE_STATICS_INCORRECT_ITERATION
}, {
  any: function any(iterable) {
    var C = this;
    var AggregateError = getBuiltIn$c('AggregateError');
    var capability = newPromiseCapabilityModule$1.f(C);
    var resolve = capability.resolve;
    var reject = capability.reject;
    var result = perform(function () {
      var promiseResolve = aCallable$5(C.resolve);
      var errors = [];
      var counter = 0;
      var remaining = 1;
      var alreadyResolved = false;
      iterate$4(iterable, function (promise) {
        var index = counter++;
        var alreadyRejected = false;
        remaining++;
        call$o(promiseResolve, C, promise).then(function (value) {
          if (alreadyRejected || alreadyResolved) return;
          alreadyResolved = true;
          resolve(value);
        }, function (error) {
          if (alreadyRejected || alreadyResolved) return;
          alreadyRejected = true;
          errors[index] = error;
          --remaining || reject(new AggregateError(errors, PROMISE_ANY_ERROR));
        });
      });
      --remaining || reject(new AggregateError(errors, PROMISE_ANY_ERROR));
    });
    if (result.error) reject(result.value);
    return capability.promise;
  }
});

var $$1b = _export;
var NativePromiseConstructor = promiseNativeConstructor;
var fails$z = fails$1t;
var getBuiltIn$b = getBuiltIn$r;
var isCallable$7 = isCallable$y;
var speciesConstructor$3 = speciesConstructor$6;
var promiseResolve = promiseResolve$2;
var defineBuiltIn$9 = defineBuiltIn$o;
var NativePromisePrototype = NativePromiseConstructor && NativePromiseConstructor.prototype;

// Safari bug https://bugs.webkit.org/show_bug.cgi?id=200829
var NON_GENERIC = !!NativePromiseConstructor && fails$z(function () {
  // eslint-disable-next-line unicorn/no-thenable -- required for testing
  NativePromisePrototype['finally'].call({
    then: function then() {/* empty */}
  }, function () {/* empty */});
});

// `Promise.prototype.finally` method
// https://tc39.es/ecma262/#sec-promise.prototype.finally
$$1b({
  target: 'Promise',
  proto: true,
  real: true,
  forced: NON_GENERIC
}, {
  'finally': function _finally(onFinally) {
    var C = speciesConstructor$3(this, getBuiltIn$b('Promise'));
    var isFunction = isCallable$7(onFinally);
    return this.then(isFunction ? function (x) {
      return promiseResolve(C, onFinally()).then(function () {
        return x;
      });
    } : onFinally, isFunction ? function (e) {
      return promiseResolve(C, onFinally()).then(function () {
        throw e;
      });
    } : onFinally);
  }
});

// makes sure that native promise-based APIs `Promise#finally` properly works with patched `Promise#then`
if (isCallable$7(NativePromiseConstructor)) {
  var method = getBuiltIn$b('Promise').prototype['finally'];
  if (NativePromisePrototype['finally'] !== method) {
    defineBuiltIn$9(NativePromisePrototype, 'finally', method, {
      unsafe: true
    });
  }
}

var $$1a = _export;
var newPromiseCapabilityModule = newPromiseCapability$2;

// `Promise.withResolvers` method
// https://github.com/tc39/proposal-promise-with-resolvers
$$1a({
  target: 'Promise',
  stat: true
}, {
  withResolvers: function withResolvers() {
    var promiseCapability = newPromiseCapabilityModule.f(this);
    return {
      promise: promiseCapability.promise,
      resolve: promiseCapability.resolve,
      reject: promiseCapability.reject
    };
  }
});

var $$19 = _export;
var functionApply = functionApply$1;
var aCallable$4 = aCallable$o;
var anObject$o = anObject$D;
var fails$y = fails$1t;

// MS Edge argumentsList argument is optional
var OPTIONAL_ARGUMENTS_LIST = !fails$y(function () {
  // eslint-disable-next-line es/no-reflect -- required for testing
  Reflect.apply(function () {/* empty */});
});

// `Reflect.apply` method
// https://tc39.es/ecma262/#sec-reflect.apply
$$19({
  target: 'Reflect',
  stat: true,
  forced: OPTIONAL_ARGUMENTS_LIST
}, {
  apply: function apply(target, thisArgument, argumentsList) {
    return functionApply(aCallable$4(target), thisArgument, anObject$o(argumentsList));
  }
});

var $$18 = _export;
var getBuiltIn$a = getBuiltIn$r;
var apply$4 = functionApply$1;
var bind$4 = functionBind;
var aConstructor$1 = aConstructor$3;
var anObject$n = anObject$D;
var isObject$8 = isObject$B;
var create$5 = objectCreate;
var fails$x = fails$1t;
var nativeConstruct = getBuiltIn$a('Reflect', 'construct');
var ObjectPrototype = Object.prototype;
var push$8 = [].push;

// `Reflect.construct` method
// https://tc39.es/ecma262/#sec-reflect.construct
// MS Edge supports only 2 arguments and argumentsList argument is optional
// FF Nightly sets third argument as `new.target`, but does not create `this` from it
var NEW_TARGET_BUG = fails$x(function () {
  function F() {/* empty */}
  return !(nativeConstruct(function () {/* empty */}, [], F) instanceof F);
});
var ARGS_BUG = !fails$x(function () {
  nativeConstruct(function () {/* empty */});
});
var FORCED$6 = NEW_TARGET_BUG || ARGS_BUG;
$$18({
  target: 'Reflect',
  stat: true,
  forced: FORCED$6,
  sham: FORCED$6
}, {
  construct: function construct(Target, args /* , newTarget */) {
    aConstructor$1(Target);
    anObject$n(args);
    var newTarget = arguments.length < 3 ? Target : aConstructor$1(arguments[2]);
    if (ARGS_BUG && !NEW_TARGET_BUG) return nativeConstruct(Target, args, newTarget);
    if (Target === newTarget) {
      // w/o altered newTarget, optimization for 0-4 arguments
      switch (args.length) {
        case 0:
          return new Target();
        case 1:
          return new Target(args[0]);
        case 2:
          return new Target(args[0], args[1]);
        case 3:
          return new Target(args[0], args[1], args[2]);
        case 4:
          return new Target(args[0], args[1], args[2], args[3]);
      }
      // w/o altered newTarget, lot of arguments case
      var $args = [null];
      apply$4(push$8, $args, args);
      return new (apply$4(bind$4, Target, $args))();
    }
    // with altered newTarget, not support built-in constructors
    var proto = newTarget.prototype;
    var instance = create$5(isObject$8(proto) ? proto : ObjectPrototype);
    var result = apply$4(Target, instance, args);
    return isObject$8(result) ? result : instance;
  }
});

var $$17 = _export;
var DESCRIPTORS$e = descriptors;
var anObject$m = anObject$D;
var toPropertyKey$1 = toPropertyKey$8;
var definePropertyModule$2 = objectDefineProperty;
var fails$w = fails$1t;

// MS Edge has broken Reflect.defineProperty - throwing instead of returning false
var ERROR_INSTEAD_OF_FALSE = fails$w(function () {
  // eslint-disable-next-line es/no-reflect -- required for testing
  Reflect.defineProperty(definePropertyModule$2.f({}, 1, {
    value: 1
  }), 1, {
    value: 2
  });
});

// `Reflect.defineProperty` method
// https://tc39.es/ecma262/#sec-reflect.defineproperty
$$17({
  target: 'Reflect',
  stat: true,
  forced: ERROR_INSTEAD_OF_FALSE,
  sham: !DESCRIPTORS$e
}, {
  defineProperty: function defineProperty(target, propertyKey, attributes) {
    anObject$m(target);
    var key = toPropertyKey$1(propertyKey);
    anObject$m(attributes);
    try {
      definePropertyModule$2.f(target, key, attributes);
      return true;
    } catch (error) {
      return false;
    }
  }
});

var $$16 = _export;
var anObject$l = anObject$D;
var getOwnPropertyDescriptor$2 = objectGetOwnPropertyDescriptor.f;

// `Reflect.deleteProperty` method
// https://tc39.es/ecma262/#sec-reflect.deleteproperty
$$16({
  target: 'Reflect',
  stat: true
}, {
  deleteProperty: function deleteProperty(target, propertyKey) {
    var descriptor = getOwnPropertyDescriptor$2(anObject$l(target), propertyKey);
    return descriptor && !descriptor.configurable ? false : delete target[propertyKey];
  }
});

var hasOwn$9 = hasOwnProperty_1;
var isDataDescriptor$2 = function isDataDescriptor(descriptor) {
  return descriptor !== undefined && (hasOwn$9(descriptor, 'value') || hasOwn$9(descriptor, 'writable'));
};

var $$15 = _export;
var call$n = functionCall;
var isObject$7 = isObject$B;
var anObject$k = anObject$D;
var isDataDescriptor$1 = isDataDescriptor$2;
var getOwnPropertyDescriptorModule$3 = objectGetOwnPropertyDescriptor;
var getPrototypeOf$1 = objectGetPrototypeOf$2;

// `Reflect.get` method
// https://tc39.es/ecma262/#sec-reflect.get
function get(target, propertyKey /* , receiver */) {
  var receiver = arguments.length < 3 ? target : arguments[2];
  var descriptor, prototype;
  if (anObject$k(target) === receiver) return target[propertyKey];
  descriptor = getOwnPropertyDescriptorModule$3.f(target, propertyKey);
  if (descriptor) return isDataDescriptor$1(descriptor) ? descriptor.value : descriptor.get === undefined ? undefined : call$n(descriptor.get, receiver);
  if (isObject$7(prototype = getPrototypeOf$1(target))) return get(prototype, propertyKey, receiver);
}
$$15({
  target: 'Reflect',
  stat: true
}, {
  get: get
});

var $$14 = _export;
var DESCRIPTORS$d = descriptors;
var anObject$j = anObject$D;
var getOwnPropertyDescriptorModule$2 = objectGetOwnPropertyDescriptor;

// `Reflect.getOwnPropertyDescriptor` method
// https://tc39.es/ecma262/#sec-reflect.getownpropertydescriptor
$$14({
  target: 'Reflect',
  stat: true,
  sham: !DESCRIPTORS$d
}, {
  getOwnPropertyDescriptor: function getOwnPropertyDescriptor(target, propertyKey) {
    return getOwnPropertyDescriptorModule$2.f(anObject$j(target), propertyKey);
  }
});

var $$13 = _export;
var anObject$i = anObject$D;
var objectGetPrototypeOf = objectGetPrototypeOf$2;
var CORRECT_PROTOTYPE_GETTER = correctPrototypeGetter;

// `Reflect.getPrototypeOf` method
// https://tc39.es/ecma262/#sec-reflect.getprototypeof
$$13({
  target: 'Reflect',
  stat: true,
  sham: !CORRECT_PROTOTYPE_GETTER
}, {
  getPrototypeOf: function getPrototypeOf(target) {
    return objectGetPrototypeOf(anObject$i(target));
  }
});

var $$12 = _export;

// `Reflect.has` method
// https://tc39.es/ecma262/#sec-reflect.has
$$12({
  target: 'Reflect',
  stat: true
}, {
  has: function has(target, propertyKey) {
    return propertyKey in target;
  }
});

var $$11 = _export;
var anObject$h = anObject$D;
var $isExtensible = objectIsExtensible;

// `Reflect.isExtensible` method
// https://tc39.es/ecma262/#sec-reflect.isextensible
$$11({
  target: 'Reflect',
  stat: true
}, {
  isExtensible: function isExtensible(target) {
    anObject$h(target);
    return $isExtensible(target);
  }
});

var $$10 = _export;
var ownKeys = ownKeys$3;

// `Reflect.ownKeys` method
// https://tc39.es/ecma262/#sec-reflect.ownkeys
$$10({
  target: 'Reflect',
  stat: true
}, {
  ownKeys: ownKeys
});

var $$$ = _export;
var getBuiltIn$9 = getBuiltIn$r;
var anObject$g = anObject$D;
var FREEZING$1 = freezing;

// `Reflect.preventExtensions` method
// https://tc39.es/ecma262/#sec-reflect.preventextensions
$$$({
  target: 'Reflect',
  stat: true,
  sham: !FREEZING$1
}, {
  preventExtensions: function preventExtensions(target) {
    anObject$g(target);
    try {
      var objectPreventExtensions = getBuiltIn$9('Object', 'preventExtensions');
      if (objectPreventExtensions) objectPreventExtensions(target);
      return true;
    } catch (error) {
      return false;
    }
  }
});

var $$_ = _export;
var call$m = functionCall;
var anObject$f = anObject$D;
var isObject$6 = isObject$B;
var isDataDescriptor = isDataDescriptor$2;
var fails$v = fails$1t;
var definePropertyModule$1 = objectDefineProperty;
var getOwnPropertyDescriptorModule$1 = objectGetOwnPropertyDescriptor;
var getPrototypeOf = objectGetPrototypeOf$2;
var createPropertyDescriptor$4 = createPropertyDescriptor$c;

// `Reflect.set` method
// https://tc39.es/ecma262/#sec-reflect.set
function set(target, propertyKey, V /* , receiver */) {
  var receiver = arguments.length < 4 ? target : arguments[3];
  var ownDescriptor = getOwnPropertyDescriptorModule$1.f(anObject$f(target), propertyKey);
  var existingDescriptor, prototype, setter;
  if (!ownDescriptor) {
    if (isObject$6(prototype = getPrototypeOf(target))) {
      return set(prototype, propertyKey, V, receiver);
    }
    ownDescriptor = createPropertyDescriptor$4(0);
  }
  if (isDataDescriptor(ownDescriptor)) {
    if (ownDescriptor.writable === false || !isObject$6(receiver)) return false;
    if (existingDescriptor = getOwnPropertyDescriptorModule$1.f(receiver, propertyKey)) {
      if (existingDescriptor.get || existingDescriptor.set || existingDescriptor.writable === false) return false;
      existingDescriptor.value = V;
      definePropertyModule$1.f(receiver, propertyKey, existingDescriptor);
    } else definePropertyModule$1.f(receiver, propertyKey, createPropertyDescriptor$4(0, V));
  } else {
    setter = ownDescriptor.set;
    if (setter === undefined) return false;
    call$m(setter, receiver, V);
  }
  return true;
}

// MS Edge 17-18 Reflect.set allows setting the property to object
// with non-writable property on the prototype
var MS_EDGE_BUG = fails$v(function () {
  var Constructor = function Constructor() {/* empty */};
  var object = definePropertyModule$1.f(new Constructor(), 'a', {
    configurable: true
  });
  // eslint-disable-next-line es/no-reflect -- required for testing
  return Reflect.set(Constructor.prototype, 'a', 1, object) !== false;
});
$$_({
  target: 'Reflect',
  stat: true,
  forced: MS_EDGE_BUG
}, {
  set: set
});

var $$Z = _export;
var anObject$e = anObject$D;
var aPossiblePrototype = aPossiblePrototype$2;
var objectSetPrototypeOf = objectSetPrototypeOf$1;

// `Reflect.setPrototypeOf` method
// https://tc39.es/ecma262/#sec-reflect.setprototypeof
if (objectSetPrototypeOf) $$Z({
  target: 'Reflect',
  stat: true
}, {
  setPrototypeOf: function setPrototypeOf(target, proto) {
    anObject$e(target);
    aPossiblePrototype(proto);
    try {
      objectSetPrototypeOf(target, proto);
      return true;
    } catch (error) {
      return false;
    }
  }
});

var $$Y = _export;
var global$s = global$10;
var setToStringTag$4 = setToStringTag$e;
$$Y({
  global: true
}, {
  Reflect: {}
});

// Reflect[@@toStringTag] property
// https://tc39.es/ecma262/#sec-reflect-@@tostringtag
setToStringTag$4(global$s.Reflect, 'Reflect', true);

var isObject$5 = isObject$B;
var classof$9 = classofRaw$2;
var wellKnownSymbol$a = wellKnownSymbol$z;
var MATCH$2 = wellKnownSymbol$a('match');

// `IsRegExp` abstract operation
// https://tc39.es/ecma262/#sec-isregexp
var isRegexp = function isRegexp(it) {
  var isRegExp;
  return isObject$5(it) && ((isRegExp = it[MATCH$2]) !== undefined ? !!isRegExp : classof$9(it) === 'RegExp');
};

var anObject$d = anObject$D;

// `RegExp.prototype.flags` getter implementation
// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags
var regexpFlags$1 = function regexpFlags() {
  var that = anObject$d(this);
  var result = '';
  if (that.hasIndices) result += 'd';
  if (that.global) result += 'g';
  if (that.ignoreCase) result += 'i';
  if (that.multiline) result += 'm';
  if (that.dotAll) result += 's';
  if (that.unicode) result += 'u';
  if (that.unicodeSets) result += 'v';
  if (that.sticky) result += 'y';
  return result;
};

var call$l = functionCall;
var hasOwn$8 = hasOwnProperty_1;
var isPrototypeOf$2 = objectIsPrototypeOf;
var regExpFlags$1 = regexpFlags$1;
var RegExpPrototype$7 = RegExp.prototype;
var regexpGetFlags = function regexpGetFlags(R) {
  var flags = R.flags;
  return flags === undefined && !('flags' in RegExpPrototype$7) && !hasOwn$8(R, 'flags') && isPrototypeOf$2(RegExpPrototype$7, R) ? call$l(regExpFlags$1, R) : flags;
};

var fails$u = fails$1t;
var global$r = global$10;

// babel-minify and Closure Compiler transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError
var $RegExp$2 = global$r.RegExp;
var UNSUPPORTED_Y$3 = fails$u(function () {
  var re = $RegExp$2('a', 'y');
  re.lastIndex = 2;
  return re.exec('abcd') !== null;
});

// UC Browser bug
// https://github.com/zloirock/core-js/issues/1008
var MISSED_STICKY$2 = UNSUPPORTED_Y$3 || fails$u(function () {
  return !$RegExp$2('a', 'y').sticky;
});
var BROKEN_CARET = UNSUPPORTED_Y$3 || fails$u(function () {
  // https://bugzilla.mozilla.org/show_bug.cgi?id=773687
  var re = $RegExp$2('^r', 'gy');
  re.lastIndex = 2;
  return re.exec('str') !== null;
});
var regexpStickyHelpers = {
  BROKEN_CARET: BROKEN_CARET,
  MISSED_STICKY: MISSED_STICKY$2,
  UNSUPPORTED_Y: UNSUPPORTED_Y$3
};

var fails$t = fails$1t;
var global$q = global$10;

// babel-minify and Closure Compiler transpiles RegExp('.', 's') -> /./s and it causes SyntaxError
var $RegExp$1 = global$q.RegExp;
var regexpUnsupportedDotAll = fails$t(function () {
  var re = $RegExp$1('.', 's');
  return !(re.dotAll && re.test('\n') && re.flags === 's');
});

var fails$s = fails$1t;
var global$p = global$10;

// babel-minify and Closure Compiler transpiles RegExp('(?<a>b)', 'g') -> /(?<a>b)/g and it causes SyntaxError
var $RegExp = global$p.RegExp;
var regexpUnsupportedNcg = fails$s(function () {
  var re = $RegExp('(?<a>b)', 'g');
  return re.exec('b').groups.a !== 'b' || 'b'.replace(re, '$<a>c') !== 'bc';
});

var DESCRIPTORS$c = descriptors;
var global$o = global$10;
var uncurryThis$C = functionUncurryThis;
var isForced = isForced_1;
var inheritIfRequired$2 = inheritIfRequired$7;
var createNonEnumerableProperty$5 = createNonEnumerableProperty$f;
var create$4 = objectCreate;
var getOwnPropertyNames$1 = objectGetOwnPropertyNames.f;
var isPrototypeOf$1 = objectIsPrototypeOf;
var isRegExp$3 = isRegexp;
var toString$q = toString$D;
var getRegExpFlags$4 = regexpGetFlags;
var stickyHelpers$2 = regexpStickyHelpers;
var proxyAccessor = proxyAccessor$2;
var defineBuiltIn$8 = defineBuiltIn$o;
var fails$r = fails$1t;
var hasOwn$7 = hasOwnProperty_1;
var enforceInternalState$2 = internalState.enforce;
var setSpecies$1 = setSpecies$6;
var wellKnownSymbol$9 = wellKnownSymbol$z;
var UNSUPPORTED_DOT_ALL$2 = regexpUnsupportedDotAll;
var UNSUPPORTED_NCG$1 = regexpUnsupportedNcg;
var MATCH$1 = wellKnownSymbol$9('match');
var NativeRegExp = global$o.RegExp;
var RegExpPrototype$6 = NativeRegExp.prototype;
var SyntaxError = global$o.SyntaxError;
var exec$5 = uncurryThis$C(RegExpPrototype$6.exec);
var charAt$c = uncurryThis$C(''.charAt);
var replace$7 = uncurryThis$C(''.replace);
var stringIndexOf$3 = uncurryThis$C(''.indexOf);
var stringSlice$b = uncurryThis$C(''.slice);
// TODO: Use only proper RegExpIdentifierName
var IS_NCG = /^\?<[^\s\d!#%&*+<=>@^][^\s!#%&*+<=>@^]*>/;
var re1 = /a/g;
var re2 = /a/g;

// "new" should create a new object, old webkit bug
var CORRECT_NEW = new NativeRegExp(re1) !== re1;
var MISSED_STICKY$1 = stickyHelpers$2.MISSED_STICKY;
var UNSUPPORTED_Y$2 = stickyHelpers$2.UNSUPPORTED_Y;
var BASE_FORCED = DESCRIPTORS$c && (!CORRECT_NEW || MISSED_STICKY$1 || UNSUPPORTED_DOT_ALL$2 || UNSUPPORTED_NCG$1 || fails$r(function () {
  re2[MATCH$1] = false;
  // RegExp constructor can alter flags and IsRegExp works correct with @@match
  return NativeRegExp(re1) !== re1 || NativeRegExp(re2) === re2 || String(NativeRegExp(re1, 'i')) !== '/a/i';
}));
var handleDotAll = function handleDotAll(string) {
  var length = string.length;
  var index = 0;
  var result = '';
  var brackets = false;
  var chr;
  for (; index <= length; index++) {
    chr = charAt$c(string, index);
    if (chr === '\\') {
      result += chr + charAt$c(string, ++index);
      continue;
    }
    if (!brackets && chr === '.') {
      result += '[\\s\\S]';
    } else {
      if (chr === '[') {
        brackets = true;
      } else if (chr === ']') {
        brackets = false;
      }
      result += chr;
    }
  }
  return result;
};
var handleNCG = function handleNCG(string) {
  var length = string.length;
  var index = 0;
  var result = '';
  var named = [];
  var names = create$4(null);
  var brackets = false;
  var ncg = false;
  var groupid = 0;
  var groupname = '';
  var chr;
  for (; index <= length; index++) {
    chr = charAt$c(string, index);
    if (chr === '\\') {
      chr += charAt$c(string, ++index);
    } else if (chr === ']') {
      brackets = false;
    } else if (!brackets) switch (true) {
      case chr === '[':
        brackets = true;
        break;
      case chr === '(':
        if (exec$5(IS_NCG, stringSlice$b(string, index + 1))) {
          index += 2;
          ncg = true;
        }
        result += chr;
        groupid++;
        continue;
      case chr === '>' && ncg:
        if (groupname === '' || hasOwn$7(names, groupname)) {
          throw new SyntaxError('Invalid capture group name');
        }
        names[groupname] = true;
        named[named.length] = [groupname, groupid];
        ncg = false;
        groupname = '';
        continue;
    }
    if (ncg) groupname += chr;else result += chr;
  }
  return [result, named];
};

// `RegExp` constructor
// https://tc39.es/ecma262/#sec-regexp-constructor
if (isForced('RegExp', BASE_FORCED)) {
  var RegExpWrapper = function RegExp(pattern, flags) {
    var thisIsRegExp = isPrototypeOf$1(RegExpPrototype$6, this);
    var patternIsRegExp = isRegExp$3(pattern);
    var flagsAreUndefined = flags === undefined;
    var groups = [];
    var rawPattern = pattern;
    var rawFlags, dotAll, sticky, handled, result, state;
    if (!thisIsRegExp && patternIsRegExp && flagsAreUndefined && pattern.constructor === RegExpWrapper) {
      return pattern;
    }
    if (patternIsRegExp || isPrototypeOf$1(RegExpPrototype$6, pattern)) {
      pattern = pattern.source;
      if (flagsAreUndefined) flags = getRegExpFlags$4(rawPattern);
    }
    pattern = pattern === undefined ? '' : toString$q(pattern);
    flags = flags === undefined ? '' : toString$q(flags);
    rawPattern = pattern;
    if (UNSUPPORTED_DOT_ALL$2 && 'dotAll' in re1) {
      dotAll = !!flags && stringIndexOf$3(flags, 's') > -1;
      if (dotAll) flags = replace$7(flags, /s/g, '');
    }
    rawFlags = flags;
    if (MISSED_STICKY$1 && 'sticky' in re1) {
      sticky = !!flags && stringIndexOf$3(flags, 'y') > -1;
      if (sticky && UNSUPPORTED_Y$2) flags = replace$7(flags, /y/g, '');
    }
    if (UNSUPPORTED_NCG$1) {
      handled = handleNCG(pattern);
      pattern = handled[0];
      groups = handled[1];
    }
    result = inheritIfRequired$2(NativeRegExp(pattern, flags), thisIsRegExp ? this : RegExpPrototype$6, RegExpWrapper);
    if (dotAll || sticky || groups.length) {
      state = enforceInternalState$2(result);
      if (dotAll) {
        state.dotAll = true;
        state.raw = RegExpWrapper(handleDotAll(pattern), rawFlags);
      }
      if (sticky) state.sticky = true;
      if (groups.length) state.groups = groups;
    }
    if (pattern !== rawPattern) try {
      // fails in old engines, but we have no alternatives for unsupported regex syntax
      createNonEnumerableProperty$5(result, 'source', rawPattern === '' ? '(?:)' : rawPattern);
    } catch (error) {/* empty */}
    return result;
  };
  for (var keys$1 = getOwnPropertyNames$1(NativeRegExp), index = 0; keys$1.length > index;) {
    proxyAccessor(RegExpWrapper, NativeRegExp, keys$1[index++]);
  }
  RegExpPrototype$6.constructor = RegExpWrapper;
  RegExpWrapper.prototype = RegExpPrototype$6;
  defineBuiltIn$8(global$o, 'RegExp', RegExpWrapper, {
    constructor: true
  });
}

// https://tc39.es/ecma262/#sec-get-regexp-@@species
setSpecies$1('RegExp');

var DESCRIPTORS$b = descriptors;
var UNSUPPORTED_DOT_ALL$1 = regexpUnsupportedDotAll;
var classof$8 = classofRaw$2;
var defineBuiltInAccessor$8 = defineBuiltInAccessor$i;
var getInternalState$6 = internalState.get;
var RegExpPrototype$5 = RegExp.prototype;
var $TypeError$8 = TypeError;

// `RegExp.prototype.dotAll` getter
// https://tc39.es/ecma262/#sec-get-regexp.prototype.dotall
if (DESCRIPTORS$b && UNSUPPORTED_DOT_ALL$1) {
  defineBuiltInAccessor$8(RegExpPrototype$5, 'dotAll', {
    configurable: true,
    get: function dotAll() {
      if (this === RegExpPrototype$5) return;
      // We can't use InternalStateModule.getterFor because
      // we don't add metadata for regexps created by a literal.
      if (classof$8(this) === 'RegExp') {
        return !!getInternalState$6(this).dotAll;
      }
      throw new $TypeError$8('Incompatible receiver, RegExp required');
    }
  });
}

/* eslint-disable regexp/no-empty-capturing-group, regexp/no-empty-group, regexp/no-lazy-ends -- testing */
/* eslint-disable regexp/no-useless-quantifier -- testing */
var call$k = functionCall;
var uncurryThis$B = functionUncurryThis;
var toString$p = toString$D;
var regexpFlags = regexpFlags$1;
var stickyHelpers$1 = regexpStickyHelpers;
var shared = shared$7;
var create$3 = objectCreate;
var getInternalState$5 = internalState.get;
var UNSUPPORTED_DOT_ALL = regexpUnsupportedDotAll;
var UNSUPPORTED_NCG = regexpUnsupportedNcg;
var nativeReplace = shared('native-string-replace', String.prototype.replace);
var nativeExec = RegExp.prototype.exec;
var patchedExec = nativeExec;
var charAt$b = uncurryThis$B(''.charAt);
var indexOf$1 = uncurryThis$B(''.indexOf);
var replace$6 = uncurryThis$B(''.replace);
var stringSlice$a = uncurryThis$B(''.slice);
var UPDATES_LAST_INDEX_WRONG = function () {
  var re1 = /a/;
  var re2 = /b*/g;
  call$k(nativeExec, re1, 'a');
  call$k(nativeExec, re2, 'a');
  return re1.lastIndex !== 0 || re2.lastIndex !== 0;
}();
var UNSUPPORTED_Y$1 = stickyHelpers$1.BROKEN_CARET;

// nonparticipating capturing group, copied from es5-shim's String#split patch.
var NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;
var PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED || UNSUPPORTED_Y$1 || UNSUPPORTED_DOT_ALL || UNSUPPORTED_NCG;
if (PATCH) {
  patchedExec = function exec(string) {
    var re = this;
    var state = getInternalState$5(re);
    var str = toString$p(string);
    var raw = state.raw;
    var result, reCopy, lastIndex, match, i, object, group;
    if (raw) {
      raw.lastIndex = re.lastIndex;
      result = call$k(patchedExec, raw, str);
      re.lastIndex = raw.lastIndex;
      return result;
    }
    var groups = state.groups;
    var sticky = UNSUPPORTED_Y$1 && re.sticky;
    var flags = call$k(regexpFlags, re);
    var source = re.source;
    var charsAdded = 0;
    var strCopy = str;
    if (sticky) {
      flags = replace$6(flags, 'y', '');
      if (indexOf$1(flags, 'g') === -1) {
        flags += 'g';
      }
      strCopy = stringSlice$a(str, re.lastIndex);
      // Support anchored sticky behavior.
      if (re.lastIndex > 0 && (!re.multiline || re.multiline && charAt$b(str, re.lastIndex - 1) !== '\n')) {
        source = '(?: ' + source + ')';
        strCopy = ' ' + strCopy;
        charsAdded++;
      }
      // ^(? + rx + ) is needed, in combination with some str slicing, to
      // simulate the 'y' flag.
      reCopy = new RegExp('^(?:' + source + ')', flags);
    }
    if (NPCG_INCLUDED) {
      reCopy = new RegExp('^' + source + '$(?!\\s)', flags);
    }
    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re.lastIndex;
    match = call$k(nativeExec, sticky ? reCopy : re, strCopy);
    if (sticky) {
      if (match) {
        match.input = stringSlice$a(match.input, charsAdded);
        match[0] = stringSlice$a(match[0], charsAdded);
        match.index = re.lastIndex;
        re.lastIndex += match[0].length;
      } else re.lastIndex = 0;
    } else if (UPDATES_LAST_INDEX_WRONG && match) {
      re.lastIndex = re.global ? match.index + match[0].length : lastIndex;
    }
    if (NPCG_INCLUDED && match && match.length > 1) {
      // Fix browsers whose `exec` methods don't consistently return `undefined`
      // for NPCG, like IE8. NOTE: This doesn't work for /(.?)?/
      call$k(nativeReplace, match[0], reCopy, function () {
        for (i = 1; i < arguments.length - 2; i++) {
          if (arguments[i] === undefined) match[i] = undefined;
        }
      });
    }
    if (match && groups) {
      match.groups = object = create$3(null);
      for (i = 0; i < groups.length; i++) {
        group = groups[i];
        object[group[0]] = match[group[1]];
      }
    }
    return match;
  };
}
var regexpExec$2 = patchedExec;

var $$X = _export;
var exec$4 = regexpExec$2;

// `RegExp.prototype.exec` method
// https://tc39.es/ecma262/#sec-regexp.prototype.exec
$$X({
  target: 'RegExp',
  proto: true,
  forced: /./.exec !== exec$4
}, {
  exec: exec$4
});

var global$n = global$10;
var DESCRIPTORS$a = descriptors;
var defineBuiltInAccessor$7 = defineBuiltInAccessor$i;
var regExpFlags = regexpFlags$1;
var fails$q = fails$1t;

// babel-minify and Closure Compiler transpiles RegExp('.', 'd') -> /./d and it causes SyntaxError
var RegExp$2 = global$n.RegExp;
var RegExpPrototype$4 = RegExp$2.prototype;
var FORCED$5 = DESCRIPTORS$a && fails$q(function () {
  var INDICES_SUPPORT = true;
  try {
    RegExp$2('.', 'd');
  } catch (error) {
    INDICES_SUPPORT = false;
  }
  var O = {};
  // modern V8 bug
  var calls = '';
  var expected = INDICES_SUPPORT ? 'dgimsy' : 'gimsy';
  var addGetter = function addGetter(key, chr) {
    // eslint-disable-next-line es/no-object-defineproperty -- safe
    Object.defineProperty(O, key, {
      get: function get() {
        calls += chr;
        return true;
      }
    });
  };
  var pairs = {
    dotAll: 's',
    global: 'g',
    ignoreCase: 'i',
    multiline: 'm',
    sticky: 'y'
  };
  if (INDICES_SUPPORT) pairs.hasIndices = 'd';
  for (var key in pairs) addGetter(key, pairs[key]);

  // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
  var result = Object.getOwnPropertyDescriptor(RegExpPrototype$4, 'flags').get.call(O);
  return result !== expected || calls !== expected;
});

// `RegExp.prototype.flags` getter
// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags
if (FORCED$5) defineBuiltInAccessor$7(RegExpPrototype$4, 'flags', {
  configurable: true,
  get: regExpFlags
});

var DESCRIPTORS$9 = descriptors;
var MISSED_STICKY = regexpStickyHelpers.MISSED_STICKY;
var classof$7 = classofRaw$2;
var defineBuiltInAccessor$6 = defineBuiltInAccessor$i;
var getInternalState$4 = internalState.get;
var RegExpPrototype$3 = RegExp.prototype;
var $TypeError$7 = TypeError;

// `RegExp.prototype.sticky` getter
// https://tc39.es/ecma262/#sec-get-regexp.prototype.sticky
if (DESCRIPTORS$9 && MISSED_STICKY) {
  defineBuiltInAccessor$6(RegExpPrototype$3, 'sticky', {
    configurable: true,
    get: function sticky() {
      if (this === RegExpPrototype$3) return;
      // We can't use InternalStateModule.getterFor because
      // we don't add metadata for regexps created by a literal.
      if (classof$7(this) === 'RegExp') {
        return !!getInternalState$4(this).sticky;
      }
      throw new $TypeError$7('Incompatible receiver, RegExp required');
    }
  });
}

// TODO: Remove from `core-js@4` since it's moved to entry points

var $$W = _export;
var call$j = functionCall;
var isCallable$6 = isCallable$y;
var anObject$c = anObject$D;
var toString$o = toString$D;
var DELEGATES_TO_EXEC = function () {
  var execCalled = false;
  var re = /[ac]/;
  re.exec = function () {
    execCalled = true;
    return /./.exec.apply(this, arguments);
  };
  return re.test('abc') === true && execCalled;
}();
var nativeTest = /./.test;

// `RegExp.prototype.test` method
// https://tc39.es/ecma262/#sec-regexp.prototype.test
$$W({
  target: 'RegExp',
  proto: true,
  forced: !DELEGATES_TO_EXEC
}, {
  test: function test(S) {
    var R = anObject$c(this);
    var string = toString$o(S);
    var exec = R.exec;
    if (!isCallable$6(exec)) return call$j(nativeTest, R, string);
    var result = call$j(exec, R, string);
    if (result === null) return false;
    anObject$c(result);
    return true;
  }
});

var PROPER_FUNCTION_NAME$1 = functionName.PROPER;
var defineBuiltIn$7 = defineBuiltIn$o;
var anObject$b = anObject$D;
var $toString$2 = toString$D;
var fails$p = fails$1t;
var getRegExpFlags$3 = regexpGetFlags;
var TO_STRING = 'toString';
var RegExpPrototype$2 = RegExp.prototype;
var nativeToString = RegExpPrototype$2[TO_STRING];
var NOT_GENERIC = fails$p(function () {
  return nativeToString.call({
    source: 'a',
    flags: 'b'
  }) !== '/a/b';
});
// FF44- RegExp#toString has a wrong name
var INCORRECT_NAME = PROPER_FUNCTION_NAME$1 && nativeToString.name !== TO_STRING;

// `RegExp.prototype.toString` method
// https://tc39.es/ecma262/#sec-regexp.prototype.tostring
if (NOT_GENERIC || INCORRECT_NAME) {
  defineBuiltIn$7(RegExpPrototype$2, TO_STRING, function toString() {
    var R = anObject$b(this);
    var pattern = $toString$2(R.source);
    var flags = $toString$2(getRegExpFlags$3(R));
    return '/' + pattern + '/' + flags;
  }, {
    unsafe: true
  });
}

var collection$2 = collection$4;
var collectionStrong = collectionStrong$2;

// `Set` constructor
// https://tc39.es/ecma262/#sec-set-objects
collection$2('Set', function (init) {
  return function Set() {
    return init(this, arguments.length ? arguments[0] : undefined);
  };
}, collectionStrong);

var uncurryThis$A = functionUncurryThis;

// eslint-disable-next-line es/no-set -- safe
var SetPrototype$1 = Set.prototype;
var setHelpers = {
  // eslint-disable-next-line es/no-set -- safe
  Set: Set,
  add: uncurryThis$A(SetPrototype$1.add),
  has: uncurryThis$A(SetPrototype$1.has),
  remove: uncurryThis$A(SetPrototype$1['delete']),
  proto: SetPrototype$1
};

var has$5 = setHelpers.has;

// Perform ? RequireInternalSlot(M, [[SetData]])
var aSet$7 = function aSet(it) {
  has$5(it);
  return it;
};

var call$i = functionCall;
var iterateSimple$7 = function iterateSimple(record, fn, ITERATOR_INSTEAD_OF_RECORD) {
  var iterator = ITERATOR_INSTEAD_OF_RECORD ? record : record.iterator;
  var next = record.next;
  var step, result;
  while (!(step = call$i(next, iterator)).done) {
    result = fn(step.value);
    if (result !== undefined) return result;
  }
};

var uncurryThis$z = functionUncurryThis;
var iterateSimple$6 = iterateSimple$7;
var SetHelpers$6 = setHelpers;
var Set$4 = SetHelpers$6.Set;
var SetPrototype = SetHelpers$6.proto;
var forEach$4 = uncurryThis$z(SetPrototype.forEach);
var keys = uncurryThis$z(SetPrototype.keys);
var next = keys(new Set$4()).next;
var setIterate$1 = function setIterate(set, fn, interruptible) {
  return interruptible ? iterateSimple$6({
    iterator: keys(set),
    next: next
  }, fn) : forEach$4(set, fn);
};

var SetHelpers$5 = setHelpers;
var iterate$3 = setIterate$1;
var Set$3 = SetHelpers$5.Set;
var add$3 = SetHelpers$5.add;
var setClone = function setClone(set) {
  var result = new Set$3();
  iterate$3(set, function (it) {
    add$3(result, it);
  });
  return result;
};

var uncurryThisAccessor = functionUncurryThisAccessor;
var SetHelpers$4 = setHelpers;
var setSize = uncurryThisAccessor(SetHelpers$4.proto, 'size', 'get') || function (set) {
  return set.size;
};

// `GetIteratorDirect(obj)` abstract operation
// https://tc39.es/proposal-iterator-helpers/#sec-getiteratordirect
var getIteratorDirect$1 = function getIteratorDirect(obj) {
  return {
    iterator: obj,
    next: obj.next,
    done: false
  };
};

var aCallable$3 = aCallable$o;
var anObject$a = anObject$D;
var call$h = functionCall;
var toIntegerOrInfinity$7 = toIntegerOrInfinity$m;
var getIteratorDirect = getIteratorDirect$1;
var INVALID_SIZE = 'Invalid size';
var $RangeError$4 = RangeError;
var $TypeError$6 = TypeError;
var max$3 = Math.max;
var SetRecord = function SetRecord(set, intSize) {
  this.set = set;
  this.size = max$3(intSize, 0);
  this.has = aCallable$3(set.has);
  this.keys = aCallable$3(set.keys);
};
SetRecord.prototype = {
  getIterator: function getIterator() {
    return getIteratorDirect(anObject$a(call$h(this.keys, this.set)));
  },
  includes: function includes(it) {
    return call$h(this.has, this.set, it);
  }
};

// `GetSetRecord` abstract operation
// https://tc39.es/proposal-set-methods/#sec-getsetrecord
var getSetRecord$7 = function getSetRecord(obj) {
  anObject$a(obj);
  var numSize = +obj.size;
  // NOTE: If size is undefined, then numSize will be NaN
  // eslint-disable-next-line no-self-compare -- NaN check
  if (numSize !== numSize) throw new $TypeError$6(INVALID_SIZE);
  var intSize = toIntegerOrInfinity$7(numSize);
  if (intSize < 0) throw new $RangeError$4(INVALID_SIZE);
  return new SetRecord(obj, intSize);
};

var aSet$6 = aSet$7;
var SetHelpers$3 = setHelpers;
var clone$2 = setClone;
var size$4 = setSize;
var getSetRecord$6 = getSetRecord$7;
var iterateSet$2 = setIterate$1;
var iterateSimple$5 = iterateSimple$7;
var has$4 = SetHelpers$3.has;
var remove$1 = SetHelpers$3.remove;

// `Set.prototype.difference` method
// https://github.com/tc39/proposal-set-methods
var setDifference = function difference(other) {
  var O = aSet$6(this);
  var otherRec = getSetRecord$6(other);
  var result = clone$2(O);
  if (size$4(O) <= otherRec.size) iterateSet$2(O, function (e) {
    if (otherRec.includes(e)) remove$1(result, e);
  });else iterateSimple$5(otherRec.getIterator(), function (e) {
    if (has$4(O, e)) remove$1(result, e);
  });
  return result;
};

var getBuiltIn$8 = getBuiltIn$r;
var createSetLike = function createSetLike(size) {
  return {
    size: size,
    has: function has() {
      return false;
    },
    keys: function keys() {
      return {
        next: function next() {
          return {
            done: true
          };
        }
      };
    }
  };
};
var setMethodAcceptSetLike$7 = function setMethodAcceptSetLike(name) {
  var Set = getBuiltIn$8('Set');
  try {
    new Set()[name](createSetLike(0));
    try {
      // late spec change, early WebKit ~ Safari 17.0 beta implementation does not pass it
      // https://github.com/tc39/proposal-set-methods/pull/88
      new Set()[name](createSetLike(-1));
      return false;
    } catch (error2) {
      return true;
    }
  } catch (error) {
    return false;
  }
};

var $$V = _export;
var difference = setDifference;
var setMethodAcceptSetLike$6 = setMethodAcceptSetLike$7;

// `Set.prototype.difference` method
// https://github.com/tc39/proposal-set-methods
$$V({
  target: 'Set',
  proto: true,
  real: true,
  forced: !setMethodAcceptSetLike$6('difference')
}, {
  difference: difference
});

var aSet$5 = aSet$7;
var SetHelpers$2 = setHelpers;
var size$3 = setSize;
var getSetRecord$5 = getSetRecord$7;
var iterateSet$1 = setIterate$1;
var iterateSimple$4 = iterateSimple$7;
var Set$2 = SetHelpers$2.Set;
var add$2 = SetHelpers$2.add;
var has$3 = SetHelpers$2.has;

// `Set.prototype.intersection` method
// https://github.com/tc39/proposal-set-methods
var setIntersection = function intersection(other) {
  var O = aSet$5(this);
  var otherRec = getSetRecord$5(other);
  var result = new Set$2();
  if (size$3(O) > otherRec.size) {
    iterateSimple$4(otherRec.getIterator(), function (e) {
      if (has$3(O, e)) add$2(result, e);
    });
  } else {
    iterateSet$1(O, function (e) {
      if (otherRec.includes(e)) add$2(result, e);
    });
  }
  return result;
};

var $$U = _export;
var fails$o = fails$1t;
var intersection = setIntersection;
var setMethodAcceptSetLike$5 = setMethodAcceptSetLike$7;
var INCORRECT = !setMethodAcceptSetLike$5('intersection') || fails$o(function () {
  // eslint-disable-next-line es/no-array-from, es/no-set -- testing
  return String(Array.from(new Set([1, 2, 3]).intersection(new Set([3, 2])))) !== '3,2';
});

// `Set.prototype.intersection` method
// https://github.com/tc39/proposal-set-methods
$$U({
  target: 'Set',
  proto: true,
  real: true,
  forced: INCORRECT
}, {
  intersection: intersection
});

var aSet$4 = aSet$7;
var has$2 = setHelpers.has;
var size$2 = setSize;
var getSetRecord$4 = getSetRecord$7;
var iterateSet = setIterate$1;
var iterateSimple$3 = iterateSimple$7;
var iteratorClose$1 = iteratorClose$4;

// `Set.prototype.isDisjointFrom` method
// https://tc39.github.io/proposal-set-methods/#Set.prototype.isDisjointFrom
var setIsDisjointFrom = function isDisjointFrom(other) {
  var O = aSet$4(this);
  var otherRec = getSetRecord$4(other);
  if (size$2(O) <= otherRec.size) return iterateSet(O, function (e) {
    if (otherRec.includes(e)) return false;
  }, true) !== false;
  var iterator = otherRec.getIterator();
  return iterateSimple$3(iterator, function (e) {
    if (has$2(O, e)) return iteratorClose$1(iterator, 'normal', false);
  }) !== false;
};

var $$T = _export;
var isDisjointFrom = setIsDisjointFrom;
var setMethodAcceptSetLike$4 = setMethodAcceptSetLike$7;

// `Set.prototype.isDisjointFrom` method
// https://github.com/tc39/proposal-set-methods
$$T({
  target: 'Set',
  proto: true,
  real: true,
  forced: !setMethodAcceptSetLike$4('isDisjointFrom')
}, {
  isDisjointFrom: isDisjointFrom
});

var aSet$3 = aSet$7;
var size$1 = setSize;
var iterate$2 = setIterate$1;
var getSetRecord$3 = getSetRecord$7;

// `Set.prototype.isSubsetOf` method
// https://tc39.github.io/proposal-set-methods/#Set.prototype.isSubsetOf
var setIsSubsetOf = function isSubsetOf(other) {
  var O = aSet$3(this);
  var otherRec = getSetRecord$3(other);
  if (size$1(O) > otherRec.size) return false;
  return iterate$2(O, function (e) {
    if (!otherRec.includes(e)) return false;
  }, true) !== false;
};

var $$S = _export;
var isSubsetOf = setIsSubsetOf;
var setMethodAcceptSetLike$3 = setMethodAcceptSetLike$7;

// `Set.prototype.isSubsetOf` method
// https://github.com/tc39/proposal-set-methods
$$S({
  target: 'Set',
  proto: true,
  real: true,
  forced: !setMethodAcceptSetLike$3('isSubsetOf')
}, {
  isSubsetOf: isSubsetOf
});

var aSet$2 = aSet$7;
var has$1 = setHelpers.has;
var size = setSize;
var getSetRecord$2 = getSetRecord$7;
var iterateSimple$2 = iterateSimple$7;
var iteratorClose = iteratorClose$4;

// `Set.prototype.isSupersetOf` method
// https://tc39.github.io/proposal-set-methods/#Set.prototype.isSupersetOf
var setIsSupersetOf = function isSupersetOf(other) {
  var O = aSet$2(this);
  var otherRec = getSetRecord$2(other);
  if (size(O) < otherRec.size) return false;
  var iterator = otherRec.getIterator();
  return iterateSimple$2(iterator, function (e) {
    if (!has$1(O, e)) return iteratorClose(iterator, 'normal', false);
  }) !== false;
};

var $$R = _export;
var isSupersetOf = setIsSupersetOf;
var setMethodAcceptSetLike$2 = setMethodAcceptSetLike$7;

// `Set.prototype.isSupersetOf` method
// https://github.com/tc39/proposal-set-methods
$$R({
  target: 'Set',
  proto: true,
  real: true,
  forced: !setMethodAcceptSetLike$2('isSupersetOf')
}, {
  isSupersetOf: isSupersetOf
});

var aSet$1 = aSet$7;
var SetHelpers$1 = setHelpers;
var clone$1 = setClone;
var getSetRecord$1 = getSetRecord$7;
var iterateSimple$1 = iterateSimple$7;
var add$1 = SetHelpers$1.add;
var has = SetHelpers$1.has;
var remove = SetHelpers$1.remove;

// `Set.prototype.symmetricDifference` method
// https://github.com/tc39/proposal-set-methods
var setSymmetricDifference = function symmetricDifference(other) {
  var O = aSet$1(this);
  var keysIter = getSetRecord$1(other).getIterator();
  var result = clone$1(O);
  iterateSimple$1(keysIter, function (e) {
    if (has(O, e)) remove(result, e);else add$1(result, e);
  });
  return result;
};

var $$Q = _export;
var symmetricDifference = setSymmetricDifference;
var setMethodAcceptSetLike$1 = setMethodAcceptSetLike$7;

// `Set.prototype.symmetricDifference` method
// https://github.com/tc39/proposal-set-methods
$$Q({
  target: 'Set',
  proto: true,
  real: true,
  forced: !setMethodAcceptSetLike$1('symmetricDifference')
}, {
  symmetricDifference: symmetricDifference
});

var aSet = aSet$7;
var add = setHelpers.add;
var clone = setClone;
var getSetRecord = getSetRecord$7;
var iterateSimple = iterateSimple$7;

// `Set.prototype.union` method
// https://github.com/tc39/proposal-set-methods
var setUnion = function union(other) {
  var O = aSet(this);
  var keysIter = getSetRecord(other).getIterator();
  var result = clone(O);
  iterateSimple(keysIter, function (it) {
    add(result, it);
  });
  return result;
};

var $$P = _export;
var union = setUnion;
var setMethodAcceptSetLike = setMethodAcceptSetLike$7;

// `Set.prototype.union` method
// https://github.com/tc39/proposal-set-methods
$$P({
  target: 'Set',
  proto: true,
  real: true,
  forced: !setMethodAcceptSetLike('union')
}, {
  union: union
});

var $$O = _export;
var uncurryThis$y = functionUncurryThis;
var requireObjectCoercible$e = requireObjectCoercible$o;
var toIntegerOrInfinity$6 = toIntegerOrInfinity$m;
var toString$n = toString$D;
var fails$n = fails$1t;
var charAt$a = uncurryThis$y(''.charAt);
var FORCED$4 = fails$n(function () {
  // eslint-disable-next-line es/no-array-string-prototype-at -- safe
  return '𠮷'.at(-2) !== "\uD842";
});

// `String.prototype.at` method
// https://tc39.es/ecma262/#sec-string.prototype.at
$$O({
  target: 'String',
  proto: true,
  forced: FORCED$4
}, {
  at: function at(index) {
    var S = toString$n(requireObjectCoercible$e(this));
    var len = S.length;
    var relativeIndex = toIntegerOrInfinity$6(index);
    var k = relativeIndex >= 0 ? relativeIndex : len + relativeIndex;
    return k < 0 || k >= len ? undefined : charAt$a(S, k);
  }
});

var uncurryThis$x = functionUncurryThis;
var toIntegerOrInfinity$5 = toIntegerOrInfinity$m;
var toString$m = toString$D;
var requireObjectCoercible$d = requireObjectCoercible$o;
var charAt$9 = uncurryThis$x(''.charAt);
var charCodeAt$4 = uncurryThis$x(''.charCodeAt);
var stringSlice$9 = uncurryThis$x(''.slice);
var createMethod = function createMethod(CONVERT_TO_STRING) {
  return function ($this, pos) {
    var S = toString$m(requireObjectCoercible$d($this));
    var position = toIntegerOrInfinity$5(pos);
    var size = S.length;
    var first, second;
    if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;
    first = charCodeAt$4(S, position);
    return first < 0xD800 || first > 0xDBFF || position + 1 === size || (second = charCodeAt$4(S, position + 1)) < 0xDC00 || second > 0xDFFF ? CONVERT_TO_STRING ? charAt$9(S, position) : first : CONVERT_TO_STRING ? stringSlice$9(S, position, position + 2) : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;
  };
};
var stringMultibyte = {
  // `String.prototype.codePointAt` method
  // https://tc39.es/ecma262/#sec-string.prototype.codepointat
  codeAt: createMethod(false),
  // `String.prototype.at` method
  // https://github.com/mathiasbynens/String.prototype.at
  charAt: createMethod(true)
};

var $$N = _export;
var codeAt$1 = stringMultibyte.codeAt;

// `String.prototype.codePointAt` method
// https://tc39.es/ecma262/#sec-string.prototype.codepointat
$$N({
  target: 'String',
  proto: true
}, {
  codePointAt: function codePointAt(pos) {
    return codeAt$1(this, pos);
  }
});

var isRegExp$2 = isRegexp;
var $TypeError$5 = TypeError;
var notARegexp = function notARegexp(it) {
  if (isRegExp$2(it)) {
    throw new $TypeError$5("The method doesn't accept regular expressions");
  }
  return it;
};

var wellKnownSymbol$8 = wellKnownSymbol$z;
var MATCH = wellKnownSymbol$8('match');
var correctIsRegexpLogic = function correctIsRegexpLogic(METHOD_NAME) {
  var regexp = /./;
  try {
    '/./'[METHOD_NAME](regexp);
  } catch (error1) {
    try {
      regexp[MATCH] = false;
      return '/./'[METHOD_NAME](regexp);
    } catch (error2) {/* empty */}
  }
  return false;
};

var $$M = _export;
var uncurryThis$w = functionUncurryThisClause;
var getOwnPropertyDescriptor$1 = objectGetOwnPropertyDescriptor.f;
var toLength$7 = toLength$d;
var toString$l = toString$D;
var notARegExp$2 = notARegexp;
var requireObjectCoercible$c = requireObjectCoercible$o;
var correctIsRegExpLogic$2 = correctIsRegexpLogic;
var slice$1 = uncurryThis$w(''.slice);
var min$4 = Math.min;
var CORRECT_IS_REGEXP_LOGIC$1 = correctIsRegExpLogic$2('endsWith');
// https://github.com/zloirock/core-js/pull/702
var MDN_POLYFILL_BUG$1 = !CORRECT_IS_REGEXP_LOGIC$1 && !!function () {
  var descriptor = getOwnPropertyDescriptor$1(String.prototype, 'endsWith');
  return descriptor && !descriptor.writable;
}();

// `String.prototype.endsWith` method
// https://tc39.es/ecma262/#sec-string.prototype.endswith
$$M({
  target: 'String',
  proto: true,
  forced: !MDN_POLYFILL_BUG$1 && !CORRECT_IS_REGEXP_LOGIC$1
}, {
  endsWith: function endsWith(searchString /* , endPosition = @length */) {
    var that = toString$l(requireObjectCoercible$c(this));
    notARegExp$2(searchString);
    var endPosition = arguments.length > 1 ? arguments[1] : undefined;
    var len = that.length;
    var end = endPosition === undefined ? len : min$4(toLength$7(endPosition), len);
    var search = toString$l(searchString);
    return slice$1(that, end - search.length, end) === search;
  }
});

var $$L = _export;
var uncurryThis$v = functionUncurryThis;
var toAbsoluteIndex$1 = toAbsoluteIndex$9;
var $RangeError$3 = RangeError;
var fromCharCode$3 = String.fromCharCode;
// eslint-disable-next-line es/no-string-fromcodepoint -- required for testing
var $fromCodePoint = String.fromCodePoint;
var join$6 = uncurryThis$v([].join);

// length should be 1, old FF problem
var INCORRECT_LENGTH = !!$fromCodePoint && $fromCodePoint.length !== 1;

// `String.fromCodePoint` method
// https://tc39.es/ecma262/#sec-string.fromcodepoint
$$L({
  target: 'String',
  stat: true,
  arity: 1,
  forced: INCORRECT_LENGTH
}, {
  // eslint-disable-next-line no-unused-vars -- required for `.length`
  fromCodePoint: function fromCodePoint(x) {
    var elements = [];
    var length = arguments.length;
    var i = 0;
    var code;
    while (length > i) {
      code = +arguments[i++];
      if (toAbsoluteIndex$1(code, 0x10FFFF) !== code) throw new $RangeError$3(code + ' is not a valid code point');
      elements[i] = code < 0x10000 ? fromCharCode$3(code) : fromCharCode$3(((code -= 0x10000) >> 10) + 0xD800, code % 0x400 + 0xDC00);
    }
    return join$6(elements, '');
  }
});

var $$K = _export;
var uncurryThis$u = functionUncurryThis;
var notARegExp$1 = notARegexp;
var requireObjectCoercible$b = requireObjectCoercible$o;
var toString$k = toString$D;
var correctIsRegExpLogic$1 = correctIsRegexpLogic;
var stringIndexOf$2 = uncurryThis$u(''.indexOf);

// `String.prototype.includes` method
// https://tc39.es/ecma262/#sec-string.prototype.includes
$$K({
  target: 'String',
  proto: true,
  forced: !correctIsRegExpLogic$1('includes')
}, {
  includes: function includes(searchString /* , position = 0 */) {
    return !!~stringIndexOf$2(toString$k(requireObjectCoercible$b(this)), toString$k(notARegExp$1(searchString)), arguments.length > 1 ? arguments[1] : undefined);
  }
});

var $$J = _export;
var uncurryThis$t = functionUncurryThis;
var requireObjectCoercible$a = requireObjectCoercible$o;
var toString$j = toString$D;
var charCodeAt$3 = uncurryThis$t(''.charCodeAt);

// `String.prototype.isWellFormed` method
// https://github.com/tc39/proposal-is-usv-string
$$J({
  target: 'String',
  proto: true
}, {
  isWellFormed: function isWellFormed() {
    var S = toString$j(requireObjectCoercible$a(this));
    var length = S.length;
    for (var i = 0; i < length; i++) {
      var charCode = charCodeAt$3(S, i);
      // single UTF-16 code unit
      if ((charCode & 0xF800) !== 0xD800) continue;
      // unpaired surrogate
      if (charCode >= 0xDC00 || ++i >= length || (charCodeAt$3(S, i) & 0xFC00) !== 0xDC00) return false;
    }
    return true;
  }
});

var charAt$8 = stringMultibyte.charAt;
var toString$i = toString$D;
var InternalStateModule$6 = internalState;
var defineIterator = iteratorDefine;
var createIterResultObject$2 = createIterResultObject$5;
var STRING_ITERATOR = 'String Iterator';
var setInternalState$6 = InternalStateModule$6.set;
var getInternalState$3 = InternalStateModule$6.getterFor(STRING_ITERATOR);

// `String.prototype[@@iterator]` method
// https://tc39.es/ecma262/#sec-string.prototype-@@iterator
defineIterator(String, 'String', function (iterated) {
  setInternalState$6(this, {
    type: STRING_ITERATOR,
    string: toString$i(iterated),
    index: 0
  });
  // `%StringIteratorPrototype%.next` method
  // https://tc39.es/ecma262/#sec-%stringiteratorprototype%.next
}, function next() {
  var state = getInternalState$3(this);
  var string = state.string;
  var index = state.index;
  var point;
  if (index >= string.length) return createIterResultObject$2(undefined, true);
  point = charAt$8(string, index);
  state.index += point.length;
  return createIterResultObject$2(point, false);
});

// TODO: Remove from `core-js@4` since it's moved to entry points

var call$g = functionCall;
var defineBuiltIn$6 = defineBuiltIn$o;
var regexpExec$1 = regexpExec$2;
var fails$m = fails$1t;
var wellKnownSymbol$7 = wellKnownSymbol$z;
var createNonEnumerableProperty$4 = createNonEnumerableProperty$f;
var SPECIES = wellKnownSymbol$7('species');
var RegExpPrototype$1 = RegExp.prototype;
var fixRegexpWellKnownSymbolLogic = function fixRegexpWellKnownSymbolLogic(KEY, exec, FORCED, SHAM) {
  var SYMBOL = wellKnownSymbol$7(KEY);
  var DELEGATES_TO_SYMBOL = !fails$m(function () {
    // String methods call symbol-named RegExp methods
    var O = {};
    O[SYMBOL] = function () {
      return 7;
    };
    return ''[KEY](O) !== 7;
  });
  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL && !fails$m(function () {
    // Symbol-named RegExp methods call .exec
    var execCalled = false;
    var re = /a/;
    if (KEY === 'split') {
      // We can't use real regex here since it causes deoptimization
      // and serious performance degradation in V8
      // https://github.com/zloirock/core-js/issues/306
      re = {};
      // RegExp[@@split] doesn't call the regex's exec method, but first creates
      // a new one. We need to return the patched regex when creating the new one.
      re.constructor = {};
      re.constructor[SPECIES] = function () {
        return re;
      };
      re.flags = '';
      re[SYMBOL] = /./[SYMBOL];
    }
    re.exec = function () {
      execCalled = true;
      return null;
    };
    re[SYMBOL]('');
    return !execCalled;
  });
  if (!DELEGATES_TO_SYMBOL || !DELEGATES_TO_EXEC || FORCED) {
    var nativeRegExpMethod = /./[SYMBOL];
    var methods = exec(SYMBOL, ''[KEY], function (nativeMethod, regexp, str, arg2, forceStringMethod) {
      var $exec = regexp.exec;
      if ($exec === regexpExec$1 || $exec === RegExpPrototype$1.exec) {
        if (DELEGATES_TO_SYMBOL && !forceStringMethod) {
          // The native String method already delegates to @@method (this
          // polyfilled function), leasing to infinite recursion.
          // We avoid it by directly calling the native @@method method.
          return {
            done: true,
            value: call$g(nativeRegExpMethod, regexp, str, arg2)
          };
        }
        return {
          done: true,
          value: call$g(nativeMethod, str, regexp, arg2)
        };
      }
      return {
        done: false
      };
    });
    defineBuiltIn$6(String.prototype, KEY, methods[0]);
    defineBuiltIn$6(RegExpPrototype$1, SYMBOL, methods[1]);
  }
  if (SHAM) createNonEnumerableProperty$4(RegExpPrototype$1[SYMBOL], 'sham', true);
};

var charAt$7 = stringMultibyte.charAt;

// `AdvanceStringIndex` abstract operation
// https://tc39.es/ecma262/#sec-advancestringindex
var advanceStringIndex$4 = function advanceStringIndex(S, index, unicode) {
  return index + (unicode ? charAt$7(S, index).length : 1);
};

var call$f = functionCall;
var anObject$9 = anObject$D;
var isCallable$5 = isCallable$y;
var classof$6 = classofRaw$2;
var regexpExec = regexpExec$2;
var $TypeError$4 = TypeError;

// `RegExpExec` abstract operation
// https://tc39.es/ecma262/#sec-regexpexec
var regexpExecAbstract = function regexpExecAbstract(R, S) {
  var exec = R.exec;
  if (isCallable$5(exec)) {
    var result = call$f(exec, R, S);
    if (result !== null) anObject$9(result);
    return result;
  }
  if (classof$6(R) === 'RegExp') return call$f(regexpExec, R, S);
  throw new $TypeError$4('RegExp#exec called on incompatible receiver');
};

var call$e = functionCall;
var fixRegExpWellKnownSymbolLogic$3 = fixRegexpWellKnownSymbolLogic;
var anObject$8 = anObject$D;
var isNullOrUndefined$7 = isNullOrUndefined$e;
var toLength$6 = toLength$d;
var toString$h = toString$D;
var requireObjectCoercible$9 = requireObjectCoercible$o;
var getMethod$5 = getMethod$9;
var advanceStringIndex$3 = advanceStringIndex$4;
var regExpExec$4 = regexpExecAbstract;

// @@match logic
fixRegExpWellKnownSymbolLogic$3('match', function (MATCH, nativeMatch, maybeCallNative) {
  return [
  // `String.prototype.match` method
  // https://tc39.es/ecma262/#sec-string.prototype.match
  function match(regexp) {
    var O = requireObjectCoercible$9(this);
    var matcher = isNullOrUndefined$7(regexp) ? undefined : getMethod$5(regexp, MATCH);
    return matcher ? call$e(matcher, regexp, O) : new RegExp(regexp)[MATCH](toString$h(O));
  },
  // `RegExp.prototype[@@match]` method
  // https://tc39.es/ecma262/#sec-regexp.prototype-@@match
  function (string) {
    var rx = anObject$8(this);
    var S = toString$h(string);
    var res = maybeCallNative(nativeMatch, rx, S);
    if (res.done) return res.value;
    if (!rx.global) return regExpExec$4(rx, S);
    var fullUnicode = rx.unicode;
    rx.lastIndex = 0;
    var A = [];
    var n = 0;
    var result;
    while ((result = regExpExec$4(rx, S)) !== null) {
      var matchStr = toString$h(result[0]);
      A[n] = matchStr;
      if (matchStr === '') rx.lastIndex = advanceStringIndex$3(S, toLength$6(rx.lastIndex), fullUnicode);
      n++;
    }
    return n === 0 ? null : A;
  }];
});

/* eslint-disable es/no-string-prototype-matchall -- safe */
var $$I = _export;
var call$d = functionCall;
var uncurryThis$s = functionUncurryThisClause;
var createIteratorConstructor$1 = iteratorCreateConstructor;
var createIterResultObject$1 = createIterResultObject$5;
var requireObjectCoercible$8 = requireObjectCoercible$o;
var toLength$5 = toLength$d;
var toString$g = toString$D;
var anObject$7 = anObject$D;
var isNullOrUndefined$6 = isNullOrUndefined$e;
var classof$5 = classofRaw$2;
var isRegExp$1 = isRegexp;
var getRegExpFlags$2 = regexpGetFlags;
var getMethod$4 = getMethod$9;
var defineBuiltIn$5 = defineBuiltIn$o;
var fails$l = fails$1t;
var wellKnownSymbol$6 = wellKnownSymbol$z;
var speciesConstructor$2 = speciesConstructor$6;
var advanceStringIndex$2 = advanceStringIndex$4;
var regExpExec$3 = regexpExecAbstract;
var InternalStateModule$5 = internalState;
var IS_PURE$1 = isPure;
var MATCH_ALL = wellKnownSymbol$6('matchAll');
var REGEXP_STRING = 'RegExp String';
var REGEXP_STRING_ITERATOR = REGEXP_STRING + ' Iterator';
var setInternalState$5 = InternalStateModule$5.set;
var getInternalState$2 = InternalStateModule$5.getterFor(REGEXP_STRING_ITERATOR);
var RegExpPrototype = RegExp.prototype;
var $TypeError$3 = TypeError;
var stringIndexOf$1 = uncurryThis$s(''.indexOf);
var nativeMatchAll = uncurryThis$s(''.matchAll);
var WORKS_WITH_NON_GLOBAL_REGEX = !!nativeMatchAll && !fails$l(function () {
  nativeMatchAll('a', /./);
});
var $RegExpStringIterator = createIteratorConstructor$1(function RegExpStringIterator(regexp, string, $global, fullUnicode) {
  setInternalState$5(this, {
    type: REGEXP_STRING_ITERATOR,
    regexp: regexp,
    string: string,
    global: $global,
    unicode: fullUnicode,
    done: false
  });
}, REGEXP_STRING, function next() {
  var state = getInternalState$2(this);
  if (state.done) return createIterResultObject$1(undefined, true);
  var R = state.regexp;
  var S = state.string;
  var match = regExpExec$3(R, S);
  if (match === null) {
    state.done = true;
    return createIterResultObject$1(undefined, true);
  }
  if (state.global) {
    if (toString$g(match[0]) === '') R.lastIndex = advanceStringIndex$2(S, toLength$5(R.lastIndex), state.unicode);
    return createIterResultObject$1(match, false);
  }
  state.done = true;
  return createIterResultObject$1(match, false);
});
var $matchAll = function $matchAll(string) {
  var R = anObject$7(this);
  var S = toString$g(string);
  var C = speciesConstructor$2(R, RegExp);
  var flags = toString$g(getRegExpFlags$2(R));
  var matcher, $global, fullUnicode;
  matcher = new C(C === RegExp ? R.source : R, flags);
  $global = !!~stringIndexOf$1(flags, 'g');
  fullUnicode = !!~stringIndexOf$1(flags, 'u');
  matcher.lastIndex = toLength$5(R.lastIndex);
  return new $RegExpStringIterator(matcher, S, $global, fullUnicode);
};

// `String.prototype.matchAll` method
// https://tc39.es/ecma262/#sec-string.prototype.matchall
$$I({
  target: 'String',
  proto: true,
  forced: WORKS_WITH_NON_GLOBAL_REGEX
}, {
  matchAll: function matchAll(regexp) {
    var O = requireObjectCoercible$8(this);
    var flags, S, matcher, rx;
    if (!isNullOrUndefined$6(regexp)) {
      if (isRegExp$1(regexp)) {
        flags = toString$g(requireObjectCoercible$8(getRegExpFlags$2(regexp)));
        if (!~stringIndexOf$1(flags, 'g')) throw new $TypeError$3('`.matchAll` does not allow non-global regexes');
      }
      if (WORKS_WITH_NON_GLOBAL_REGEX) return nativeMatchAll(O, regexp);
      matcher = getMethod$4(regexp, MATCH_ALL);
      if (matcher === undefined && IS_PURE$1 && classof$5(regexp) === 'RegExp') matcher = $matchAll;
      if (matcher) return call$d(matcher, regexp, O);
    } else if (WORKS_WITH_NON_GLOBAL_REGEX) return nativeMatchAll(O, regexp);
    S = toString$g(O);
    rx = new RegExp(regexp, 'g');
    return rx[MATCH_ALL](S);
  }
});
MATCH_ALL in RegExpPrototype || defineBuiltIn$5(RegExpPrototype, MATCH_ALL, $matchAll);

// https://github.com/zloirock/core-js/issues/280
var userAgent = engineUserAgent;
var stringPadWebkitBug = /Version\/10(?:\.\d+){1,2}(?: [\w./]+)?(?: Mobile\/\w+)? Safari\//.test(userAgent);

var $$H = _export;
var $padEnd = stringPad.end;
var WEBKIT_BUG$1 = stringPadWebkitBug;

// `String.prototype.padEnd` method
// https://tc39.es/ecma262/#sec-string.prototype.padend
$$H({
  target: 'String',
  proto: true,
  forced: WEBKIT_BUG$1
}, {
  padEnd: function padEnd(maxLength /* , fillString = ' ' */) {
    return $padEnd(this, maxLength, arguments.length > 1 ? arguments[1] : undefined);
  }
});

var $$G = _export;
var $padStart = stringPad.start;
var WEBKIT_BUG = stringPadWebkitBug;

// `String.prototype.padStart` method
// https://tc39.es/ecma262/#sec-string.prototype.padstart
$$G({
  target: 'String',
  proto: true,
  forced: WEBKIT_BUG
}, {
  padStart: function padStart(maxLength /* , fillString = ' ' */) {
    return $padStart(this, maxLength, arguments.length > 1 ? arguments[1] : undefined);
  }
});

var $$F = _export;
var uncurryThis$r = functionUncurryThis;
var toIndexedObject$1 = toIndexedObject$j;
var toObject$2 = toObject$t;
var toString$f = toString$D;
var lengthOfArrayLike$4 = lengthOfArrayLike$s;
var push$7 = uncurryThis$r([].push);
var join$5 = uncurryThis$r([].join);

// `String.raw` method
// https://tc39.es/ecma262/#sec-string.raw
$$F({
  target: 'String',
  stat: true
}, {
  raw: function raw(template) {
    var rawTemplate = toIndexedObject$1(toObject$2(template).raw);
    var literalSegments = lengthOfArrayLike$4(rawTemplate);
    if (!literalSegments) return '';
    var argumentsLength = arguments.length;
    var elements = [];
    var i = 0;
    while (true) {
      push$7(elements, toString$f(rawTemplate[i++]));
      if (i === literalSegments) return join$5(elements, '');
      if (i < argumentsLength) push$7(elements, toString$f(arguments[i]));
    }
  }
});

var $$E = _export;
var repeat = stringRepeat;

// `String.prototype.repeat` method
// https://tc39.es/ecma262/#sec-string.prototype.repeat
$$E({
  target: 'String',
  proto: true
}, {
  repeat: repeat
});

var uncurryThis$q = functionUncurryThis;
var toObject$1 = toObject$t;
var floor$3 = Math.floor;
var charAt$6 = uncurryThis$q(''.charAt);
var replace$5 = uncurryThis$q(''.replace);
var stringSlice$8 = uncurryThis$q(''.slice);
// eslint-disable-next-line redos/no-vulnerable -- safe
var SUBSTITUTION_SYMBOLS = /\$([$&'`]|\d{1,2}|<[^>]*>)/g;
var SUBSTITUTION_SYMBOLS_NO_NAMED = /\$([$&'`]|\d{1,2})/g;

// `GetSubstitution` abstract operation
// https://tc39.es/ecma262/#sec-getsubstitution
var getSubstitution$2 = function getSubstitution(matched, str, position, captures, namedCaptures, replacement) {
  var tailPos = position + matched.length;
  var m = captures.length;
  var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;
  if (namedCaptures !== undefined) {
    namedCaptures = toObject$1(namedCaptures);
    symbols = SUBSTITUTION_SYMBOLS;
  }
  return replace$5(replacement, symbols, function (match, ch) {
    var capture;
    switch (charAt$6(ch, 0)) {
      case '$':
        return '$';
      case '&':
        return matched;
      case '`':
        return stringSlice$8(str, 0, position);
      case "'":
        return stringSlice$8(str, tailPos);
      case '<':
        capture = namedCaptures[stringSlice$8(ch, 1, -1)];
        break;
      default:
        // \d\d?
        var n = +ch;
        if (n === 0) return match;
        if (n > m) {
          var f = floor$3(n / 10);
          if (f === 0) return match;
          if (f <= m) return captures[f - 1] === undefined ? charAt$6(ch, 1) : captures[f - 1] + charAt$6(ch, 1);
          return match;
        }
        capture = captures[n - 1];
    }
    return capture === undefined ? '' : capture;
  });
};

var apply$3 = functionApply$1;
var call$c = functionCall;
var uncurryThis$p = functionUncurryThis;
var fixRegExpWellKnownSymbolLogic$2 = fixRegexpWellKnownSymbolLogic;
var fails$k = fails$1t;
var anObject$6 = anObject$D;
var isCallable$4 = isCallable$y;
var isNullOrUndefined$5 = isNullOrUndefined$e;
var toIntegerOrInfinity$4 = toIntegerOrInfinity$m;
var toLength$4 = toLength$d;
var toString$e = toString$D;
var requireObjectCoercible$7 = requireObjectCoercible$o;
var advanceStringIndex$1 = advanceStringIndex$4;
var getMethod$3 = getMethod$9;
var getSubstitution$1 = getSubstitution$2;
var regExpExec$2 = regexpExecAbstract;
var wellKnownSymbol$5 = wellKnownSymbol$z;
var REPLACE$1 = wellKnownSymbol$5('replace');
var max$2 = Math.max;
var min$3 = Math.min;
var concat = uncurryThis$p([].concat);
var push$6 = uncurryThis$p([].push);
var stringIndexOf = uncurryThis$p(''.indexOf);
var stringSlice$7 = uncurryThis$p(''.slice);
var maybeToString = function maybeToString(it) {
  return it === undefined ? it : String(it);
};

// IE <= 11 replaces $0 with the whole match, as if it was $&
// https://stackoverflow.com/questions/6024666/getting-ie-to-replace-a-regex-with-the-literal-string-0
var REPLACE_KEEPS_$0 = function () {
  // eslint-disable-next-line regexp/prefer-escape-replacement-dollar-char -- required for testing
  return 'a'.replace(/./, '$0') === '$0';
}();

// Safari <= 13.0.3(?) substitutes nth capture where n>m with an empty string
var REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = function () {
  if (/./[REPLACE$1]) {
    return /./[REPLACE$1]('a', '$0') === '';
  }
  return false;
}();
var REPLACE_SUPPORTS_NAMED_GROUPS = !fails$k(function () {
  var re = /./;
  re.exec = function () {
    var result = [];
    result.groups = {
      a: '7'
    };
    return result;
  };
  // eslint-disable-next-line regexp/no-useless-dollar-replacements -- false positive
  return ''.replace(re, '$<a>') !== '7';
});

// @@replace logic
fixRegExpWellKnownSymbolLogic$2('replace', function (_, nativeReplace, maybeCallNative) {
  var UNSAFE_SUBSTITUTE = REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE ? '$' : '$0';
  return [
  // `String.prototype.replace` method
  // https://tc39.es/ecma262/#sec-string.prototype.replace
  function replace(searchValue, replaceValue) {
    var O = requireObjectCoercible$7(this);
    var replacer = isNullOrUndefined$5(searchValue) ? undefined : getMethod$3(searchValue, REPLACE$1);
    return replacer ? call$c(replacer, searchValue, O, replaceValue) : call$c(nativeReplace, toString$e(O), searchValue, replaceValue);
  },
  // `RegExp.prototype[@@replace]` method
  // https://tc39.es/ecma262/#sec-regexp.prototype-@@replace
  function (string, replaceValue) {
    var rx = anObject$6(this);
    var S = toString$e(string);
    if (typeof replaceValue == 'string' && stringIndexOf(replaceValue, UNSAFE_SUBSTITUTE) === -1 && stringIndexOf(replaceValue, '$<') === -1) {
      var res = maybeCallNative(nativeReplace, rx, S, replaceValue);
      if (res.done) return res.value;
    }
    var functionalReplace = isCallable$4(replaceValue);
    if (!functionalReplace) replaceValue = toString$e(replaceValue);
    var global = rx.global;
    var fullUnicode;
    if (global) {
      fullUnicode = rx.unicode;
      rx.lastIndex = 0;
    }
    var results = [];
    var result;
    while (true) {
      result = regExpExec$2(rx, S);
      if (result === null) break;
      push$6(results, result);
      if (!global) break;
      var matchStr = toString$e(result[0]);
      if (matchStr === '') rx.lastIndex = advanceStringIndex$1(S, toLength$4(rx.lastIndex), fullUnicode);
    }
    var accumulatedResult = '';
    var nextSourcePosition = 0;
    for (var i = 0; i < results.length; i++) {
      result = results[i];
      var matched = toString$e(result[0]);
      var position = max$2(min$3(toIntegerOrInfinity$4(result.index), S.length), 0);
      var captures = [];
      var replacement;
      // NOTE: This is equivalent to
      //   captures = result.slice(1).map(maybeToString)
      // but for some reason `nativeSlice.call(result, 1, result.length)` (called in
      // the slice polyfill when slicing native arrays) "doesn't work" in safari 9 and
      // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.
      for (var j = 1; j < result.length; j++) push$6(captures, maybeToString(result[j]));
      var namedCaptures = result.groups;
      if (functionalReplace) {
        var replacerArgs = concat([matched], captures, position, S);
        if (namedCaptures !== undefined) push$6(replacerArgs, namedCaptures);
        replacement = toString$e(apply$3(replaceValue, undefined, replacerArgs));
      } else {
        replacement = getSubstitution$1(matched, S, position, captures, namedCaptures, replaceValue);
      }
      if (position >= nextSourcePosition) {
        accumulatedResult += stringSlice$7(S, nextSourcePosition, position) + replacement;
        nextSourcePosition = position + matched.length;
      }
    }
    return accumulatedResult + stringSlice$7(S, nextSourcePosition);
  }];
}, !REPLACE_SUPPORTS_NAMED_GROUPS || !REPLACE_KEEPS_$0 || REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE);

var $$D = _export;
var call$b = functionCall;
var uncurryThis$o = functionUncurryThis;
var requireObjectCoercible$6 = requireObjectCoercible$o;
var isCallable$3 = isCallable$y;
var isNullOrUndefined$4 = isNullOrUndefined$e;
var isRegExp = isRegexp;
var toString$d = toString$D;
var getMethod$2 = getMethod$9;
var getRegExpFlags$1 = regexpGetFlags;
var getSubstitution = getSubstitution$2;
var wellKnownSymbol$4 = wellKnownSymbol$z;
var REPLACE = wellKnownSymbol$4('replace');
var $TypeError$2 = TypeError;
var indexOf = uncurryThis$o(''.indexOf);
uncurryThis$o(''.replace);
var stringSlice$6 = uncurryThis$o(''.slice);
var max$1 = Math.max;

// `String.prototype.replaceAll` method
// https://tc39.es/ecma262/#sec-string.prototype.replaceall
$$D({
  target: 'String',
  proto: true
}, {
  replaceAll: function replaceAll(searchValue, replaceValue) {
    var O = requireObjectCoercible$6(this);
    var IS_REG_EXP, flags, replacer, string, searchString, functionalReplace, searchLength, advanceBy, replacement;
    var position = 0;
    var endOfLastMatch = 0;
    var result = '';
    if (!isNullOrUndefined$4(searchValue)) {
      IS_REG_EXP = isRegExp(searchValue);
      if (IS_REG_EXP) {
        flags = toString$d(requireObjectCoercible$6(getRegExpFlags$1(searchValue)));
        if (!~indexOf(flags, 'g')) throw new $TypeError$2('`.replaceAll` does not allow non-global regexes');
      }
      replacer = getMethod$2(searchValue, REPLACE);
      if (replacer) {
        return call$b(replacer, searchValue, O, replaceValue);
      }
    }
    string = toString$d(O);
    searchString = toString$d(searchValue);
    functionalReplace = isCallable$3(replaceValue);
    if (!functionalReplace) replaceValue = toString$d(replaceValue);
    searchLength = searchString.length;
    advanceBy = max$1(1, searchLength);
    position = indexOf(string, searchString);
    while (position !== -1) {
      replacement = functionalReplace ? toString$d(replaceValue(searchString, position, string)) : getSubstitution(searchString, string, position, [], undefined, replaceValue);
      result += stringSlice$6(string, endOfLastMatch, position) + replacement;
      endOfLastMatch = position + searchLength;
      position = position + advanceBy > string.length ? -1 : indexOf(string, searchString, position + advanceBy);
    }
    if (endOfLastMatch < string.length) {
      result += stringSlice$6(string, endOfLastMatch);
    }
    return result;
  }
});

var call$a = functionCall;
var fixRegExpWellKnownSymbolLogic$1 = fixRegexpWellKnownSymbolLogic;
var anObject$5 = anObject$D;
var isNullOrUndefined$3 = isNullOrUndefined$e;
var requireObjectCoercible$5 = requireObjectCoercible$o;
var sameValue = sameValue$1;
var toString$c = toString$D;
var getMethod$1 = getMethod$9;
var regExpExec$1 = regexpExecAbstract;

// @@search logic
fixRegExpWellKnownSymbolLogic$1('search', function (SEARCH, nativeSearch, maybeCallNative) {
  return [
  // `String.prototype.search` method
  // https://tc39.es/ecma262/#sec-string.prototype.search
  function search(regexp) {
    var O = requireObjectCoercible$5(this);
    var searcher = isNullOrUndefined$3(regexp) ? undefined : getMethod$1(regexp, SEARCH);
    return searcher ? call$a(searcher, regexp, O) : new RegExp(regexp)[SEARCH](toString$c(O));
  },
  // `RegExp.prototype[@@search]` method
  // https://tc39.es/ecma262/#sec-regexp.prototype-@@search
  function (string) {
    var rx = anObject$5(this);
    var S = toString$c(string);
    var res = maybeCallNative(nativeSearch, rx, S);
    if (res.done) return res.value;
    var previousLastIndex = rx.lastIndex;
    if (!sameValue(previousLastIndex, 0)) rx.lastIndex = 0;
    var result = regExpExec$1(rx, S);
    if (!sameValue(rx.lastIndex, previousLastIndex)) rx.lastIndex = previousLastIndex;
    return result === null ? -1 : result.index;
  }];
});

var call$9 = functionCall;
var uncurryThis$n = functionUncurryThis;
var fixRegExpWellKnownSymbolLogic = fixRegexpWellKnownSymbolLogic;
var anObject$4 = anObject$D;
var isNullOrUndefined$2 = isNullOrUndefined$e;
var requireObjectCoercible$4 = requireObjectCoercible$o;
var speciesConstructor$1 = speciesConstructor$6;
var advanceStringIndex = advanceStringIndex$4;
var toLength$3 = toLength$d;
var toString$b = toString$D;
var getMethod = getMethod$9;
var regExpExec = regexpExecAbstract;
var stickyHelpers = regexpStickyHelpers;
var fails$j = fails$1t;
var UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y;
var MAX_UINT32 = 0xFFFFFFFF;
var min$2 = Math.min;
var push$5 = uncurryThis$n([].push);
var stringSlice$5 = uncurryThis$n(''.slice);

// Chrome 51 has a buggy "split" implementation when RegExp#exec !== nativeExec
// Weex JS has frozen built-in prototypes, so use try / catch wrapper
var SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = !fails$j(function () {
  // eslint-disable-next-line regexp/no-empty-group -- required for testing
  var re = /(?:)/;
  var originalExec = re.exec;
  re.exec = function () {
    return originalExec.apply(this, arguments);
  };
  var result = 'ab'.split(re);
  return result.length !== 2 || result[0] !== 'a' || result[1] !== 'b';
});
var BUGGY = 'abbc'.split(/(b)*/)[1] === 'c' ||
// eslint-disable-next-line regexp/no-empty-group -- required for testing
'test'.split(/(?:)/, -1).length !== 4 || 'ab'.split(/(?:ab)*/).length !== 2 || '.'.split(/(.?)(.?)/).length !== 4 ||
// eslint-disable-next-line regexp/no-empty-capturing-group, regexp/no-empty-group -- required for testing
'.'.split(/()()/).length > 1 || ''.split(/.?/).length;

// @@split logic
fixRegExpWellKnownSymbolLogic('split', function (SPLIT, nativeSplit, maybeCallNative) {
  var internalSplit = '0'.split(undefined, 0).length ? function (separator, limit) {
    return separator === undefined && limit === 0 ? [] : call$9(nativeSplit, this, separator, limit);
  } : nativeSplit;
  return [
  // `String.prototype.split` method
  // https://tc39.es/ecma262/#sec-string.prototype.split
  function split(separator, limit) {
    var O = requireObjectCoercible$4(this);
    var splitter = isNullOrUndefined$2(separator) ? undefined : getMethod(separator, SPLIT);
    return splitter ? call$9(splitter, separator, O, limit) : call$9(internalSplit, toString$b(O), separator, limit);
  },
  // `RegExp.prototype[@@split]` method
  // https://tc39.es/ecma262/#sec-regexp.prototype-@@split
  //
  // NOTE: This cannot be properly polyfilled in engines that don't support
  // the 'y' flag.
  function (string, limit) {
    var rx = anObject$4(this);
    var S = toString$b(string);
    if (!BUGGY) {
      var res = maybeCallNative(internalSplit, rx, S, limit, internalSplit !== nativeSplit);
      if (res.done) return res.value;
    }
    var C = speciesConstructor$1(rx, RegExp);
    var unicodeMatching = rx.unicode;
    var flags = (rx.ignoreCase ? 'i' : '') + (rx.multiline ? 'm' : '') + (rx.unicode ? 'u' : '') + (UNSUPPORTED_Y ? 'g' : 'y');
    // ^(? + rx + ) is needed, in combination with some S slicing, to
    // simulate the 'y' flag.
    var splitter = new C(UNSUPPORTED_Y ? '^(?:' + rx.source + ')' : rx, flags);
    var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;
    if (lim === 0) return [];
    if (S.length === 0) return regExpExec(splitter, S) === null ? [S] : [];
    var p = 0;
    var q = 0;
    var A = [];
    while (q < S.length) {
      splitter.lastIndex = UNSUPPORTED_Y ? 0 : q;
      var z = regExpExec(splitter, UNSUPPORTED_Y ? stringSlice$5(S, q) : S);
      var e;
      if (z === null || (e = min$2(toLength$3(splitter.lastIndex + (UNSUPPORTED_Y ? q : 0)), S.length)) === p) {
        q = advanceStringIndex(S, q, unicodeMatching);
      } else {
        push$5(A, stringSlice$5(S, p, q));
        if (A.length === lim) return A;
        for (var i = 1; i <= z.length - 1; i++) {
          push$5(A, z[i]);
          if (A.length === lim) return A;
        }
        q = p = e;
      }
    }
    push$5(A, stringSlice$5(S, p));
    return A;
  }];
}, BUGGY || !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC, UNSUPPORTED_Y);

var $$C = _export;
var uncurryThis$m = functionUncurryThisClause;
var getOwnPropertyDescriptor = objectGetOwnPropertyDescriptor.f;
var toLength$2 = toLength$d;
var toString$a = toString$D;
var notARegExp = notARegexp;
var requireObjectCoercible$3 = requireObjectCoercible$o;
var correctIsRegExpLogic = correctIsRegexpLogic;
var stringSlice$4 = uncurryThis$m(''.slice);
var min$1 = Math.min;
var CORRECT_IS_REGEXP_LOGIC = correctIsRegExpLogic('startsWith');
// https://github.com/zloirock/core-js/pull/702
var MDN_POLYFILL_BUG = !CORRECT_IS_REGEXP_LOGIC && !!function () {
  var descriptor = getOwnPropertyDescriptor(String.prototype, 'startsWith');
  return descriptor && !descriptor.writable;
}();

// `String.prototype.startsWith` method
// https://tc39.es/ecma262/#sec-string.prototype.startswith
$$C({
  target: 'String',
  proto: true,
  forced: !MDN_POLYFILL_BUG && !CORRECT_IS_REGEXP_LOGIC
}, {
  startsWith: function startsWith(searchString /* , position = 0 */) {
    var that = toString$a(requireObjectCoercible$3(this));
    notARegExp(searchString);
    var index = toLength$2(min$1(arguments.length > 1 ? arguments[1] : undefined, that.length));
    var search = toString$a(searchString);
    return stringSlice$4(that, index, index + search.length) === search;
  }
});

var $$B = _export;
var uncurryThis$l = functionUncurryThis;
var requireObjectCoercible$2 = requireObjectCoercible$o;
var toIntegerOrInfinity$3 = toIntegerOrInfinity$m;
var toString$9 = toString$D;
var stringSlice$3 = uncurryThis$l(''.slice);
var max = Math.max;
var min = Math.min;

// eslint-disable-next-line unicorn/prefer-string-slice -- required for testing
var FORCED$3 = !''.substr || 'ab'.substr(-1) !== 'b';

// `String.prototype.substr` method
// https://tc39.es/ecma262/#sec-string.prototype.substr
$$B({
  target: 'String',
  proto: true,
  forced: FORCED$3
}, {
  substr: function substr(start, length) {
    var that = toString$9(requireObjectCoercible$2(this));
    var size = that.length;
    var intStart = toIntegerOrInfinity$3(start);
    var intLength, intEnd;
    if (intStart === Infinity) intStart = 0;
    if (intStart < 0) intStart = max(size + intStart, 0);
    intLength = length === undefined ? size : toIntegerOrInfinity$3(length);
    if (intLength <= 0 || intLength === Infinity) return '';
    intEnd = min(intStart + intLength, size);
    return intStart >= intEnd ? '' : stringSlice$3(that, intStart, intEnd);
  }
});

var $$A = _export;
var call$8 = functionCall;
var uncurryThis$k = functionUncurryThis;
var requireObjectCoercible$1 = requireObjectCoercible$o;
var toString$8 = toString$D;
var fails$i = fails$1t;
var $Array = Array;
var charAt$5 = uncurryThis$k(''.charAt);
var charCodeAt$2 = uncurryThis$k(''.charCodeAt);
var join$4 = uncurryThis$k([].join);
// eslint-disable-next-line es/no-string-prototype-iswellformed-towellformed -- safe
var $toWellFormed = ''.toWellFormed;
var REPLACEMENT_CHARACTER = "\uFFFD";

// Safari bug
var TO_STRING_CONVERSION_BUG = $toWellFormed && fails$i(function () {
  return call$8($toWellFormed, 1) !== '1';
});

// `String.prototype.toWellFormed` method
// https://github.com/tc39/proposal-is-usv-string
$$A({
  target: 'String',
  proto: true,
  forced: TO_STRING_CONVERSION_BUG
}, {
  toWellFormed: function toWellFormed() {
    var S = toString$8(requireObjectCoercible$1(this));
    if (TO_STRING_CONVERSION_BUG) return call$8($toWellFormed, S);
    var length = S.length;
    var result = $Array(length);
    for (var i = 0; i < length; i++) {
      var charCode = charCodeAt$2(S, i);
      // single UTF-16 code unit
      if ((charCode & 0xF800) !== 0xD800) result[i] = charAt$5(S, i);
      // unpaired surrogate
      else if (charCode >= 0xDC00 || i + 1 >= length || (charCodeAt$2(S, i + 1) & 0xFC00) !== 0xDC00) result[i] = REPLACEMENT_CHARACTER;
      // surrogate pair
      else {
        result[i] = charAt$5(S, i);
        result[++i] = charAt$5(S, i);
      }
    }
    return join$4(result, '');
  }
});

var PROPER_FUNCTION_NAME = functionName.PROPER;
var fails$h = fails$1t;
var whitespaces$1 = whitespaces$5;
var non = "\u200B\x85\u180E";

// check that a method works with the correct list
// of whitespaces and has a correct name
var stringTrimForced = function stringTrimForced(METHOD_NAME) {
  return fails$h(function () {
    return !!whitespaces$1[METHOD_NAME]() || non[METHOD_NAME]() !== non || PROPER_FUNCTION_NAME && whitespaces$1[METHOD_NAME].name !== METHOD_NAME;
  });
};

var $$z = _export;
var $trim = stringTrim.trim;
var forcedStringTrimMethod$2 = stringTrimForced;

// `String.prototype.trim` method
// https://tc39.es/ecma262/#sec-string.prototype.trim
$$z({
  target: 'String',
  proto: true,
  forced: forcedStringTrimMethod$2('trim')
}, {
  trim: function trim() {
    return $trim(this);
  }
});

var $trimEnd = stringTrim.end;
var forcedStringTrimMethod$1 = stringTrimForced;

// `String.prototype.{ trimEnd, trimRight }` method
// https://tc39.es/ecma262/#sec-string.prototype.trimend
// https://tc39.es/ecma262/#String.prototype.trimright
var stringTrimEnd = forcedStringTrimMethod$1('trimEnd') ? function trimEnd() {
  return $trimEnd(this);
  // eslint-disable-next-line es/no-string-prototype-trimstart-trimend -- safe
} : ''.trimEnd;

var $$y = _export;
var trimEnd$1 = stringTrimEnd;

// `String.prototype.trimRight` method
// https://tc39.es/ecma262/#sec-string.prototype.trimend
// eslint-disable-next-line es/no-string-prototype-trimleft-trimright -- safe
$$y({
  target: 'String',
  proto: true,
  name: 'trimEnd',
  forced: ''.trimRight !== trimEnd$1
}, {
  trimRight: trimEnd$1
});

// TODO: Remove this line from `core-js@4`

var $$x = _export;
var trimEnd = stringTrimEnd;

// `String.prototype.trimEnd` method
// https://tc39.es/ecma262/#sec-string.prototype.trimend
// eslint-disable-next-line es/no-string-prototype-trimstart-trimend -- safe
$$x({
  target: 'String',
  proto: true,
  name: 'trimEnd',
  forced: ''.trimEnd !== trimEnd
}, {
  trimEnd: trimEnd
});

var $trimStart = stringTrim.start;
var forcedStringTrimMethod = stringTrimForced;

// `String.prototype.{ trimStart, trimLeft }` method
// https://tc39.es/ecma262/#sec-string.prototype.trimstart
// https://tc39.es/ecma262/#String.prototype.trimleft
var stringTrimStart = forcedStringTrimMethod('trimStart') ? function trimStart() {
  return $trimStart(this);
  // eslint-disable-next-line es/no-string-prototype-trimstart-trimend -- safe
} : ''.trimStart;

var $$w = _export;
var trimStart$1 = stringTrimStart;

// `String.prototype.trimLeft` method
// https://tc39.es/ecma262/#sec-string.prototype.trimleft
// eslint-disable-next-line es/no-string-prototype-trimleft-trimright -- safe
$$w({
  target: 'String',
  proto: true,
  name: 'trimStart',
  forced: ''.trimLeft !== trimStart$1
}, {
  trimLeft: trimStart$1
});

// TODO: Remove this line from `core-js@4`

var $$v = _export;
var trimStart = stringTrimStart;

// `String.prototype.trimStart` method
// https://tc39.es/ecma262/#sec-string.prototype.trimstart
// eslint-disable-next-line es/no-string-prototype-trimstart-trimend -- safe
$$v({
  target: 'String',
  proto: true,
  name: 'trimStart',
  forced: ''.trimStart !== trimStart
}, {
  trimStart: trimStart
});

var uncurryThis$j = functionUncurryThis;
var requireObjectCoercible = requireObjectCoercible$o;
var toString$7 = toString$D;
var quot = /"/g;
var replace$4 = uncurryThis$j(''.replace);

// `CreateHTML` abstract operation
// https://tc39.es/ecma262/#sec-createhtml
var createHtml = function createHtml(string, tag, attribute, value) {
  var S = toString$7(requireObjectCoercible(string));
  var p1 = '<' + tag;
  if (attribute !== '') p1 += ' ' + attribute + '="' + replace$4(toString$7(value), quot, '&quot;') + '"';
  return p1 + '>' + S + '</' + tag + '>';
};

var fails$g = fails$1t;

// check the existence of a method, lowercase
// of a tag and escaping quotes in arguments
var stringHtmlForced = function stringHtmlForced(METHOD_NAME) {
  return fails$g(function () {
    var test = ''[METHOD_NAME]('"');
    return test !== test.toLowerCase() || test.split('"').length > 3;
  });
};

var $$u = _export;
var createHTML$c = createHtml;
var forcedStringHTMLMethod$c = stringHtmlForced;

// `String.prototype.anchor` method
// https://tc39.es/ecma262/#sec-string.prototype.anchor
$$u({
  target: 'String',
  proto: true,
  forced: forcedStringHTMLMethod$c('anchor')
}, {
  anchor: function anchor(name) {
    return createHTML$c(this, 'a', 'name', name);
  }
});

var $$t = _export;
var createHTML$b = createHtml;
var forcedStringHTMLMethod$b = stringHtmlForced;

// `String.prototype.big` method
// https://tc39.es/ecma262/#sec-string.prototype.big
$$t({
  target: 'String',
  proto: true,
  forced: forcedStringHTMLMethod$b('big')
}, {
  big: function big() {
    return createHTML$b(this, 'big', '', '');
  }
});

var $$s = _export;
var createHTML$a = createHtml;
var forcedStringHTMLMethod$a = stringHtmlForced;

// `String.prototype.blink` method
// https://tc39.es/ecma262/#sec-string.prototype.blink
$$s({
  target: 'String',
  proto: true,
  forced: forcedStringHTMLMethod$a('blink')
}, {
  blink: function blink() {
    return createHTML$a(this, 'blink', '', '');
  }
});

var $$r = _export;
var createHTML$9 = createHtml;
var forcedStringHTMLMethod$9 = stringHtmlForced;

// `String.prototype.bold` method
// https://tc39.es/ecma262/#sec-string.prototype.bold
$$r({
  target: 'String',
  proto: true,
  forced: forcedStringHTMLMethod$9('bold')
}, {
  bold: function bold() {
    return createHTML$9(this, 'b', '', '');
  }
});

var $$q = _export;
var createHTML$8 = createHtml;
var forcedStringHTMLMethod$8 = stringHtmlForced;

// `String.prototype.fixed` method
// https://tc39.es/ecma262/#sec-string.prototype.fixed
$$q({
  target: 'String',
  proto: true,
  forced: forcedStringHTMLMethod$8('fixed')
}, {
  fixed: function fixed() {
    return createHTML$8(this, 'tt', '', '');
  }
});

var $$p = _export;
var createHTML$7 = createHtml;
var forcedStringHTMLMethod$7 = stringHtmlForced;

// `String.prototype.fontcolor` method
// https://tc39.es/ecma262/#sec-string.prototype.fontcolor
$$p({
  target: 'String',
  proto: true,
  forced: forcedStringHTMLMethod$7('fontcolor')
}, {
  fontcolor: function fontcolor(color) {
    return createHTML$7(this, 'font', 'color', color);
  }
});

var $$o = _export;
var createHTML$6 = createHtml;
var forcedStringHTMLMethod$6 = stringHtmlForced;

// `String.prototype.fontsize` method
// https://tc39.es/ecma262/#sec-string.prototype.fontsize
$$o({
  target: 'String',
  proto: true,
  forced: forcedStringHTMLMethod$6('fontsize')
}, {
  fontsize: function fontsize(size) {
    return createHTML$6(this, 'font', 'size', size);
  }
});

var $$n = _export;
var createHTML$5 = createHtml;
var forcedStringHTMLMethod$5 = stringHtmlForced;

// `String.prototype.italics` method
// https://tc39.es/ecma262/#sec-string.prototype.italics
$$n({
  target: 'String',
  proto: true,
  forced: forcedStringHTMLMethod$5('italics')
}, {
  italics: function italics() {
    return createHTML$5(this, 'i', '', '');
  }
});

var $$m = _export;
var createHTML$4 = createHtml;
var forcedStringHTMLMethod$4 = stringHtmlForced;

// `String.prototype.link` method
// https://tc39.es/ecma262/#sec-string.prototype.link
$$m({
  target: 'String',
  proto: true,
  forced: forcedStringHTMLMethod$4('link')
}, {
  link: function link(url) {
    return createHTML$4(this, 'a', 'href', url);
  }
});

var $$l = _export;
var createHTML$3 = createHtml;
var forcedStringHTMLMethod$3 = stringHtmlForced;

// `String.prototype.small` method
// https://tc39.es/ecma262/#sec-string.prototype.small
$$l({
  target: 'String',
  proto: true,
  forced: forcedStringHTMLMethod$3('small')
}, {
  small: function small() {
    return createHTML$3(this, 'small', '', '');
  }
});

var $$k = _export;
var createHTML$2 = createHtml;
var forcedStringHTMLMethod$2 = stringHtmlForced;

// `String.prototype.strike` method
// https://tc39.es/ecma262/#sec-string.prototype.strike
$$k({
  target: 'String',
  proto: true,
  forced: forcedStringHTMLMethod$2('strike')
}, {
  strike: function strike() {
    return createHTML$2(this, 'strike', '', '');
  }
});

var $$j = _export;
var createHTML$1 = createHtml;
var forcedStringHTMLMethod$1 = stringHtmlForced;

// `String.prototype.sub` method
// https://tc39.es/ecma262/#sec-string.prototype.sub
$$j({
  target: 'String',
  proto: true,
  forced: forcedStringHTMLMethod$1('sub')
}, {
  sub: function sub() {
    return createHTML$1(this, 'sub', '', '');
  }
});

var $$i = _export;
var createHTML = createHtml;
var forcedStringHTMLMethod = stringHtmlForced;

// `String.prototype.sup` method
// https://tc39.es/ecma262/#sec-string.prototype.sup
$$i({
  target: 'String',
  proto: true,
  forced: forcedStringHTMLMethod('sup')
}, {
  sup: function sup() {
    return createHTML(this, 'sup', '', '');
  }
});

var typedArrayConstructor = {exports: {}};

/* eslint-disable no-new -- required for testing */
var global$m = global$10;
var fails$f = fails$1t;
var checkCorrectnessOfIteration = checkCorrectnessOfIteration$4;
var NATIVE_ARRAY_BUFFER_VIEWS$1 = arrayBufferViewCore.NATIVE_ARRAY_BUFFER_VIEWS;
var ArrayBuffer$2 = global$m.ArrayBuffer;
var Int8Array$3 = global$m.Int8Array;
var typedArrayConstructorsRequireWrappers = !NATIVE_ARRAY_BUFFER_VIEWS$1 || !fails$f(function () {
  Int8Array$3(1);
}) || !fails$f(function () {
  new Int8Array$3(-1);
}) || !checkCorrectnessOfIteration(function (iterable) {
  new Int8Array$3();
  new Int8Array$3(null);
  new Int8Array$3(1.5);
  new Int8Array$3(iterable);
}, true) || fails$f(function () {
  // Safari (11+) bug - a reason why even Safari 13 should load a typed array polyfill
  return new Int8Array$3(new ArrayBuffer$2(2), 1, undefined).length !== 1;
});

var toIntegerOrInfinity$2 = toIntegerOrInfinity$m;
var $RangeError$2 = RangeError;
var toPositiveInteger$1 = function toPositiveInteger(it) {
  var result = toIntegerOrInfinity$2(it);
  if (result < 0) throw new $RangeError$2("The argument can't be less than 0");
  return result;
};

var toPositiveInteger = toPositiveInteger$1;
var $RangeError$1 = RangeError;
var toOffset$2 = function toOffset(it, BYTES) {
  var offset = toPositiveInteger(it);
  if (offset % BYTES) throw new $RangeError$1('Wrong offset');
  return offset;
};

var round = Math.round;
var toUint8Clamped$1 = function toUint8Clamped(it) {
  var value = round(it);
  return value < 0 ? 0 : value > 0xFF ? 0xFF : value & 0xFF;
};

var classof$4 = classof$n;
var isBigIntArray$2 = function isBigIntArray(it) {
  var klass = classof$4(it);
  return klass === 'BigInt64Array' || klass === 'BigUint64Array';
};

var toPrimitive = toPrimitive$4;
var $TypeError$1 = TypeError;

// `ToBigInt` abstract operation
// https://tc39.es/ecma262/#sec-tobigint
var toBigInt$3 = function toBigInt(argument) {
  var prim = toPrimitive(argument, 'number');
  if (typeof prim == 'number') throw new $TypeError$1("Can't convert number to bigint");
  // eslint-disable-next-line es/no-bigint -- safe
  return BigInt(prim);
};

var bind$3 = functionBindContext;
var call$7 = functionCall;
var aConstructor = aConstructor$3;
var toObject = toObject$t;
var lengthOfArrayLike$3 = lengthOfArrayLike$s;
var getIterator$1 = getIterator$4;
var getIteratorMethod$1 = getIteratorMethod$5;
var isArrayIteratorMethod = isArrayIteratorMethod$3;
var isBigIntArray$1 = isBigIntArray$2;
var aTypedArrayConstructor$2 = arrayBufferViewCore.aTypedArrayConstructor;
var toBigInt$2 = toBigInt$3;
var typedArrayFrom$2 = function from(source /* , mapfn, thisArg */) {
  var C = aConstructor(this);
  var O = toObject(source);
  var argumentsLength = arguments.length;
  var mapfn = argumentsLength > 1 ? arguments[1] : undefined;
  var mapping = mapfn !== undefined;
  var iteratorMethod = getIteratorMethod$1(O);
  var i, length, result, thisIsBigIntArray, value, step, iterator, next;
  if (iteratorMethod && !isArrayIteratorMethod(iteratorMethod)) {
    iterator = getIterator$1(O, iteratorMethod);
    next = iterator.next;
    O = [];
    while (!(step = call$7(next, iterator)).done) {
      O.push(step.value);
    }
  }
  if (mapping && argumentsLength > 2) {
    mapfn = bind$3(mapfn, arguments[2]);
  }
  length = lengthOfArrayLike$3(O);
  result = new (aTypedArrayConstructor$2(C))(length);
  thisIsBigIntArray = isBigIntArray$1(result);
  for (i = 0; length > i; i++) {
    value = mapping ? mapfn(O[i], i) : O[i];
    // FF30- typed arrays doesn't properly convert objects to typed array values
    result[i] = thisIsBigIntArray ? toBigInt$2(value) : +value;
  }
  return result;
};

var $$h = _export;
var global$l = global$10;
var call$6 = functionCall;
var DESCRIPTORS$8 = descriptors;
var TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS$2 = typedArrayConstructorsRequireWrappers;
var ArrayBufferViewCore$u = arrayBufferViewCore;
var ArrayBufferModule = arrayBuffer;
var anInstance$5 = anInstance$a;
var createPropertyDescriptor$3 = createPropertyDescriptor$c;
var createNonEnumerableProperty$3 = createNonEnumerableProperty$f;
var isIntegralNumber = isIntegralNumber$3;
var toLength$1 = toLength$d;
var toIndex = toIndex$3;
var toOffset$1 = toOffset$2;
var toUint8Clamped = toUint8Clamped$1;
var toPropertyKey = toPropertyKey$8;
var hasOwn$6 = hasOwnProperty_1;
var classof$3 = classof$n;
var isObject$4 = isObject$B;
var isSymbol$1 = isSymbol$7;
var create$2 = objectCreate;
var isPrototypeOf = objectIsPrototypeOf;
var setPrototypeOf = objectSetPrototypeOf$1;
var getOwnPropertyNames = objectGetOwnPropertyNames.f;
var typedArrayFrom$1 = typedArrayFrom$2;
var forEach$3 = arrayIteration.forEach;
var setSpecies = setSpecies$6;
var defineBuiltInAccessor$5 = defineBuiltInAccessor$i;
var definePropertyModule = objectDefineProperty;
var getOwnPropertyDescriptorModule = objectGetOwnPropertyDescriptor;
var arrayFromConstructorAndList$2 = arrayFromConstructorAndList$4;
var InternalStateModule$4 = internalState;
var inheritIfRequired$1 = inheritIfRequired$7;
var getInternalState$1 = InternalStateModule$4.get;
var setInternalState$4 = InternalStateModule$4.set;
var enforceInternalState$1 = InternalStateModule$4.enforce;
var nativeDefineProperty = definePropertyModule.f;
var nativeGetOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
var RangeError$2 = global$l.RangeError;
var ArrayBuffer$1 = ArrayBufferModule.ArrayBuffer;
var ArrayBufferPrototype = ArrayBuffer$1.prototype;
var DataView$1 = ArrayBufferModule.DataView;
var NATIVE_ARRAY_BUFFER_VIEWS = ArrayBufferViewCore$u.NATIVE_ARRAY_BUFFER_VIEWS;
var TYPED_ARRAY_TAG = ArrayBufferViewCore$u.TYPED_ARRAY_TAG;
var TypedArray = ArrayBufferViewCore$u.TypedArray;
var TypedArrayPrototype$1 = ArrayBufferViewCore$u.TypedArrayPrototype;
var isTypedArray = ArrayBufferViewCore$u.isTypedArray;
var BYTES_PER_ELEMENT = 'BYTES_PER_ELEMENT';
var WRONG_LENGTH = 'Wrong length';
var addGetter = function addGetter(it, key) {
  defineBuiltInAccessor$5(it, key, {
    configurable: true,
    get: function get() {
      return getInternalState$1(this)[key];
    }
  });
};
var isArrayBuffer = function isArrayBuffer(it) {
  var klass;
  return isPrototypeOf(ArrayBufferPrototype, it) || (klass = classof$3(it)) === 'ArrayBuffer' || klass === 'SharedArrayBuffer';
};
var isTypedArrayIndex = function isTypedArrayIndex(target, key) {
  return isTypedArray(target) && !isSymbol$1(key) && key in target && isIntegralNumber(+key) && key >= 0;
};
var wrappedGetOwnPropertyDescriptor = function getOwnPropertyDescriptor(target, key) {
  key = toPropertyKey(key);
  return isTypedArrayIndex(target, key) ? createPropertyDescriptor$3(2, target[key]) : nativeGetOwnPropertyDescriptor(target, key);
};
var wrappedDefineProperty = function defineProperty(target, key, descriptor) {
  key = toPropertyKey(key);
  if (isTypedArrayIndex(target, key) && isObject$4(descriptor) && hasOwn$6(descriptor, 'value') && !hasOwn$6(descriptor, 'get') && !hasOwn$6(descriptor, 'set')
  // TODO: add validation descriptor w/o calling accessors
  && !descriptor.configurable && (!hasOwn$6(descriptor, 'writable') || descriptor.writable) && (!hasOwn$6(descriptor, 'enumerable') || descriptor.enumerable)) {
    target[key] = descriptor.value;
    return target;
  }
  return nativeDefineProperty(target, key, descriptor);
};
if (DESCRIPTORS$8) {
  if (!NATIVE_ARRAY_BUFFER_VIEWS) {
    getOwnPropertyDescriptorModule.f = wrappedGetOwnPropertyDescriptor;
    definePropertyModule.f = wrappedDefineProperty;
    addGetter(TypedArrayPrototype$1, 'buffer');
    addGetter(TypedArrayPrototype$1, 'byteOffset');
    addGetter(TypedArrayPrototype$1, 'byteLength');
    addGetter(TypedArrayPrototype$1, 'length');
  }
  $$h({
    target: 'Object',
    stat: true,
    forced: !NATIVE_ARRAY_BUFFER_VIEWS
  }, {
    getOwnPropertyDescriptor: wrappedGetOwnPropertyDescriptor,
    defineProperty: wrappedDefineProperty
  });
  typedArrayConstructor.exports = function (TYPE, wrapper, CLAMPED) {
    var BYTES = TYPE.match(/\d+/)[0] / 8;
    var CONSTRUCTOR_NAME = TYPE + (CLAMPED ? 'Clamped' : '') + 'Array';
    var GETTER = 'get' + TYPE;
    var SETTER = 'set' + TYPE;
    var NativeTypedArrayConstructor = global$l[CONSTRUCTOR_NAME];
    var TypedArrayConstructor = NativeTypedArrayConstructor;
    var TypedArrayConstructorPrototype = TypedArrayConstructor && TypedArrayConstructor.prototype;
    var exported = {};
    var getter = function getter(that, index) {
      var data = getInternalState$1(that);
      return data.view[GETTER](index * BYTES + data.byteOffset, true);
    };
    var setter = function setter(that, index, value) {
      var data = getInternalState$1(that);
      data.view[SETTER](index * BYTES + data.byteOffset, CLAMPED ? toUint8Clamped(value) : value, true);
    };
    var addElement = function addElement(that, index) {
      nativeDefineProperty(that, index, {
        get: function get() {
          return getter(this, index);
        },
        set: function set(value) {
          return setter(this, index, value);
        },
        enumerable: true
      });
    };
    if (!NATIVE_ARRAY_BUFFER_VIEWS) {
      TypedArrayConstructor = wrapper(function (that, data, offset, $length) {
        anInstance$5(that, TypedArrayConstructorPrototype);
        var index = 0;
        var byteOffset = 0;
        var buffer, byteLength, length;
        if (!isObject$4(data)) {
          length = toIndex(data);
          byteLength = length * BYTES;
          buffer = new ArrayBuffer$1(byteLength);
        } else if (isArrayBuffer(data)) {
          buffer = data;
          byteOffset = toOffset$1(offset, BYTES);
          var $len = data.byteLength;
          if ($length === undefined) {
            if ($len % BYTES) throw new RangeError$2(WRONG_LENGTH);
            byteLength = $len - byteOffset;
            if (byteLength < 0) throw new RangeError$2(WRONG_LENGTH);
          } else {
            byteLength = toLength$1($length) * BYTES;
            if (byteLength + byteOffset > $len) throw new RangeError$2(WRONG_LENGTH);
          }
          length = byteLength / BYTES;
        } else if (isTypedArray(data)) {
          return arrayFromConstructorAndList$2(TypedArrayConstructor, data);
        } else {
          return call$6(typedArrayFrom$1, TypedArrayConstructor, data);
        }
        setInternalState$4(that, {
          buffer: buffer,
          byteOffset: byteOffset,
          byteLength: byteLength,
          length: length,
          view: new DataView$1(buffer)
        });
        while (index < length) addElement(that, index++);
      });
      if (setPrototypeOf) setPrototypeOf(TypedArrayConstructor, TypedArray);
      TypedArrayConstructorPrototype = TypedArrayConstructor.prototype = create$2(TypedArrayPrototype$1);
    } else if (TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS$2) {
      TypedArrayConstructor = wrapper(function (dummy, data, typedArrayOffset, $length) {
        anInstance$5(dummy, TypedArrayConstructorPrototype);
        return inheritIfRequired$1(function () {
          if (!isObject$4(data)) return new NativeTypedArrayConstructor(toIndex(data));
          if (isArrayBuffer(data)) return $length !== undefined ? new NativeTypedArrayConstructor(data, toOffset$1(typedArrayOffset, BYTES), $length) : typedArrayOffset !== undefined ? new NativeTypedArrayConstructor(data, toOffset$1(typedArrayOffset, BYTES)) : new NativeTypedArrayConstructor(data);
          if (isTypedArray(data)) return arrayFromConstructorAndList$2(TypedArrayConstructor, data);
          return call$6(typedArrayFrom$1, TypedArrayConstructor, data);
        }(), dummy, TypedArrayConstructor);
      });
      if (setPrototypeOf) setPrototypeOf(TypedArrayConstructor, TypedArray);
      forEach$3(getOwnPropertyNames(NativeTypedArrayConstructor), function (key) {
        if (!(key in TypedArrayConstructor)) {
          createNonEnumerableProperty$3(TypedArrayConstructor, key, NativeTypedArrayConstructor[key]);
        }
      });
      TypedArrayConstructor.prototype = TypedArrayConstructorPrototype;
    }
    if (TypedArrayConstructorPrototype.constructor !== TypedArrayConstructor) {
      createNonEnumerableProperty$3(TypedArrayConstructorPrototype, 'constructor', TypedArrayConstructor);
    }
    enforceInternalState$1(TypedArrayConstructorPrototype).TypedArrayConstructor = TypedArrayConstructor;
    if (TYPED_ARRAY_TAG) {
      createNonEnumerableProperty$3(TypedArrayConstructorPrototype, TYPED_ARRAY_TAG, CONSTRUCTOR_NAME);
    }
    var FORCED = TypedArrayConstructor !== NativeTypedArrayConstructor;
    exported[CONSTRUCTOR_NAME] = TypedArrayConstructor;
    $$h({
      global: true,
      constructor: true,
      forced: FORCED,
      sham: !NATIVE_ARRAY_BUFFER_VIEWS
    }, exported);
    if (!(BYTES_PER_ELEMENT in TypedArrayConstructor)) {
      createNonEnumerableProperty$3(TypedArrayConstructor, BYTES_PER_ELEMENT, BYTES);
    }
    if (!(BYTES_PER_ELEMENT in TypedArrayConstructorPrototype)) {
      createNonEnumerableProperty$3(TypedArrayConstructorPrototype, BYTES_PER_ELEMENT, BYTES);
    }
    setSpecies(CONSTRUCTOR_NAME);
  };
} else typedArrayConstructor.exports = function () {/* empty */};
var typedArrayConstructorExports = typedArrayConstructor.exports;

var createTypedArrayConstructor$8 = typedArrayConstructorExports;

// `Float32Array` constructor
// https://tc39.es/ecma262/#sec-typedarray-objects
createTypedArrayConstructor$8('Float32', function (init) {
  return function Float32Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});

var createTypedArrayConstructor$7 = typedArrayConstructorExports;

// `Float64Array` constructor
// https://tc39.es/ecma262/#sec-typedarray-objects
createTypedArrayConstructor$7('Float64', function (init) {
  return function Float64Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});

var createTypedArrayConstructor$6 = typedArrayConstructorExports;

// `Int8Array` constructor
// https://tc39.es/ecma262/#sec-typedarray-objects
createTypedArrayConstructor$6('Int8', function (init) {
  return function Int8Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});

var createTypedArrayConstructor$5 = typedArrayConstructorExports;

// `Int16Array` constructor
// https://tc39.es/ecma262/#sec-typedarray-objects
createTypedArrayConstructor$5('Int16', function (init) {
  return function Int16Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});

var createTypedArrayConstructor$4 = typedArrayConstructorExports;

// `Int32Array` constructor
// https://tc39.es/ecma262/#sec-typedarray-objects
createTypedArrayConstructor$4('Int32', function (init) {
  return function Int32Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});

var createTypedArrayConstructor$3 = typedArrayConstructorExports;

// `Uint8Array` constructor
// https://tc39.es/ecma262/#sec-typedarray-objects
createTypedArrayConstructor$3('Uint8', function (init) {
  return function Uint8Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});

var createTypedArrayConstructor$2 = typedArrayConstructorExports;

// `Uint8ClampedArray` constructor
// https://tc39.es/ecma262/#sec-typedarray-objects
createTypedArrayConstructor$2('Uint8', function (init) {
  return function Uint8ClampedArray(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
}, true);

var createTypedArrayConstructor$1 = typedArrayConstructorExports;

// `Uint16Array` constructor
// https://tc39.es/ecma262/#sec-typedarray-objects
createTypedArrayConstructor$1('Uint16', function (init) {
  return function Uint16Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});

var createTypedArrayConstructor = typedArrayConstructorExports;

// `Uint32Array` constructor
// https://tc39.es/ecma262/#sec-typedarray-objects
createTypedArrayConstructor('Uint32', function (init) {
  return function Uint32Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});

var ArrayBufferViewCore$t = arrayBufferViewCore;
var lengthOfArrayLike$2 = lengthOfArrayLike$s;
var toIntegerOrInfinity$1 = toIntegerOrInfinity$m;
var aTypedArray$r = ArrayBufferViewCore$t.aTypedArray;
var exportTypedArrayMethod$s = ArrayBufferViewCore$t.exportTypedArrayMethod;

// `%TypedArray%.prototype.at` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.at
exportTypedArrayMethod$s('at', function at(index) {
  var O = aTypedArray$r(this);
  var len = lengthOfArrayLike$2(O);
  var relativeIndex = toIntegerOrInfinity$1(index);
  var k = relativeIndex >= 0 ? relativeIndex : len + relativeIndex;
  return k < 0 || k >= len ? undefined : O[k];
});

var uncurryThis$i = functionUncurryThis;
var ArrayBufferViewCore$s = arrayBufferViewCore;
var $ArrayCopyWithin = arrayCopyWithin;
var u$ArrayCopyWithin = uncurryThis$i($ArrayCopyWithin);
var aTypedArray$q = ArrayBufferViewCore$s.aTypedArray;
var exportTypedArrayMethod$r = ArrayBufferViewCore$s.exportTypedArrayMethod;

// `%TypedArray%.prototype.copyWithin` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.copywithin
exportTypedArrayMethod$r('copyWithin', function copyWithin(target, start /* , end */) {
  return u$ArrayCopyWithin(aTypedArray$q(this), target, start, arguments.length > 2 ? arguments[2] : undefined);
});

var ArrayBufferViewCore$r = arrayBufferViewCore;
var $every = arrayIteration.every;
var aTypedArray$p = ArrayBufferViewCore$r.aTypedArray;
var exportTypedArrayMethod$q = ArrayBufferViewCore$r.exportTypedArrayMethod;

// `%TypedArray%.prototype.every` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.every
exportTypedArrayMethod$q('every', function every(callbackfn /* , thisArg */) {
  return $every(aTypedArray$p(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
});

var ArrayBufferViewCore$q = arrayBufferViewCore;
var $fill = arrayFill$1;
var toBigInt$1 = toBigInt$3;
var classof$2 = classof$n;
var call$5 = functionCall;
var uncurryThis$h = functionUncurryThis;
var fails$e = fails$1t;
var aTypedArray$o = ArrayBufferViewCore$q.aTypedArray;
var exportTypedArrayMethod$p = ArrayBufferViewCore$q.exportTypedArrayMethod;
var slice = uncurryThis$h(''.slice);

// V8 ~ Chrome < 59, Safari < 14.1, FF < 55, Edge <=18
var CONVERSION_BUG = fails$e(function () {
  var count = 0;
  // eslint-disable-next-line es/no-typed-arrays -- safe
  new Int8Array(2).fill({
    valueOf: function valueOf() {
      return count++;
    }
  });
  return count !== 1;
});

// `%TypedArray%.prototype.fill` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.fill
exportTypedArrayMethod$p('fill', function fill(value /* , start, end */) {
  var length = arguments.length;
  aTypedArray$o(this);
  var actualValue = slice(classof$2(this), 0, 3) === 'Big' ? toBigInt$1(value) : +value;
  return call$5($fill, this, actualValue, length > 1 ? arguments[1] : undefined, length > 2 ? arguments[2] : undefined);
}, CONVERSION_BUG);

var ArrayBufferViewCore$p = arrayBufferViewCore;
var speciesConstructor = speciesConstructor$6;
var aTypedArrayConstructor$1 = ArrayBufferViewCore$p.aTypedArrayConstructor;
var getTypedArrayConstructor$3 = ArrayBufferViewCore$p.getTypedArrayConstructor;

// a part of `TypedArraySpeciesCreate` abstract operation
// https://tc39.es/ecma262/#typedarray-species-create
var typedArraySpeciesConstructor$4 = function typedArraySpeciesConstructor(originalArray) {
  return aTypedArrayConstructor$1(speciesConstructor(originalArray, getTypedArrayConstructor$3(originalArray)));
};

var arrayFromConstructorAndList$1 = arrayFromConstructorAndList$4;
var typedArraySpeciesConstructor$3 = typedArraySpeciesConstructor$4;
var typedArrayFromSpeciesAndList = function typedArrayFromSpeciesAndList(instance, list) {
  return arrayFromConstructorAndList$1(typedArraySpeciesConstructor$3(instance), list);
};

var ArrayBufferViewCore$o = arrayBufferViewCore;
var $filter = arrayIteration.filter;
var fromSpeciesAndList = typedArrayFromSpeciesAndList;
var aTypedArray$n = ArrayBufferViewCore$o.aTypedArray;
var exportTypedArrayMethod$o = ArrayBufferViewCore$o.exportTypedArrayMethod;

// `%TypedArray%.prototype.filter` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.filter
exportTypedArrayMethod$o('filter', function filter(callbackfn /* , thisArg */) {
  var list = $filter(aTypedArray$n(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  return fromSpeciesAndList(this, list);
});

var ArrayBufferViewCore$n = arrayBufferViewCore;
var $find = arrayIteration.find;
var aTypedArray$m = ArrayBufferViewCore$n.aTypedArray;
var exportTypedArrayMethod$n = ArrayBufferViewCore$n.exportTypedArrayMethod;

// `%TypedArray%.prototype.find` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.find
exportTypedArrayMethod$n('find', function find(predicate /* , thisArg */) {
  return $find(aTypedArray$m(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
});

var ArrayBufferViewCore$m = arrayBufferViewCore;
var $findIndex = arrayIteration.findIndex;
var aTypedArray$l = ArrayBufferViewCore$m.aTypedArray;
var exportTypedArrayMethod$m = ArrayBufferViewCore$m.exportTypedArrayMethod;

// `%TypedArray%.prototype.findIndex` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.findindex
exportTypedArrayMethod$m('findIndex', function findIndex(predicate /* , thisArg */) {
  return $findIndex(aTypedArray$l(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
});

var ArrayBufferViewCore$l = arrayBufferViewCore;
var $findLast = arrayIterationFromLast.findLast;
var aTypedArray$k = ArrayBufferViewCore$l.aTypedArray;
var exportTypedArrayMethod$l = ArrayBufferViewCore$l.exportTypedArrayMethod;

// `%TypedArray%.prototype.findLast` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.findlast
exportTypedArrayMethod$l('findLast', function findLast(predicate /* , thisArg */) {
  return $findLast(aTypedArray$k(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
});

var ArrayBufferViewCore$k = arrayBufferViewCore;
var $findLastIndex = arrayIterationFromLast.findLastIndex;
var aTypedArray$j = ArrayBufferViewCore$k.aTypedArray;
var exportTypedArrayMethod$k = ArrayBufferViewCore$k.exportTypedArrayMethod;

// `%TypedArray%.prototype.findLastIndex` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.findlastindex
exportTypedArrayMethod$k('findLastIndex', function findLastIndex(predicate /* , thisArg */) {
  return $findLastIndex(aTypedArray$j(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
});

var ArrayBufferViewCore$j = arrayBufferViewCore;
var $forEach = arrayIteration.forEach;
var aTypedArray$i = ArrayBufferViewCore$j.aTypedArray;
var exportTypedArrayMethod$j = ArrayBufferViewCore$j.exportTypedArrayMethod;

// `%TypedArray%.prototype.forEach` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.foreach
exportTypedArrayMethod$j('forEach', function forEach(callbackfn /* , thisArg */) {
  $forEach(aTypedArray$i(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
});

var TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS$1 = typedArrayConstructorsRequireWrappers;
var exportTypedArrayStaticMethod$1 = arrayBufferViewCore.exportTypedArrayStaticMethod;
var typedArrayFrom = typedArrayFrom$2;

// `%TypedArray%.from` method
// https://tc39.es/ecma262/#sec-%typedarray%.from
exportTypedArrayStaticMethod$1('from', typedArrayFrom, TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS$1);

var ArrayBufferViewCore$i = arrayBufferViewCore;
var $includes = arrayIncludes.includes;
var aTypedArray$h = ArrayBufferViewCore$i.aTypedArray;
var exportTypedArrayMethod$i = ArrayBufferViewCore$i.exportTypedArrayMethod;

// `%TypedArray%.prototype.includes` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.includes
exportTypedArrayMethod$i('includes', function includes(searchElement /* , fromIndex */) {
  return $includes(aTypedArray$h(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
});

var ArrayBufferViewCore$h = arrayBufferViewCore;
var $indexOf = arrayIncludes.indexOf;
var aTypedArray$g = ArrayBufferViewCore$h.aTypedArray;
var exportTypedArrayMethod$h = ArrayBufferViewCore$h.exportTypedArrayMethod;

// `%TypedArray%.prototype.indexOf` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.indexof
exportTypedArrayMethod$h('indexOf', function indexOf(searchElement /* , fromIndex */) {
  return $indexOf(aTypedArray$g(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
});

var global$k = global$10;
var fails$d = fails$1t;
var uncurryThis$g = functionUncurryThis;
var ArrayBufferViewCore$g = arrayBufferViewCore;
var ArrayIterators = es_array_iterator;
var wellKnownSymbol$3 = wellKnownSymbol$z;
var ITERATOR$3 = wellKnownSymbol$3('iterator');
var Uint8Array$2 = global$k.Uint8Array;
var arrayValues = uncurryThis$g(ArrayIterators.values);
var arrayKeys = uncurryThis$g(ArrayIterators.keys);
var arrayEntries = uncurryThis$g(ArrayIterators.entries);
var aTypedArray$f = ArrayBufferViewCore$g.aTypedArray;
var exportTypedArrayMethod$g = ArrayBufferViewCore$g.exportTypedArrayMethod;
var TypedArrayPrototype = Uint8Array$2 && Uint8Array$2.prototype;
var GENERIC = !fails$d(function () {
  TypedArrayPrototype[ITERATOR$3].call([1]);
});
var ITERATOR_IS_VALUES = !!TypedArrayPrototype && TypedArrayPrototype.values && TypedArrayPrototype[ITERATOR$3] === TypedArrayPrototype.values && TypedArrayPrototype.values.name === 'values';
var typedArrayValues = function values() {
  return arrayValues(aTypedArray$f(this));
};

// `%TypedArray%.prototype.entries` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.entries
exportTypedArrayMethod$g('entries', function entries() {
  return arrayEntries(aTypedArray$f(this));
}, GENERIC);
// `%TypedArray%.prototype.keys` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.keys
exportTypedArrayMethod$g('keys', function keys() {
  return arrayKeys(aTypedArray$f(this));
}, GENERIC);
// `%TypedArray%.prototype.values` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.values
exportTypedArrayMethod$g('values', typedArrayValues, GENERIC || !ITERATOR_IS_VALUES, {
  name: 'values'
});
// `%TypedArray%.prototype[@@iterator]` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype-@@iterator
exportTypedArrayMethod$g(ITERATOR$3, typedArrayValues, GENERIC || !ITERATOR_IS_VALUES, {
  name: 'values'
});

var ArrayBufferViewCore$f = arrayBufferViewCore;
var uncurryThis$f = functionUncurryThis;
var aTypedArray$e = ArrayBufferViewCore$f.aTypedArray;
var exportTypedArrayMethod$f = ArrayBufferViewCore$f.exportTypedArrayMethod;
var $join = uncurryThis$f([].join);

// `%TypedArray%.prototype.join` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.join
exportTypedArrayMethod$f('join', function join(separator) {
  return $join(aTypedArray$e(this), separator);
});

var ArrayBufferViewCore$e = arrayBufferViewCore;
var apply$2 = functionApply$1;
var $lastIndexOf = arrayLastIndexOf;
var aTypedArray$d = ArrayBufferViewCore$e.aTypedArray;
var exportTypedArrayMethod$e = ArrayBufferViewCore$e.exportTypedArrayMethod;

// `%TypedArray%.prototype.lastIndexOf` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.lastindexof
exportTypedArrayMethod$e('lastIndexOf', function lastIndexOf(searchElement /* , fromIndex */) {
  var length = arguments.length;
  return apply$2($lastIndexOf, aTypedArray$d(this), length > 1 ? [searchElement, arguments[1]] : [searchElement]);
});

var ArrayBufferViewCore$d = arrayBufferViewCore;
var $map = arrayIteration.map;
var typedArraySpeciesConstructor$2 = typedArraySpeciesConstructor$4;
var aTypedArray$c = ArrayBufferViewCore$d.aTypedArray;
var exportTypedArrayMethod$d = ArrayBufferViewCore$d.exportTypedArrayMethod;

// `%TypedArray%.prototype.map` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.map
exportTypedArrayMethod$d('map', function map(mapfn /* , thisArg */) {
  return $map(aTypedArray$c(this), mapfn, arguments.length > 1 ? arguments[1] : undefined, function (O, length) {
    return new (typedArraySpeciesConstructor$2(O))(length);
  });
});

var ArrayBufferViewCore$c = arrayBufferViewCore;
var TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS = typedArrayConstructorsRequireWrappers;
var aTypedArrayConstructor = ArrayBufferViewCore$c.aTypedArrayConstructor;
var exportTypedArrayStaticMethod = ArrayBufferViewCore$c.exportTypedArrayStaticMethod;

// `%TypedArray%.of` method
// https://tc39.es/ecma262/#sec-%typedarray%.of
exportTypedArrayStaticMethod('of', function of( /* ...items */
) {
  var index = 0;
  var length = arguments.length;
  var result = new (aTypedArrayConstructor(this))(length);
  while (length > index) result[index] = arguments[index++];
  return result;
}, TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS);

var ArrayBufferViewCore$b = arrayBufferViewCore;
var $reduce = arrayReduce.left;
var aTypedArray$b = ArrayBufferViewCore$b.aTypedArray;
var exportTypedArrayMethod$c = ArrayBufferViewCore$b.exportTypedArrayMethod;

// `%TypedArray%.prototype.reduce` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.reduce
exportTypedArrayMethod$c('reduce', function reduce(callbackfn /* , initialValue */) {
  var length = arguments.length;
  return $reduce(aTypedArray$b(this), callbackfn, length, length > 1 ? arguments[1] : undefined);
});

var ArrayBufferViewCore$a = arrayBufferViewCore;
var $reduceRight = arrayReduce.right;
var aTypedArray$a = ArrayBufferViewCore$a.aTypedArray;
var exportTypedArrayMethod$b = ArrayBufferViewCore$a.exportTypedArrayMethod;

// `%TypedArray%.prototype.reduceRight` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.reduceright
exportTypedArrayMethod$b('reduceRight', function reduceRight(callbackfn /* , initialValue */) {
  var length = arguments.length;
  return $reduceRight(aTypedArray$a(this), callbackfn, length, length > 1 ? arguments[1] : undefined);
});

var ArrayBufferViewCore$9 = arrayBufferViewCore;
var aTypedArray$9 = ArrayBufferViewCore$9.aTypedArray;
var exportTypedArrayMethod$a = ArrayBufferViewCore$9.exportTypedArrayMethod;
var floor$2 = Math.floor;

// `%TypedArray%.prototype.reverse` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.reverse
exportTypedArrayMethod$a('reverse', function reverse() {
  var that = this;
  var length = aTypedArray$9(that).length;
  var middle = floor$2(length / 2);
  var index = 0;
  var value;
  while (index < middle) {
    value = that[index];
    that[index++] = that[--length];
    that[length] = value;
  }
  return that;
});

var global$j = global$10;
var call$4 = functionCall;
var ArrayBufferViewCore$8 = arrayBufferViewCore;
var lengthOfArrayLike$1 = lengthOfArrayLike$s;
var toOffset = toOffset$2;
var toIndexedObject = toObject$t;
var fails$c = fails$1t;
var RangeError$1 = global$j.RangeError;
var Int8Array$2 = global$j.Int8Array;
var Int8ArrayPrototype = Int8Array$2 && Int8Array$2.prototype;
var $set = Int8ArrayPrototype && Int8ArrayPrototype.set;
var aTypedArray$8 = ArrayBufferViewCore$8.aTypedArray;
var exportTypedArrayMethod$9 = ArrayBufferViewCore$8.exportTypedArrayMethod;
var WORKS_WITH_OBJECTS_AND_GENERIC_ON_TYPED_ARRAYS = !fails$c(function () {
  // eslint-disable-next-line es/no-typed-arrays -- required for testing
  var array = new Uint8ClampedArray(2);
  call$4($set, array, {
    length: 1,
    0: 3
  }, 1);
  return array[1] !== 3;
});

// https://bugs.chromium.org/p/v8/issues/detail?id=11294 and other
var TO_OBJECT_BUG = WORKS_WITH_OBJECTS_AND_GENERIC_ON_TYPED_ARRAYS && ArrayBufferViewCore$8.NATIVE_ARRAY_BUFFER_VIEWS && fails$c(function () {
  var array = new Int8Array$2(2);
  array.set(1);
  array.set('2', 1);
  return array[0] !== 0 || array[1] !== 2;
});

// `%TypedArray%.prototype.set` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.set
exportTypedArrayMethod$9('set', function set(arrayLike /* , offset */) {
  aTypedArray$8(this);
  var offset = toOffset(arguments.length > 1 ? arguments[1] : undefined, 1);
  var src = toIndexedObject(arrayLike);
  if (WORKS_WITH_OBJECTS_AND_GENERIC_ON_TYPED_ARRAYS) return call$4($set, this, src, offset);
  var length = this.length;
  var len = lengthOfArrayLike$1(src);
  var index = 0;
  if (len + offset > length) throw new RangeError$1('Wrong length');
  while (index < len) this[offset + index] = src[index++];
}, !WORKS_WITH_OBJECTS_AND_GENERIC_ON_TYPED_ARRAYS || TO_OBJECT_BUG);

var ArrayBufferViewCore$7 = arrayBufferViewCore;
var typedArraySpeciesConstructor$1 = typedArraySpeciesConstructor$4;
var fails$b = fails$1t;
var arraySlice$3 = arraySlice$a;
var aTypedArray$7 = ArrayBufferViewCore$7.aTypedArray;
var exportTypedArrayMethod$8 = ArrayBufferViewCore$7.exportTypedArrayMethod;
var FORCED$2 = fails$b(function () {
  // eslint-disable-next-line es/no-typed-arrays -- required for testing
  new Int8Array(1).slice();
});

// `%TypedArray%.prototype.slice` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.slice
exportTypedArrayMethod$8('slice', function slice(start, end) {
  var list = arraySlice$3(aTypedArray$7(this), start, end);
  var C = typedArraySpeciesConstructor$1(this);
  var index = 0;
  var length = list.length;
  var result = new C(length);
  while (length > index) result[index] = list[index++];
  return result;
}, FORCED$2);

var ArrayBufferViewCore$6 = arrayBufferViewCore;
var $some = arrayIteration.some;
var aTypedArray$6 = ArrayBufferViewCore$6.aTypedArray;
var exportTypedArrayMethod$7 = ArrayBufferViewCore$6.exportTypedArrayMethod;

// `%TypedArray%.prototype.some` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.some
exportTypedArrayMethod$7('some', function some(callbackfn /* , thisArg */) {
  return $some(aTypedArray$6(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
});

var global$i = global$10;
var uncurryThis$e = functionUncurryThisClause;
var fails$a = fails$1t;
var aCallable$2 = aCallable$o;
var internalSort = arraySort$1;
var ArrayBufferViewCore$5 = arrayBufferViewCore;
var FF = engineFfVersion;
var IE_OR_EDGE = engineIsIeOrEdge;
var V8 = engineV8Version;
var WEBKIT = engineWebkitVersion;
var aTypedArray$5 = ArrayBufferViewCore$5.aTypedArray;
var exportTypedArrayMethod$6 = ArrayBufferViewCore$5.exportTypedArrayMethod;
var Uint16Array = global$i.Uint16Array;
var nativeSort = Uint16Array && uncurryThis$e(Uint16Array.prototype.sort);

// WebKit
var ACCEPT_INCORRECT_ARGUMENTS = !!nativeSort && !(fails$a(function () {
  nativeSort(new Uint16Array(2), null);
}) && fails$a(function () {
  nativeSort(new Uint16Array(2), {});
}));
var STABLE_SORT = !!nativeSort && !fails$a(function () {
  // feature detection can be too slow, so check engines versions
  if (V8) return V8 < 74;
  if (FF) return FF < 67;
  if (IE_OR_EDGE) return true;
  if (WEBKIT) return WEBKIT < 602;
  var array = new Uint16Array(516);
  var expected = Array(516);
  var index, mod;
  for (index = 0; index < 516; index++) {
    mod = index % 4;
    array[index] = 515 - index;
    expected[index] = index - 2 * mod + 3;
  }
  nativeSort(array, function (a, b) {
    return (a / 4 | 0) - (b / 4 | 0);
  });
  for (index = 0; index < 516; index++) {
    if (array[index] !== expected[index]) return true;
  }
});
var getSortCompare = function getSortCompare(comparefn) {
  return function (x, y) {
    if (comparefn !== undefined) return +comparefn(x, y) || 0;
    // eslint-disable-next-line no-self-compare -- NaN check
    if (y !== y) return -1;
    // eslint-disable-next-line no-self-compare -- NaN check
    if (x !== x) return 1;
    if (x === 0 && y === 0) return 1 / x > 0 && 1 / y < 0 ? 1 : -1;
    return x > y;
  };
};

// `%TypedArray%.prototype.sort` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.sort
exportTypedArrayMethod$6('sort', function sort(comparefn) {
  if (comparefn !== undefined) aCallable$2(comparefn);
  if (STABLE_SORT) return nativeSort(this, comparefn);
  return internalSort(aTypedArray$5(this), getSortCompare(comparefn));
}, !STABLE_SORT || ACCEPT_INCORRECT_ARGUMENTS);

var ArrayBufferViewCore$4 = arrayBufferViewCore;
var toLength = toLength$d;
var toAbsoluteIndex = toAbsoluteIndex$9;
var typedArraySpeciesConstructor = typedArraySpeciesConstructor$4;
var aTypedArray$4 = ArrayBufferViewCore$4.aTypedArray;
var exportTypedArrayMethod$5 = ArrayBufferViewCore$4.exportTypedArrayMethod;

// `%TypedArray%.prototype.subarray` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.subarray
exportTypedArrayMethod$5('subarray', function subarray(begin, end) {
  var O = aTypedArray$4(this);
  var length = O.length;
  var beginIndex = toAbsoluteIndex(begin, length);
  var C = typedArraySpeciesConstructor(O);
  return new C(O.buffer, O.byteOffset + beginIndex * O.BYTES_PER_ELEMENT, toLength((end === undefined ? length : toAbsoluteIndex(end, length)) - beginIndex));
});

var global$h = global$10;
var apply$1 = functionApply$1;
var ArrayBufferViewCore$3 = arrayBufferViewCore;
var fails$9 = fails$1t;
var arraySlice$2 = arraySlice$a;
var Int8Array$1 = global$h.Int8Array;
var aTypedArray$3 = ArrayBufferViewCore$3.aTypedArray;
var exportTypedArrayMethod$4 = ArrayBufferViewCore$3.exportTypedArrayMethod;
var $toLocaleString = [].toLocaleString;

// iOS Safari 6.x fails here
var TO_LOCALE_STRING_BUG = !!Int8Array$1 && fails$9(function () {
  $toLocaleString.call(new Int8Array$1(1));
});
var FORCED$1 = fails$9(function () {
  return [1, 2].toLocaleString() !== new Int8Array$1([1, 2]).toLocaleString();
}) || !fails$9(function () {
  Int8Array$1.prototype.toLocaleString.call([1, 2]);
});

// `%TypedArray%.prototype.toLocaleString` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.tolocalestring
exportTypedArrayMethod$4('toLocaleString', function toLocaleString() {
  return apply$1($toLocaleString, TO_LOCALE_STRING_BUG ? arraySlice$2(aTypedArray$3(this)) : aTypedArray$3(this), arraySlice$2(arguments));
}, FORCED$1);

var arrayToReversed = arrayToReversed$2;
var ArrayBufferViewCore$2 = arrayBufferViewCore;
var aTypedArray$2 = ArrayBufferViewCore$2.aTypedArray;
var exportTypedArrayMethod$3 = ArrayBufferViewCore$2.exportTypedArrayMethod;
var getTypedArrayConstructor$2 = ArrayBufferViewCore$2.getTypedArrayConstructor;

// `%TypedArray%.prototype.toReversed` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.toreversed
exportTypedArrayMethod$3('toReversed', function toReversed() {
  return arrayToReversed(aTypedArray$2(this), getTypedArrayConstructor$2(this));
});

var ArrayBufferViewCore$1 = arrayBufferViewCore;
var uncurryThis$d = functionUncurryThis;
var aCallable$1 = aCallable$o;
var arrayFromConstructorAndList = arrayFromConstructorAndList$4;
var aTypedArray$1 = ArrayBufferViewCore$1.aTypedArray;
var getTypedArrayConstructor$1 = ArrayBufferViewCore$1.getTypedArrayConstructor;
var exportTypedArrayMethod$2 = ArrayBufferViewCore$1.exportTypedArrayMethod;
var sort = uncurryThis$d(ArrayBufferViewCore$1.TypedArrayPrototype.sort);

// `%TypedArray%.prototype.toSorted` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.tosorted
exportTypedArrayMethod$2('toSorted', function toSorted(compareFn) {
  if (compareFn !== undefined) aCallable$1(compareFn);
  var O = aTypedArray$1(this);
  var A = arrayFromConstructorAndList(getTypedArrayConstructor$1(O), O);
  return sort(A, compareFn);
});

var exportTypedArrayMethod$1 = arrayBufferViewCore.exportTypedArrayMethod;
var fails$8 = fails$1t;
var global$g = global$10;
var uncurryThis$c = functionUncurryThis;
var Uint8Array$1 = global$g.Uint8Array;
var Uint8ArrayPrototype = Uint8Array$1 && Uint8Array$1.prototype || {};
var arrayToString = [].toString;
var join$3 = uncurryThis$c([].join);
if (fails$8(function () {
  arrayToString.call({});
})) {
  arrayToString = function toString() {
    return join$3(this);
  };
}
var IS_NOT_ARRAY_METHOD = Uint8ArrayPrototype.toString !== arrayToString;

// `%TypedArray%.prototype.toString` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.tostring
exportTypedArrayMethod$1('toString', arrayToString, IS_NOT_ARRAY_METHOD);

var arrayWith = arrayWith$2;
var ArrayBufferViewCore = arrayBufferViewCore;
var isBigIntArray = isBigIntArray$2;
var toIntegerOrInfinity = toIntegerOrInfinity$m;
var toBigInt = toBigInt$3;
var aTypedArray = ArrayBufferViewCore.aTypedArray;
var getTypedArrayConstructor = ArrayBufferViewCore.getTypedArrayConstructor;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;
var PROPER_ORDER = !!function () {
  try {
    // eslint-disable-next-line no-throw-literal, es/no-typed-arrays, es/no-array-prototype-with -- required for testing
    new Int8Array(1)['with'](2, {
      valueOf: function valueOf() {
        throw 8;
      }
    });
  } catch (error) {
    // some early implementations, like WebKit, does not follow the final semantic
    // https://github.com/tc39/proposal-change-array-by-copy/pull/86
    return error === 8;
  }
}();

// `%TypedArray%.prototype.with` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.with
exportTypedArrayMethod('with', {
  'with': function _with(index, value) {
    var O = aTypedArray(this);
    var relativeIndex = toIntegerOrInfinity(index);
    var actualValue = isBigIntArray(O) ? toBigInt(value) : +value;
    return arrayWith(O, getTypedArrayConstructor(O), relativeIndex, actualValue);
  }
}['with'], !PROPER_ORDER);

var $$g = _export;
var uncurryThis$b = functionUncurryThis;
var toString$6 = toString$D;
var fromCharCode$2 = String.fromCharCode;
var charAt$4 = uncurryThis$b(''.charAt);
var exec$3 = uncurryThis$b(/./.exec);
var stringSlice$2 = uncurryThis$b(''.slice);
var hex2 = /^[\da-f]{2}$/i;
var hex4 = /^[\da-f]{4}$/i;

// `unescape` method
// https://tc39.es/ecma262/#sec-unescape-string
$$g({
  global: true
}, {
  unescape: function unescape(string) {
    var str = toString$6(string);
    var result = '';
    var length = str.length;
    var index = 0;
    var chr, part;
    while (index < length) {
      chr = charAt$4(str, index++);
      if (chr === '%') {
        if (charAt$4(str, index) === 'u') {
          part = stringSlice$2(str, index + 1, index + 5);
          if (exec$3(hex4, part)) {
            result += fromCharCode$2(parseInt(part, 16));
            index += 5;
            continue;
          }
        } else {
          part = stringSlice$2(str, index, index + 2);
          if (exec$3(hex2, part)) {
            result += fromCharCode$2(parseInt(part, 16));
            index += 2;
            continue;
          }
        }
      }
      result += chr;
    }
    return result;
  }
});

var uncurryThis$a = functionUncurryThis;
var defineBuiltIns$2 = defineBuiltIns$5;
var getWeakData = internalMetadataExports.getWeakData;
var anInstance$4 = anInstance$a;
var anObject$3 = anObject$D;
var isNullOrUndefined$1 = isNullOrUndefined$e;
var isObject$3 = isObject$B;
var iterate$1 = iterate$e;
var ArrayIterationModule = arrayIteration;
var hasOwn$5 = hasOwnProperty_1;
var InternalStateModule$3 = internalState;
var setInternalState$3 = InternalStateModule$3.set;
var internalStateGetterFor = InternalStateModule$3.getterFor;
var find$1 = ArrayIterationModule.find;
var findIndex = ArrayIterationModule.findIndex;
var splice$1 = uncurryThis$a([].splice);
var id = 0;

// fallback for uncaught frozen keys
var uncaughtFrozenStore = function uncaughtFrozenStore(state) {
  return state.frozen || (state.frozen = new UncaughtFrozenStore());
};
var UncaughtFrozenStore = function UncaughtFrozenStore() {
  this.entries = [];
};
var findUncaughtFrozen = function findUncaughtFrozen(store, key) {
  return find$1(store.entries, function (it) {
    return it[0] === key;
  });
};
UncaughtFrozenStore.prototype = {
  get: function get(key) {
    var entry = findUncaughtFrozen(this, key);
    if (entry) return entry[1];
  },
  has: function has(key) {
    return !!findUncaughtFrozen(this, key);
  },
  set: function set(key, value) {
    var entry = findUncaughtFrozen(this, key);
    if (entry) entry[1] = value;else this.entries.push([key, value]);
  },
  'delete': function _delete(key) {
    var index = findIndex(this.entries, function (it) {
      return it[0] === key;
    });
    if (~index) splice$1(this.entries, index, 1);
    return !!~index;
  }
};
var collectionWeak$2 = {
  getConstructor: function getConstructor(wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER) {
    var Constructor = wrapper(function (that, iterable) {
      anInstance$4(that, Prototype);
      setInternalState$3(that, {
        type: CONSTRUCTOR_NAME,
        id: id++,
        frozen: undefined
      });
      if (!isNullOrUndefined$1(iterable)) iterate$1(iterable, that[ADDER], {
        that: that,
        AS_ENTRIES: IS_MAP
      });
    });
    var Prototype = Constructor.prototype;
    var getInternalState = internalStateGetterFor(CONSTRUCTOR_NAME);
    var define = function define(that, key, value) {
      var state = getInternalState(that);
      var data = getWeakData(anObject$3(key), true);
      if (data === true) uncaughtFrozenStore(state).set(key, value);else data[state.id] = value;
      return that;
    };
    defineBuiltIns$2(Prototype, {
      // `{ WeakMap, WeakSet }.prototype.delete(key)` methods
      // https://tc39.es/ecma262/#sec-weakmap.prototype.delete
      // https://tc39.es/ecma262/#sec-weakset.prototype.delete
      'delete': function _delete(key) {
        var state = getInternalState(this);
        if (!isObject$3(key)) return false;
        var data = getWeakData(key);
        if (data === true) return uncaughtFrozenStore(state)['delete'](key);
        return data && hasOwn$5(data, state.id) && delete data[state.id];
      },
      // `{ WeakMap, WeakSet }.prototype.has(key)` methods
      // https://tc39.es/ecma262/#sec-weakmap.prototype.has
      // https://tc39.es/ecma262/#sec-weakset.prototype.has
      has: function has(key) {
        var state = getInternalState(this);
        if (!isObject$3(key)) return false;
        var data = getWeakData(key);
        if (data === true) return uncaughtFrozenStore(state).has(key);
        return data && hasOwn$5(data, state.id);
      }
    });
    defineBuiltIns$2(Prototype, IS_MAP ? {
      // `WeakMap.prototype.get(key)` method
      // https://tc39.es/ecma262/#sec-weakmap.prototype.get
      get: function get(key) {
        var state = getInternalState(this);
        if (isObject$3(key)) {
          var data = getWeakData(key);
          if (data === true) return uncaughtFrozenStore(state).get(key);
          return data ? data[state.id] : undefined;
        }
      },
      // `WeakMap.prototype.set(key, value)` method
      // https://tc39.es/ecma262/#sec-weakmap.prototype.set
      set: function set(key, value) {
        return define(this, key, value);
      }
    } : {
      // `WeakSet.prototype.add(value)` method
      // https://tc39.es/ecma262/#sec-weakset.prototype.add
      add: function add(value) {
        return define(this, value, true);
      }
    });
    return Constructor;
  }
};

var FREEZING = freezing;
var global$f = global$10;
var uncurryThis$9 = functionUncurryThis;
var defineBuiltIns$1 = defineBuiltIns$5;
var InternalMetadataModule = internalMetadataExports;
var collection$1 = collection$4;
var collectionWeak$1 = collectionWeak$2;
var isObject$2 = isObject$B;
var enforceInternalState = internalState.enforce;
var fails$7 = fails$1t;
var NATIVE_WEAK_MAP = weakMapBasicDetection;
var $Object = Object;
// eslint-disable-next-line es/no-array-isarray -- safe
var isArray = Array.isArray;
// eslint-disable-next-line es/no-object-isextensible -- safe
var isExtensible = $Object.isExtensible;
// eslint-disable-next-line es/no-object-isfrozen -- safe
var isFrozen = $Object.isFrozen;
// eslint-disable-next-line es/no-object-issealed -- safe
var isSealed = $Object.isSealed;
// eslint-disable-next-line es/no-object-freeze -- safe
var freeze = $Object.freeze;
// eslint-disable-next-line es/no-object-seal -- safe
var seal = $Object.seal;
var IS_IE11 = !global$f.ActiveXObject && 'ActiveXObject' in global$f;
var InternalWeakMap;
var wrapper = function wrapper(init) {
  return function WeakMap() {
    return init(this, arguments.length ? arguments[0] : undefined);
  };
};

// `WeakMap` constructor
// https://tc39.es/ecma262/#sec-weakmap-constructor
var $WeakMap = collection$1('WeakMap', wrapper, collectionWeak$1);
var WeakMapPrototype = $WeakMap.prototype;
var nativeSet = uncurryThis$9(WeakMapPrototype.set);

// Chakra Edge bug: adding frozen arrays to WeakMap unfreeze them
var hasMSEdgeFreezingBug = function hasMSEdgeFreezingBug() {
  return FREEZING && fails$7(function () {
    var frozenArray = freeze([]);
    nativeSet(new $WeakMap(), frozenArray, 1);
    return !isFrozen(frozenArray);
  });
};

// IE11 WeakMap frozen keys fix
// We can't use feature detection because it crash some old IE builds
// https://github.com/zloirock/core-js/issues/485
if (NATIVE_WEAK_MAP) if (IS_IE11) {
  InternalWeakMap = collectionWeak$1.getConstructor(wrapper, 'WeakMap', true);
  InternalMetadataModule.enable();
  var nativeDelete = uncurryThis$9(WeakMapPrototype['delete']);
  var nativeHas = uncurryThis$9(WeakMapPrototype.has);
  var nativeGet = uncurryThis$9(WeakMapPrototype.get);
  defineBuiltIns$1(WeakMapPrototype, {
    'delete': function _delete(key) {
      if (isObject$2(key) && !isExtensible(key)) {
        var state = enforceInternalState(this);
        if (!state.frozen) state.frozen = new InternalWeakMap();
        return nativeDelete(this, key) || state.frozen['delete'](key);
      }
      return nativeDelete(this, key);
    },
    has: function has(key) {
      if (isObject$2(key) && !isExtensible(key)) {
        var state = enforceInternalState(this);
        if (!state.frozen) state.frozen = new InternalWeakMap();
        return nativeHas(this, key) || state.frozen.has(key);
      }
      return nativeHas(this, key);
    },
    get: function get(key) {
      if (isObject$2(key) && !isExtensible(key)) {
        var state = enforceInternalState(this);
        if (!state.frozen) state.frozen = new InternalWeakMap();
        return nativeHas(this, key) ? nativeGet(this, key) : state.frozen.get(key);
      }
      return nativeGet(this, key);
    },
    set: function set(key, value) {
      if (isObject$2(key) && !isExtensible(key)) {
        var state = enforceInternalState(this);
        if (!state.frozen) state.frozen = new InternalWeakMap();
        nativeHas(this, key) ? nativeSet(this, key, value) : state.frozen.set(key, value);
      } else nativeSet(this, key, value);
      return this;
    }
  });
  // Chakra Edge frozen keys fix
} else if (hasMSEdgeFreezingBug()) {
  defineBuiltIns$1(WeakMapPrototype, {
    set: function set(key, value) {
      var arrayIntegrityLevel;
      if (isArray(key)) {
        if (isFrozen(key)) arrayIntegrityLevel = freeze;else if (isSealed(key)) arrayIntegrityLevel = seal;
      }
      nativeSet(this, key, value);
      if (arrayIntegrityLevel) arrayIntegrityLevel(key);
      return this;
    }
  });
}

var collection = collection$4;
var collectionWeak = collectionWeak$2;

// `WeakSet` constructor
// https://tc39.es/ecma262/#sec-weakset-constructor
collection('WeakSet', function (init) {
  return function WeakSet() {
    return init(this, arguments.length ? arguments[0] : undefined);
  };
}, collectionWeak);

var commonAlphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
var base64Alphabet = commonAlphabet + '+/';
var base64UrlAlphabet = commonAlphabet + '-_';
var inverse = function inverse(characters) {
  // TODO: use `Object.create(null)` in `core-js@4`
  var result = {};
  var index = 0;
  for (; index < 64; index++) result[characters.charAt(index)] = index;
  return result;
};
var base64Map = {
  i2c: base64Alphabet,
  c2i: inverse(base64Alphabet),
  i2cUrl: base64UrlAlphabet,
  c2iUrl: inverse(base64UrlAlphabet)
};

var $$f = _export;
var global$e = global$10;
var getBuiltIn$7 = getBuiltIn$r;
var uncurryThis$8 = functionUncurryThis;
var call$3 = functionCall;
var fails$6 = fails$1t;
var toString$5 = toString$D;
var validateArgumentsLength$a = validateArgumentsLength$c;
var c2i = base64Map.c2i;
var disallowed = /[^\d+/a-z]/i;
var whitespaces = /[\t\n\f\r ]+/g;
var finalEq = /[=]{1,2}$/;
var $atob = getBuiltIn$7('atob');
var fromCharCode$1 = String.fromCharCode;
var charAt$3 = uncurryThis$8(''.charAt);
var replace$3 = uncurryThis$8(''.replace);
var exec$2 = uncurryThis$8(disallowed.exec);
var BASIC$1 = !!$atob && !fails$6(function () {
  return $atob('aGk=') !== 'hi';
});
var NO_SPACES_IGNORE = BASIC$1 && fails$6(function () {
  return $atob(' ') !== '';
});
var NO_ENCODING_CHECK = BASIC$1 && !fails$6(function () {
  $atob('a');
});
var NO_ARG_RECEIVING_CHECK$1 = BASIC$1 && !fails$6(function () {
  $atob();
});
var WRONG_ARITY$3 = BASIC$1 && $atob.length !== 1;
var FORCED = !BASIC$1 || NO_SPACES_IGNORE || NO_ENCODING_CHECK || NO_ARG_RECEIVING_CHECK$1 || WRONG_ARITY$3;

// `atob` method
// https://html.spec.whatwg.org/multipage/webappapis.html#dom-atob
$$f({
  global: true,
  bind: true,
  enumerable: true,
  forced: FORCED
}, {
  atob: function atob(data) {
    validateArgumentsLength$a(arguments.length, 1);
    // `webpack` dev server bug on IE global methods - use call(fn, global, ...)
    if (BASIC$1 && !NO_SPACES_IGNORE && !NO_ENCODING_CHECK) return call$3($atob, global$e, data);
    var string = replace$3(toString$5(data), whitespaces, '');
    var output = '';
    var position = 0;
    var bc = 0;
    var length, chr, bs;
    if (string.length % 4 === 0) {
      string = replace$3(string, finalEq, '');
    }
    length = string.length;
    if (length % 4 === 1 || exec$2(disallowed, string)) {
      throw new (getBuiltIn$7('DOMException'))('The string is not correctly encoded', 'InvalidCharacterError');
    }
    while (position < length) {
      chr = charAt$3(string, position++);
      bs = bc % 4 ? bs * 64 + c2i[chr] : c2i[chr];
      if (bc++ % 4) output += fromCharCode$1(255 & bs >> (-2 * bc & 6));
    }
    return output;
  }
});

var $$e = _export;
var global$d = global$10;
var getBuiltIn$6 = getBuiltIn$r;
var uncurryThis$7 = functionUncurryThis;
var call$2 = functionCall;
var fails$5 = fails$1t;
var toString$4 = toString$D;
var validateArgumentsLength$9 = validateArgumentsLength$c;
var i2c = base64Map.i2c;
var $btoa = getBuiltIn$6('btoa');
var charAt$2 = uncurryThis$7(''.charAt);
var charCodeAt$1 = uncurryThis$7(''.charCodeAt);
var BASIC = !!$btoa && !fails$5(function () {
  return $btoa('hi') !== 'aGk=';
});
var NO_ARG_RECEIVING_CHECK = BASIC && !fails$5(function () {
  $btoa();
});
var WRONG_ARG_CONVERSION = BASIC && fails$5(function () {
  return $btoa(null) !== 'bnVsbA==';
});
var WRONG_ARITY$2 = BASIC && $btoa.length !== 1;

// `btoa` method
// https://html.spec.whatwg.org/multipage/webappapis.html#dom-btoa
$$e({
  global: true,
  bind: true,
  enumerable: true,
  forced: !BASIC || NO_ARG_RECEIVING_CHECK || WRONG_ARG_CONVERSION || WRONG_ARITY$2
}, {
  btoa: function btoa(data) {
    validateArgumentsLength$9(arguments.length, 1);
    // `webpack` dev server bug on IE global methods - use call(fn, global, ...)
    if (BASIC) return call$2($btoa, global$d, toString$4(data));
    var string = toString$4(data);
    var output = '';
    var position = 0;
    var map = i2c;
    var block, charCode;
    while (charAt$2(string, position) || (map = '=', position % 1)) {
      charCode = charCodeAt$1(string, position += 3 / 4);
      if (charCode > 0xFF) {
        throw new (getBuiltIn$6('DOMException'))('The string contains characters outside of the Latin1 range', 'InvalidCharacterError');
      }
      block = block << 8 | charCode;
      output += charAt$2(map, 63 & block >> 8 - position % 1 * 8);
    }
    return output;
  }
});

// iterable DOM collections
// flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods
var domIterables = {
  CSSRuleList: 0,
  CSSStyleDeclaration: 0,
  CSSValueList: 0,
  ClientRectList: 0,
  DOMRectList: 0,
  DOMStringList: 0,
  DOMTokenList: 1,
  DataTransferItemList: 0,
  FileList: 0,
  HTMLAllCollection: 0,
  HTMLCollection: 0,
  HTMLFormElement: 0,
  HTMLSelectElement: 0,
  MediaList: 0,
  MimeTypeArray: 0,
  NamedNodeMap: 0,
  NodeList: 1,
  PaintRequestList: 0,
  Plugin: 0,
  PluginArray: 0,
  SVGLengthList: 0,
  SVGNumberList: 0,
  SVGPathSegList: 0,
  SVGPointList: 0,
  SVGStringList: 0,
  SVGTransformList: 0,
  SourceBufferList: 0,
  StyleSheetList: 0,
  TextTrackCueList: 0,
  TextTrackList: 0,
  TouchList: 0
};

// in old WebKit versions, `element.classList` is not an instance of global `DOMTokenList`
var documentCreateElement = documentCreateElement$2;
var classList = documentCreateElement('span').classList;
var DOMTokenListPrototype$2 = classList && classList.constructor && classList.constructor.prototype;
var domTokenListPrototype = DOMTokenListPrototype$2 === Object.prototype ? undefined : DOMTokenListPrototype$2;

var global$c = global$10;
var DOMIterables$1 = domIterables;
var DOMTokenListPrototype$1 = domTokenListPrototype;
var forEach$2 = arrayForEach;
var createNonEnumerableProperty$2 = createNonEnumerableProperty$f;
var handlePrototype$1 = function handlePrototype(CollectionPrototype) {
  // some Chrome versions have non-configurable methods on DOMTokenList
  if (CollectionPrototype && CollectionPrototype.forEach !== forEach$2) try {
    createNonEnumerableProperty$2(CollectionPrototype, 'forEach', forEach$2);
  } catch (error) {
    CollectionPrototype.forEach = forEach$2;
  }
};
for (var COLLECTION_NAME$1 in DOMIterables$1) {
  if (DOMIterables$1[COLLECTION_NAME$1]) {
    handlePrototype$1(global$c[COLLECTION_NAME$1] && global$c[COLLECTION_NAME$1].prototype);
  }
}
handlePrototype$1(DOMTokenListPrototype$1);

var global$b = global$10;
var DOMIterables = domIterables;
var DOMTokenListPrototype = domTokenListPrototype;
var ArrayIteratorMethods = es_array_iterator;
var createNonEnumerableProperty$1 = createNonEnumerableProperty$f;
var setToStringTag$3 = setToStringTag$e;
var wellKnownSymbol$2 = wellKnownSymbol$z;
var ITERATOR$2 = wellKnownSymbol$2('iterator');
var ArrayValues = ArrayIteratorMethods.values;
var handlePrototype = function handlePrototype(CollectionPrototype, COLLECTION_NAME) {
  if (CollectionPrototype) {
    // some Chrome versions have non-configurable methods on DOMTokenList
    if (CollectionPrototype[ITERATOR$2] !== ArrayValues) try {
      createNonEnumerableProperty$1(CollectionPrototype, ITERATOR$2, ArrayValues);
    } catch (error) {
      CollectionPrototype[ITERATOR$2] = ArrayValues;
    }
    setToStringTag$3(CollectionPrototype, COLLECTION_NAME, true);
    if (DOMIterables[COLLECTION_NAME]) for (var METHOD_NAME in ArrayIteratorMethods) {
      // some Chrome versions have non-configurable methods on DOMTokenList
      if (CollectionPrototype[METHOD_NAME] !== ArrayIteratorMethods[METHOD_NAME]) try {
        createNonEnumerableProperty$1(CollectionPrototype, METHOD_NAME, ArrayIteratorMethods[METHOD_NAME]);
      } catch (error) {
        CollectionPrototype[METHOD_NAME] = ArrayIteratorMethods[METHOD_NAME];
      }
    }
  }
};
for (var COLLECTION_NAME in DOMIterables) {
  handlePrototype(global$b[COLLECTION_NAME] && global$b[COLLECTION_NAME].prototype, COLLECTION_NAME);
}
handlePrototype(DOMTokenListPrototype, 'DOMTokenList');

var domExceptionConstants = {
  IndexSizeError: {
    s: 'INDEX_SIZE_ERR',
    c: 1,
    m: 1
  },
  DOMStringSizeError: {
    s: 'DOMSTRING_SIZE_ERR',
    c: 2,
    m: 0
  },
  HierarchyRequestError: {
    s: 'HIERARCHY_REQUEST_ERR',
    c: 3,
    m: 1
  },
  WrongDocumentError: {
    s: 'WRONG_DOCUMENT_ERR',
    c: 4,
    m: 1
  },
  InvalidCharacterError: {
    s: 'INVALID_CHARACTER_ERR',
    c: 5,
    m: 1
  },
  NoDataAllowedError: {
    s: 'NO_DATA_ALLOWED_ERR',
    c: 6,
    m: 0
  },
  NoModificationAllowedError: {
    s: 'NO_MODIFICATION_ALLOWED_ERR',
    c: 7,
    m: 1
  },
  NotFoundError: {
    s: 'NOT_FOUND_ERR',
    c: 8,
    m: 1
  },
  NotSupportedError: {
    s: 'NOT_SUPPORTED_ERR',
    c: 9,
    m: 1
  },
  InUseAttributeError: {
    s: 'INUSE_ATTRIBUTE_ERR',
    c: 10,
    m: 1
  },
  InvalidStateError: {
    s: 'INVALID_STATE_ERR',
    c: 11,
    m: 1
  },
  SyntaxError: {
    s: 'SYNTAX_ERR',
    c: 12,
    m: 1
  },
  InvalidModificationError: {
    s: 'INVALID_MODIFICATION_ERR',
    c: 13,
    m: 1
  },
  NamespaceError: {
    s: 'NAMESPACE_ERR',
    c: 14,
    m: 1
  },
  InvalidAccessError: {
    s: 'INVALID_ACCESS_ERR',
    c: 15,
    m: 1
  },
  ValidationError: {
    s: 'VALIDATION_ERR',
    c: 16,
    m: 0
  },
  TypeMismatchError: {
    s: 'TYPE_MISMATCH_ERR',
    c: 17,
    m: 1
  },
  SecurityError: {
    s: 'SECURITY_ERR',
    c: 18,
    m: 1
  },
  NetworkError: {
    s: 'NETWORK_ERR',
    c: 19,
    m: 1
  },
  AbortError: {
    s: 'ABORT_ERR',
    c: 20,
    m: 1
  },
  URLMismatchError: {
    s: 'URL_MISMATCH_ERR',
    c: 21,
    m: 1
  },
  QuotaExceededError: {
    s: 'QUOTA_EXCEEDED_ERR',
    c: 22,
    m: 1
  },
  TimeoutError: {
    s: 'TIMEOUT_ERR',
    c: 23,
    m: 1
  },
  InvalidNodeTypeError: {
    s: 'INVALID_NODE_TYPE_ERR',
    c: 24,
    m: 1
  },
  DataCloneError: {
    s: 'DATA_CLONE_ERR',
    c: 25,
    m: 1
  }
};

var $$d = _export;
var tryNodeRequire = tryNodeRequire$2;
var getBuiltIn$5 = getBuiltIn$r;
var fails$4 = fails$1t;
var create$1 = objectCreate;
var createPropertyDescriptor$2 = createPropertyDescriptor$c;
var defineProperty$2 = objectDefineProperty.f;
var defineBuiltIn$4 = defineBuiltIn$o;
var defineBuiltInAccessor$4 = defineBuiltInAccessor$i;
var hasOwn$4 = hasOwnProperty_1;
var anInstance$3 = anInstance$a;
var anObject$2 = anObject$D;
var errorToString = errorToString$2;
var normalizeStringArgument$1 = normalizeStringArgument$5;
var DOMExceptionConstants$1 = domExceptionConstants;
var clearErrorStack$1 = errorStackClear;
var InternalStateModule$2 = internalState;
var DESCRIPTORS$7 = descriptors;
var DOM_EXCEPTION$2 = 'DOMException';
var DATA_CLONE_ERR = 'DATA_CLONE_ERR';
var Error$3 = getBuiltIn$5('Error');
// NodeJS < 17.0 does not expose `DOMException` to global
var NativeDOMException$1 = getBuiltIn$5(DOM_EXCEPTION$2) || function () {
  try {
    // NodeJS < 15.0 does not expose `MessageChannel` to global
    var MessageChannel = getBuiltIn$5('MessageChannel') || tryNodeRequire('worker_threads').MessageChannel;
    // eslint-disable-next-line es/no-weak-map, unicorn/require-post-message-target-origin -- safe
    new MessageChannel().port1.postMessage(new WeakMap());
  } catch (error) {
    if (error.name === DATA_CLONE_ERR && error.code === 25) return error.constructor;
  }
}();
var NativeDOMExceptionPrototype = NativeDOMException$1 && NativeDOMException$1.prototype;
var ErrorPrototype = Error$3.prototype;
var setInternalState$2 = InternalStateModule$2.set;
var getInternalState = InternalStateModule$2.getterFor(DOM_EXCEPTION$2);
var HAS_STACK = 'stack' in new Error$3(DOM_EXCEPTION$2);
var codeFor = function codeFor(name) {
  return hasOwn$4(DOMExceptionConstants$1, name) && DOMExceptionConstants$1[name].m ? DOMExceptionConstants$1[name].c : 0;
};
var $DOMException$1 = function DOMException() {
  anInstance$3(this, DOMExceptionPrototype$1);
  var argumentsLength = arguments.length;
  var message = normalizeStringArgument$1(argumentsLength < 1 ? undefined : arguments[0]);
  var name = normalizeStringArgument$1(argumentsLength < 2 ? undefined : arguments[1], 'Error');
  var code = codeFor(name);
  setInternalState$2(this, {
    type: DOM_EXCEPTION$2,
    name: name,
    message: message,
    code: code
  });
  if (!DESCRIPTORS$7) {
    this.name = name;
    this.message = message;
    this.code = code;
  }
  if (HAS_STACK) {
    var error = new Error$3(message);
    error.name = DOM_EXCEPTION$2;
    defineProperty$2(this, 'stack', createPropertyDescriptor$2(1, clearErrorStack$1(error.stack, 1)));
  }
};
var DOMExceptionPrototype$1 = $DOMException$1.prototype = create$1(ErrorPrototype);
var createGetterDescriptor = function createGetterDescriptor(get) {
  return {
    enumerable: true,
    configurable: true,
    get: get
  };
};
var getterFor = function getterFor(key) {
  return createGetterDescriptor(function () {
    return getInternalState(this)[key];
  });
};
if (DESCRIPTORS$7) {
  // `DOMException.prototype.code` getter
  defineBuiltInAccessor$4(DOMExceptionPrototype$1, 'code', getterFor('code'));
  // `DOMException.prototype.message` getter
  defineBuiltInAccessor$4(DOMExceptionPrototype$1, 'message', getterFor('message'));
  // `DOMException.prototype.name` getter
  defineBuiltInAccessor$4(DOMExceptionPrototype$1, 'name', getterFor('name'));
}
defineProperty$2(DOMExceptionPrototype$1, 'constructor', createPropertyDescriptor$2(1, $DOMException$1));

// FF36- DOMException is a function, but can't be constructed
var INCORRECT_CONSTRUCTOR = fails$4(function () {
  return !(new NativeDOMException$1() instanceof Error$3);
});

// Safari 10.1 / Chrome 32- / IE8- DOMException.prototype.toString bugs
var INCORRECT_TO_STRING = INCORRECT_CONSTRUCTOR || fails$4(function () {
  return ErrorPrototype.toString !== errorToString || String(new NativeDOMException$1(1, 2)) !== '2: 1';
});

// Deno 1.6.3- DOMException.prototype.code just missed
var INCORRECT_CODE = INCORRECT_CONSTRUCTOR || fails$4(function () {
  return new NativeDOMException$1(1, 'DataCloneError').code !== 25;
});

// Deno 1.6.3- DOMException constants just missed
INCORRECT_CONSTRUCTOR || NativeDOMException$1[DATA_CLONE_ERR] !== 25 || NativeDOMExceptionPrototype[DATA_CLONE_ERR] !== 25;
var FORCED_CONSTRUCTOR$1 = INCORRECT_CONSTRUCTOR;

// `DOMException` constructor
// https://webidl.spec.whatwg.org/#idl-DOMException
$$d({
  global: true,
  constructor: true,
  forced: FORCED_CONSTRUCTOR$1
}, {
  DOMException: FORCED_CONSTRUCTOR$1 ? $DOMException$1 : NativeDOMException$1
});
var PolyfilledDOMException$1 = getBuiltIn$5(DOM_EXCEPTION$2);
var PolyfilledDOMExceptionPrototype$1 = PolyfilledDOMException$1.prototype;
if (INCORRECT_TO_STRING && (NativeDOMException$1 === PolyfilledDOMException$1)) {
  defineBuiltIn$4(PolyfilledDOMExceptionPrototype$1, 'toString', errorToString);
}
if (INCORRECT_CODE && DESCRIPTORS$7 && NativeDOMException$1 === PolyfilledDOMException$1) {
  defineBuiltInAccessor$4(PolyfilledDOMExceptionPrototype$1, 'code', createGetterDescriptor(function () {
    return codeFor(anObject$2(this).name);
  }));
}

// `DOMException` constants
for (var key$1 in DOMExceptionConstants$1) if (hasOwn$4(DOMExceptionConstants$1, key$1)) {
  var constant$1 = DOMExceptionConstants$1[key$1];
  var constantName$1 = constant$1.s;
  var descriptor$2 = createPropertyDescriptor$2(6, constant$1.c);
  if (!hasOwn$4(PolyfilledDOMException$1, constantName$1)) {
    defineProperty$2(PolyfilledDOMException$1, constantName$1, descriptor$2);
  }
  if (!hasOwn$4(PolyfilledDOMExceptionPrototype$1, constantName$1)) {
    defineProperty$2(PolyfilledDOMExceptionPrototype$1, constantName$1, descriptor$2);
  }
}

var $$c = _export;
var global$a = global$10;
var getBuiltIn$4 = getBuiltIn$r;
var createPropertyDescriptor$1 = createPropertyDescriptor$c;
var defineProperty$1 = objectDefineProperty.f;
var hasOwn$3 = hasOwnProperty_1;
var anInstance$2 = anInstance$a;
var inheritIfRequired = inheritIfRequired$7;
var normalizeStringArgument = normalizeStringArgument$5;
var DOMExceptionConstants = domExceptionConstants;
var clearErrorStack = errorStackClear;
var DESCRIPTORS$6 = descriptors;
var DOM_EXCEPTION$1 = 'DOMException';
var Error$2 = getBuiltIn$4('Error');
var NativeDOMException = getBuiltIn$4(DOM_EXCEPTION$1);
var $DOMException = function DOMException() {
  anInstance$2(this, DOMExceptionPrototype);
  var argumentsLength = arguments.length;
  var message = normalizeStringArgument(argumentsLength < 1 ? undefined : arguments[0]);
  var name = normalizeStringArgument(argumentsLength < 2 ? undefined : arguments[1], 'Error');
  var that = new NativeDOMException(message, name);
  var error = new Error$2(message);
  error.name = DOM_EXCEPTION$1;
  defineProperty$1(that, 'stack', createPropertyDescriptor$1(1, clearErrorStack(error.stack, 1)));
  inheritIfRequired(that, this, $DOMException);
  return that;
};
var DOMExceptionPrototype = $DOMException.prototype = NativeDOMException.prototype;
var ERROR_HAS_STACK = 'stack' in new Error$2(DOM_EXCEPTION$1);
var DOM_EXCEPTION_HAS_STACK = 'stack' in new NativeDOMException(1, 2);

// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var descriptor$1 = NativeDOMException && DESCRIPTORS$6 && Object.getOwnPropertyDescriptor(global$a, DOM_EXCEPTION$1);

// Bun ~ 0.1.1 DOMException have incorrect descriptor and we can't redefine it
// https://github.com/Jarred-Sumner/bun/issues/399
var BUGGY_DESCRIPTOR = !!descriptor$1 && !(descriptor$1.writable && descriptor$1.configurable);
var FORCED_CONSTRUCTOR = ERROR_HAS_STACK && !BUGGY_DESCRIPTOR && !DOM_EXCEPTION_HAS_STACK;

// `DOMException` constructor patch for `.stack` where it's required
// https://webidl.spec.whatwg.org/#es-DOMException-specialness
$$c({
  global: true,
  constructor: true,
  forced: FORCED_CONSTRUCTOR
}, {
  // TODO: fix export logic
  DOMException: FORCED_CONSTRUCTOR ? $DOMException : NativeDOMException
});
var PolyfilledDOMException = getBuiltIn$4(DOM_EXCEPTION$1);
var PolyfilledDOMExceptionPrototype = PolyfilledDOMException.prototype;
if (PolyfilledDOMExceptionPrototype.constructor !== PolyfilledDOMException) {
  {
    defineProperty$1(PolyfilledDOMExceptionPrototype, 'constructor', createPropertyDescriptor$1(1, PolyfilledDOMException));
  }
  for (var key in DOMExceptionConstants) if (hasOwn$3(DOMExceptionConstants, key)) {
    var constant = DOMExceptionConstants[key];
    var constantName = constant.s;
    if (!hasOwn$3(PolyfilledDOMException, constantName)) {
      defineProperty$1(PolyfilledDOMException, constantName, createPropertyDescriptor$1(6, constant.c));
    }
  }
}

var getBuiltIn$3 = getBuiltIn$r;
var setToStringTag$2 = setToStringTag$e;
var DOM_EXCEPTION = 'DOMException';

// `DOMException.prototype[@@toStringTag]` property
setToStringTag$2(getBuiltIn$3(DOM_EXCEPTION), DOM_EXCEPTION);

var $$b = _export;
var global$9 = global$10;
var clearImmediate = task$1.clear;

// `clearImmediate` method
// http://w3c.github.io/setImmediate/#si-clearImmediate
$$b({
  global: true,
  bind: true,
  enumerable: true,
  forced: global$9.clearImmediate !== clearImmediate
}, {
  clearImmediate: clearImmediate
});

/* global Bun -- Bun case */
var engineIsBun = typeof Bun == 'function' && Bun && typeof Bun.version == 'string';

var global$8 = global$10;
var apply = functionApply$1;
var isCallable$2 = isCallable$y;
var ENGINE_IS_BUN = engineIsBun;
var USER_AGENT = engineUserAgent;
var arraySlice$1 = arraySlice$a;
var validateArgumentsLength$8 = validateArgumentsLength$c;
var Function$1 = global$8.Function;
// dirty IE9- and Bun 0.3.0- checks
var WRAP = /MSIE .\./.test(USER_AGENT) || ENGINE_IS_BUN && function () {
  var version = global$8.Bun.version.split('.');
  return version.length < 3 || version[0] === '0' && (version[1] < 3 || version[1] === '3' && version[2] === '0');
}();

// IE9- / Bun 0.3.0- setTimeout / setInterval / setImmediate additional parameters fix
// https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#timers
// https://github.com/oven-sh/bun/issues/1633
var schedulersFix$3 = function schedulersFix(scheduler, hasTimeArg) {
  var firstParamIndex = hasTimeArg ? 2 : 1;
  return WRAP ? function (handler, timeout /* , ...arguments */) {
    var boundArgs = validateArgumentsLength$8(arguments.length, 1) > firstParamIndex;
    var fn = isCallable$2(handler) ? handler : Function$1(handler);
    var params = boundArgs ? arraySlice$1(arguments, firstParamIndex) : [];
    var callback = boundArgs ? function () {
      apply(fn, this, params);
    } : fn;
    return hasTimeArg ? scheduler(callback, timeout) : scheduler(callback);
  } : scheduler;
};

var $$a = _export;
var global$7 = global$10;
var setTask = task$1.set;
var schedulersFix$2 = schedulersFix$3;

// https://github.com/oven-sh/bun/issues/1633
var setImmediate = global$7.setImmediate ? schedulersFix$2(setTask, false) : setTask;

// `setImmediate` method
// http://w3c.github.io/setImmediate/#si-setImmediate
$$a({
  global: true,
  bind: true,
  enumerable: true,
  forced: global$7.setImmediate !== setImmediate
}, {
  setImmediate: setImmediate
});

var $$9 = _export;
var globalThis$1 = global$10;
var microtask = microtask_1;
var aCallable = aCallable$o;
var validateArgumentsLength$7 = validateArgumentsLength$c;
var fails$3 = fails$1t;
var DESCRIPTORS$5 = descriptors;

// Bun ~ 1.0.30 bug
// https://github.com/oven-sh/bun/issues/9249
var WRONG_ARITY$1 = fails$3(function () {
  // getOwnPropertyDescriptor for prevent experimental warning in Node 11
  // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
  return DESCRIPTORS$5 && Object.getOwnPropertyDescriptor(globalThis$1, 'queueMicrotask').value.length !== 1;
});

// `queueMicrotask` method
// https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#dom-queuemicrotask
$$9({
  global: true,
  enumerable: true,
  dontCallGetSet: true,
  forced: WRONG_ARITY$1
}, {
  queueMicrotask: function queueMicrotask(fn) {
    validateArgumentsLength$7(arguments.length, 1);
    microtask(aCallable(fn));
  }
});

var $$8 = _export;
var global$6 = global$10;
var defineBuiltInAccessor$3 = defineBuiltInAccessor$i;
var DESCRIPTORS$4 = descriptors;
var $TypeError = TypeError;
// eslint-disable-next-line es/no-object-defineproperty -- safe
var defineProperty = Object.defineProperty;
var INCORRECT_VALUE = global$6.self !== global$6;

// `self` getter
// https://html.spec.whatwg.org/multipage/window-object.html#dom-self
try {
  if (DESCRIPTORS$4) {
    // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
    var descriptor = Object.getOwnPropertyDescriptor(global$6, 'self');
    // some engines have `self`, but with incorrect descriptor
    // https://github.com/denoland/deno/issues/15765
    if (INCORRECT_VALUE || !descriptor || !descriptor.get || !descriptor.enumerable) {
      defineBuiltInAccessor$3(global$6, 'self', {
        get: function self() {
          return global$6;
        },
        set: function self(value) {
          if (this !== global$6) throw new $TypeError('Illegal invocation');
          defineProperty(global$6, 'self', {
            value: value,
            writable: true,
            configurable: true,
            enumerable: true
          });
        },
        configurable: true,
        enumerable: true
      });
    }
  } else $$8({
    global: true,
    simple: true,
    forced: INCORRECT_VALUE
  }, {
    self: global$6
  });
} catch (error) {/* empty */}

var $$7 = _export;
var global$5 = global$10;
var getBuiltIn$2 = getBuiltIn$r;
var uncurryThis$6 = functionUncurryThis;
var fails$2 = fails$1t;
var uid = uid$6;
var isCallable$1 = isCallable$y;
var isConstructor = isConstructor$6;
var isNullOrUndefined = isNullOrUndefined$e;
var isObject$1 = isObject$B;
var isSymbol = isSymbol$7;
var iterate = iterate$e;
var anObject$1 = anObject$D;
var classof$1 = classof$n;
var hasOwn$2 = hasOwnProperty_1;
var createProperty = createProperty$8;
var createNonEnumerableProperty = createNonEnumerableProperty$f;
var lengthOfArrayLike = lengthOfArrayLike$s;
var validateArgumentsLength$6 = validateArgumentsLength$c;
var getRegExpFlags = regexpGetFlags;
var MapHelpers = mapHelpers;
var SetHelpers = setHelpers;
var setIterate = setIterate$1;
var detachTransferable = detachTransferable$2;
var ERROR_STACK_INSTALLABLE = errorStackInstallable;
var PROPER_STRUCTURED_CLONE_TRANSFER = structuredCloneProperTransfer;
var Object$1 = global$5.Object;
var Array$1 = global$5.Array;
var Date$1 = global$5.Date;
var Error$1 = global$5.Error;
var TypeError$3 = global$5.TypeError;
var PerformanceMark = global$5.PerformanceMark;
var DOMException = getBuiltIn$2('DOMException');
var Map$1 = MapHelpers.Map;
var mapHas = MapHelpers.has;
var mapGet = MapHelpers.get;
var mapSet = MapHelpers.set;
var Set$1 = SetHelpers.Set;
var setAdd = SetHelpers.add;
var setHas = SetHelpers.has;
var objectKeys = getBuiltIn$2('Object', 'keys');
var push$4 = uncurryThis$6([].push);
var thisBooleanValue = uncurryThis$6(true.valueOf);
var thisNumberValue = uncurryThis$6(1.0.valueOf);
var thisStringValue = uncurryThis$6(''.valueOf);
var thisTimeValue = uncurryThis$6(Date$1.prototype.getTime);
var PERFORMANCE_MARK = uid('structuredClone');
var DATA_CLONE_ERROR = 'DataCloneError';
var TRANSFERRING = 'Transferring';
var checkBasicSemantic = function checkBasicSemantic(structuredCloneImplementation) {
  return !fails$2(function () {
    var set1 = new global$5.Set([7]);
    var set2 = structuredCloneImplementation(set1);
    var number = structuredCloneImplementation(Object$1(7));
    return set2 === set1 || !set2.has(7) || !isObject$1(number) || +number !== 7;
  }) && structuredCloneImplementation;
};
var checkErrorsCloning = function checkErrorsCloning(structuredCloneImplementation, $Error) {
  return !fails$2(function () {
    var error = new $Error();
    var test = structuredCloneImplementation({
      a: error,
      b: error
    });
    return !(test && test.a === test.b && test.a instanceof $Error && test.a.stack === error.stack);
  });
};

// https://github.com/whatwg/html/pull/5749
var checkNewErrorsCloningSemantic = function checkNewErrorsCloningSemantic(structuredCloneImplementation) {
  return !fails$2(function () {
    var test = structuredCloneImplementation(new global$5.AggregateError([1], PERFORMANCE_MARK, {
      cause: 3
    }));
    return test.name !== 'AggregateError' || test.errors[0] !== 1 || test.message !== PERFORMANCE_MARK || test.cause !== 3;
  });
};

// FF94+, Safari 15.4+, Chrome 98+, NodeJS 17.0+, Deno 1.13+
// FF<103 and Safari implementations can't clone errors
// https://bugzilla.mozilla.org/show_bug.cgi?id=1556604
// FF103 can clone errors, but `.stack` of clone is an empty string
// https://bugzilla.mozilla.org/show_bug.cgi?id=1778762
// FF104+ fixed it on usual errors, but not on DOMExceptions
// https://bugzilla.mozilla.org/show_bug.cgi?id=1777321
// Chrome <102 returns `null` if cloned object contains multiple references to one error
// https://bugs.chromium.org/p/v8/issues/detail?id=12542
// NodeJS implementation can't clone DOMExceptions
// https://github.com/nodejs/node/issues/41038
// only FF103+ supports new (html/5749) error cloning semantic
var nativeStructuredClone = global$5.structuredClone;
var FORCED_REPLACEMENT = !checkErrorsCloning(nativeStructuredClone, Error$1) || !checkErrorsCloning(nativeStructuredClone, DOMException) || !checkNewErrorsCloningSemantic(nativeStructuredClone);

// Chrome 82+, Safari 14.1+, Deno 1.11+
// Chrome 78-81 implementation swaps `.name` and `.message` of cloned `DOMException`
// Chrome returns `null` if cloned object contains multiple references to one error
// Safari 14.1 implementation doesn't clone some `RegExp` flags, so requires a workaround
// Safari implementation can't clone errors
// Deno 1.2-1.10 implementations too naive
// NodeJS 16.0+ does not have `PerformanceMark` constructor
// NodeJS <17.2 structured cloning implementation from `performance.mark` is too naive
// and can't clone, for example, `RegExp` or some boxed primitives
// https://github.com/nodejs/node/issues/40840
// no one of those implementations supports new (html/5749) error cloning semantic
var structuredCloneFromMark = !nativeStructuredClone && checkBasicSemantic(function (value) {
  return new PerformanceMark(PERFORMANCE_MARK, {
    detail: value
  }).detail;
});
var nativeRestrictedStructuredClone = checkBasicSemantic(nativeStructuredClone) || structuredCloneFromMark;
var throwUncloneable = function throwUncloneable(type) {
  throw new DOMException('Uncloneable type: ' + type, DATA_CLONE_ERROR);
};
var throwUnpolyfillable = function throwUnpolyfillable(type, action) {
  throw new DOMException((action || 'Cloning') + ' of ' + type + ' cannot be properly polyfilled in this engine', DATA_CLONE_ERROR);
};
var tryNativeRestrictedStructuredClone = function tryNativeRestrictedStructuredClone(value, type) {
  if (!nativeRestrictedStructuredClone) throwUnpolyfillable(type);
  return nativeRestrictedStructuredClone(value);
};
var createDataTransfer = function createDataTransfer() {
  var dataTransfer;
  try {
    dataTransfer = new global$5.DataTransfer();
  } catch (error) {
    try {
      dataTransfer = new global$5.ClipboardEvent('').clipboardData;
    } catch (error2) {/* empty */}
  }
  return dataTransfer && dataTransfer.items && dataTransfer.files ? dataTransfer : null;
};
var cloneBuffer = function cloneBuffer(value, map, $type) {
  if (mapHas(map, value)) return mapGet(map, value);
  var type = $type || classof$1(value);
  var clone, length, options, source, target, i;
  if (type === 'SharedArrayBuffer') {
    if (nativeRestrictedStructuredClone) clone = nativeRestrictedStructuredClone(value);
    // SharedArrayBuffer should use shared memory, we can't polyfill it, so return the original
    else clone = value;
  } else {
    var DataView = global$5.DataView;

    // `ArrayBuffer#slice` is not available in IE10
    // `ArrayBuffer#slice` and `DataView` are not available in old FF
    if (!DataView && !isCallable$1(value.slice)) throwUnpolyfillable('ArrayBuffer');
    // detached buffers throws in `DataView` and `.slice`
    try {
      if (isCallable$1(value.slice) && !value.resizable) {
        clone = value.slice(0);
      } else {
        length = value.byteLength;
        options = 'maxByteLength' in value ? {
          maxByteLength: value.maxByteLength
        } : undefined;
        // eslint-disable-next-line es/no-resizable-and-growable-arraybuffers -- safe
        clone = new ArrayBuffer(length, options);
        source = new DataView(value);
        target = new DataView(clone);
        for (i = 0; i < length; i++) {
          target.setUint8(i, source.getUint8(i));
        }
      }
    } catch (error) {
      throw new DOMException('ArrayBuffer is detached', DATA_CLONE_ERROR);
    }
  }
  mapSet(map, value, clone);
  return clone;
};
var cloneView = function cloneView(value, type, offset, length, map) {
  var C = global$5[type];
  // in some old engines like Safari 9, typeof C is 'object'
  // on Uint8ClampedArray or some other constructors
  if (!isObject$1(C)) throwUnpolyfillable(type);
  return new C(cloneBuffer(value.buffer, map), offset, length);
};
var structuredCloneInternal = function structuredCloneInternal(value, map) {
  if (isSymbol(value)) throwUncloneable('Symbol');
  if (!isObject$1(value)) return value;
  // effectively preserves circular references
  if (map) {
    if (mapHas(map, value)) return mapGet(map, value);
  } else map = new Map$1();
  var type = classof$1(value);
  var C, name, cloned, dataTransfer, i, length, keys, key;
  switch (type) {
    case 'Array':
      cloned = Array$1(lengthOfArrayLike(value));
      break;
    case 'Object':
      cloned = {};
      break;
    case 'Map':
      cloned = new Map$1();
      break;
    case 'Set':
      cloned = new Set$1();
      break;
    case 'RegExp':
      // in this block because of a Safari 14.1 bug
      // old FF does not clone regexes passed to the constructor, so get the source and flags directly
      cloned = new RegExp(value.source, getRegExpFlags(value));
      break;
    case 'Error':
      name = value.name;
      switch (name) {
        case 'AggregateError':
          cloned = new (getBuiltIn$2(name))([]);
          break;
        case 'EvalError':
        case 'RangeError':
        case 'ReferenceError':
        case 'SuppressedError':
        case 'SyntaxError':
        case 'TypeError':
        case 'URIError':
          cloned = new (getBuiltIn$2(name))();
          break;
        case 'CompileError':
        case 'LinkError':
        case 'RuntimeError':
          cloned = new (getBuiltIn$2('WebAssembly', name))();
          break;
        default:
          cloned = new Error$1();
      }
      break;
    case 'DOMException':
      cloned = new DOMException(value.message, value.name);
      break;
    case 'ArrayBuffer':
    case 'SharedArrayBuffer':
      cloned = cloneBuffer(value, map, type);
      break;
    case 'DataView':
    case 'Int8Array':
    case 'Uint8Array':
    case 'Uint8ClampedArray':
    case 'Int16Array':
    case 'Uint16Array':
    case 'Int32Array':
    case 'Uint32Array':
    case 'Float16Array':
    case 'Float32Array':
    case 'Float64Array':
    case 'BigInt64Array':
    case 'BigUint64Array':
      length = type === 'DataView' ? value.byteLength : value.length;
      cloned = cloneView(value, type, value.byteOffset, length, map);
      break;
    case 'DOMQuad':
      try {
        cloned = new DOMQuad(structuredCloneInternal(value.p1, map), structuredCloneInternal(value.p2, map), structuredCloneInternal(value.p3, map), structuredCloneInternal(value.p4, map));
      } catch (error) {
        cloned = tryNativeRestrictedStructuredClone(value, type);
      }
      break;
    case 'File':
      if (nativeRestrictedStructuredClone) try {
        cloned = nativeRestrictedStructuredClone(value);
        // NodeJS 20.0.0 bug, https://github.com/nodejs/node/issues/47612
        if (classof$1(cloned) !== type) cloned = undefined;
      } catch (error) {/* empty */}
      if (!cloned) try {
        cloned = new File([value], value.name, value);
      } catch (error) {/* empty */}
      if (!cloned) throwUnpolyfillable(type);
      break;
    case 'FileList':
      dataTransfer = createDataTransfer();
      if (dataTransfer) {
        for (i = 0, length = lengthOfArrayLike(value); i < length; i++) {
          dataTransfer.items.add(structuredCloneInternal(value[i], map));
        }
        cloned = dataTransfer.files;
      } else cloned = tryNativeRestrictedStructuredClone(value, type);
      break;
    case 'ImageData':
      // Safari 9 ImageData is a constructor, but typeof ImageData is 'object'
      try {
        cloned = new ImageData(structuredCloneInternal(value.data, map), value.width, value.height, {
          colorSpace: value.colorSpace
        });
      } catch (error) {
        cloned = tryNativeRestrictedStructuredClone(value, type);
      }
      break;
    default:
      if (nativeRestrictedStructuredClone) {
        cloned = nativeRestrictedStructuredClone(value);
      } else switch (type) {
        case 'BigInt':
          // can be a 3rd party polyfill
          cloned = Object$1(value.valueOf());
          break;
        case 'Boolean':
          cloned = Object$1(thisBooleanValue(value));
          break;
        case 'Number':
          cloned = Object$1(thisNumberValue(value));
          break;
        case 'String':
          cloned = Object$1(thisStringValue(value));
          break;
        case 'Date':
          cloned = new Date$1(thisTimeValue(value));
          break;
        case 'Blob':
          try {
            cloned = value.slice(0, value.size, value.type);
          } catch (error) {
            throwUnpolyfillable(type);
          }
          break;
        case 'DOMPoint':
        case 'DOMPointReadOnly':
          C = global$5[type];
          try {
            cloned = C.fromPoint ? C.fromPoint(value) : new C(value.x, value.y, value.z, value.w);
          } catch (error) {
            throwUnpolyfillable(type);
          }
          break;
        case 'DOMRect':
        case 'DOMRectReadOnly':
          C = global$5[type];
          try {
            cloned = C.fromRect ? C.fromRect(value) : new C(value.x, value.y, value.width, value.height);
          } catch (error) {
            throwUnpolyfillable(type);
          }
          break;
        case 'DOMMatrix':
        case 'DOMMatrixReadOnly':
          C = global$5[type];
          try {
            cloned = C.fromMatrix ? C.fromMatrix(value) : new C(value);
          } catch (error) {
            throwUnpolyfillable(type);
          }
          break;
        case 'AudioData':
        case 'VideoFrame':
          if (!isCallable$1(value.clone)) throwUnpolyfillable(type);
          try {
            cloned = value.clone();
          } catch (error) {
            throwUncloneable(type);
          }
          break;
        case 'CropTarget':
        case 'CryptoKey':
        case 'FileSystemDirectoryHandle':
        case 'FileSystemFileHandle':
        case 'FileSystemHandle':
        case 'GPUCompilationInfo':
        case 'GPUCompilationMessage':
        case 'ImageBitmap':
        case 'RTCCertificate':
        case 'WebAssembly.Module':
          throwUnpolyfillable(type);
        // break omitted
        default:
          throwUncloneable(type);
      }
  }
  mapSet(map, value, cloned);
  switch (type) {
    case 'Array':
    case 'Object':
      keys = objectKeys(value);
      for (i = 0, length = lengthOfArrayLike(keys); i < length; i++) {
        key = keys[i];
        createProperty(cloned, key, structuredCloneInternal(value[key], map));
      }
      break;
    case 'Map':
      value.forEach(function (v, k) {
        mapSet(cloned, structuredCloneInternal(k, map), structuredCloneInternal(v, map));
      });
      break;
    case 'Set':
      value.forEach(function (v) {
        setAdd(cloned, structuredCloneInternal(v, map));
      });
      break;
    case 'Error':
      createNonEnumerableProperty(cloned, 'message', structuredCloneInternal(value.message, map));
      if (hasOwn$2(value, 'cause')) {
        createNonEnumerableProperty(cloned, 'cause', structuredCloneInternal(value.cause, map));
      }
      if (name === 'AggregateError') {
        cloned.errors = structuredCloneInternal(value.errors, map);
      } else if (name === 'SuppressedError') {
        cloned.error = structuredCloneInternal(value.error, map);
        cloned.suppressed = structuredCloneInternal(value.suppressed, map);
      }
    // break omitted
    case 'DOMException':
      if (ERROR_STACK_INSTALLABLE) {
        createNonEnumerableProperty(cloned, 'stack', structuredCloneInternal(value.stack, map));
      }
  }
  return cloned;
};
var tryToTransfer = function tryToTransfer(rawTransfer, map) {
  if (!isObject$1(rawTransfer)) throw new TypeError$3('Transfer option cannot be converted to a sequence');
  var transfer = [];
  iterate(rawTransfer, function (value) {
    push$4(transfer, anObject$1(value));
  });
  var i = 0;
  var length = lengthOfArrayLike(transfer);
  var buffers = new Set$1();
  var value, type, C, transferred, canvas, context;
  while (i < length) {
    value = transfer[i++];
    type = classof$1(value);
    if (type === 'ArrayBuffer' ? setHas(buffers, value) : mapHas(map, value)) {
      throw new DOMException('Duplicate transferable', DATA_CLONE_ERROR);
    }
    if (type === 'ArrayBuffer') {
      setAdd(buffers, value);
      continue;
    }
    if (PROPER_STRUCTURED_CLONE_TRANSFER) {
      transferred = nativeStructuredClone(value, {
        transfer: [value]
      });
    } else switch (type) {
      case 'ImageBitmap':
        C = global$5.OffscreenCanvas;
        if (!isConstructor(C)) throwUnpolyfillable(type, TRANSFERRING);
        try {
          canvas = new C(value.width, value.height);
          context = canvas.getContext('bitmaprenderer');
          context.transferFromImageBitmap(value);
          transferred = canvas.transferToImageBitmap();
        } catch (error) {/* empty */}
        break;
      case 'AudioData':
      case 'VideoFrame':
        if (!isCallable$1(value.clone) || !isCallable$1(value.close)) throwUnpolyfillable(type, TRANSFERRING);
        try {
          transferred = value.clone();
          value.close();
        } catch (error) {/* empty */}
        break;
      case 'MediaSourceHandle':
      case 'MessagePort':
      case 'OffscreenCanvas':
      case 'ReadableStream':
      case 'TransformStream':
      case 'WritableStream':
        throwUnpolyfillable(type, TRANSFERRING);
    }
    if (transferred === undefined) throw new DOMException('This object cannot be transferred: ' + type, DATA_CLONE_ERROR);
    mapSet(map, value, transferred);
  }
  return buffers;
};
var detachBuffers = function detachBuffers(buffers) {
  setIterate(buffers, function (buffer) {
    if (PROPER_STRUCTURED_CLONE_TRANSFER) {
      nativeRestrictedStructuredClone(buffer, {
        transfer: [buffer]
      });
    } else if (isCallable$1(buffer.transfer)) {
      buffer.transfer();
    } else if (detachTransferable) {
      detachTransferable(buffer);
    } else {
      throwUnpolyfillable('ArrayBuffer', TRANSFERRING);
    }
  });
};

// `structuredClone` method
// https://html.spec.whatwg.org/multipage/structured-data.html#dom-structuredclone
$$7({
  global: true,
  enumerable: true,
  sham: !PROPER_STRUCTURED_CLONE_TRANSFER,
  forced: FORCED_REPLACEMENT
}, {
  structuredClone: function structuredClone(value /* , { transfer } */) {
    var options = validateArgumentsLength$6(arguments.length, 1) > 1 && !isNullOrUndefined(arguments[1]) ? anObject$1(arguments[1]) : undefined;
    var transfer = options ? options.transfer : undefined;
    var map, buffers;
    if (transfer !== undefined) {
      map = new Map$1();
      buffers = tryToTransfer(transfer, map);
    }
    var clone = structuredCloneInternal(value, map);

    // since of an issue with cloning views of transferred buffers, we a forced to detach them later
    // https://github.com/zloirock/core-js/issues/1265
    if (buffers) detachBuffers(buffers);
    return clone;
  }
});

var $$6 = _export;
var global$4 = global$10;
var schedulersFix$1 = schedulersFix$3;
var setInterval = schedulersFix$1(global$4.setInterval, true);

// Bun / IE9- setInterval additional parameters fix
// https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#dom-setinterval
$$6({
  global: true,
  bind: true,
  forced: global$4.setInterval !== setInterval
}, {
  setInterval: setInterval
});

var $$5 = _export;
var global$3 = global$10;
var schedulersFix = schedulersFix$3;
var setTimeout$1 = schedulersFix(global$3.setTimeout, true);

// Bun / IE9- setTimeout additional parameters fix
// https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#dom-settimeout
$$5({
  global: true,
  bind: true,
  forced: global$3.setTimeout !== setTimeout$1
}, {
  setTimeout: setTimeout$1
});

var fails$1 = fails$1t;
var wellKnownSymbol$1 = wellKnownSymbol$z;
var DESCRIPTORS$3 = descriptors;
var IS_PURE = isPure;
var ITERATOR$1 = wellKnownSymbol$1('iterator');
var urlConstructorDetection = !fails$1(function () {
  // eslint-disable-next-line unicorn/relative-url-style -- required for testing
  var url = new URL('b?a=1&b=2&c=3', 'http://a');
  var params = url.searchParams;
  var params2 = new URLSearchParams('a=1&a=2&b=3');
  var result = '';
  url.pathname = 'c%20d';
  params.forEach(function (value, key) {
    params['delete']('b');
    result += key + value;
  });
  params2['delete']('a', 2);
  // `undefined` case is a Chromium 117 bug
  // https://bugs.chromium.org/p/v8/issues/detail?id=14222
  params2['delete']('b', undefined);
  return IS_PURE && (!url.toJSON || !params2.has('a', 1) || params2.has('a', 2) || !params2.has('a', undefined) || params2.has('b')) || !params.size && (IS_PURE || !DESCRIPTORS$3) || !params.sort || url.href !== 'http://a/c%20d?a=1&c=3' || params.get('c') !== '3' || String(new URLSearchParams('?a=1')) !== 'a=1' || !params[ITERATOR$1]
  // throws in Edge
  || new URL('https://a@b').username !== 'a' || new URLSearchParams(new URLSearchParams('a=b')).get('a') !== 'b'
  // not punycoded in Edge
  || new URL('http://тест').host !== 'xn--e1aybc'
  // not escaped in Chrome 62-
  || new URL('http://a#б').hash !== '#%D0%B1'
  // fails in Chrome 66-
  || result !== 'a1c3'
  // throws in Safari
  || new URL('http://x', undefined).host !== 'x';
});

// based on https://github.com/bestiejs/punycode.js/blob/master/punycode.js
var uncurryThis$5 = functionUncurryThis;
var maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1
var base = 36;
var tMin = 1;
var tMax = 26;
var skew = 38;
var damp = 700;
var initialBias = 72;
var initialN = 128; // 0x80
var delimiter = '-'; // '\x2D'
var regexNonASCII = /[^\0-\u007E]/; // non-ASCII chars
var regexSeparators = /[.\u3002\uFF0E\uFF61]/g; // RFC 3490 separators
var OVERFLOW_ERROR = 'Overflow: input needs wider integers to process';
var baseMinusTMin = base - tMin;
var $RangeError = RangeError;
var exec$1 = uncurryThis$5(regexSeparators.exec);
var floor$1 = Math.floor;
var fromCharCode = String.fromCharCode;
var charCodeAt = uncurryThis$5(''.charCodeAt);
var join$2 = uncurryThis$5([].join);
var push$3 = uncurryThis$5([].push);
var replace$2 = uncurryThis$5(''.replace);
var split$2 = uncurryThis$5(''.split);
var toLowerCase$1 = uncurryThis$5(''.toLowerCase);

/**
 * Creates an array containing the numeric code points of each Unicode
 * character in the string. While JavaScript uses UCS-2 internally,
 * this function will convert a pair of surrogate halves (each of which
 * UCS-2 exposes as separate characters) into a single code point,
 * matching UTF-16.
 */
var ucs2decode = function ucs2decode(string) {
  var output = [];
  var counter = 0;
  var length = string.length;
  while (counter < length) {
    var value = charCodeAt(string, counter++);
    if (value >= 0xD800 && value <= 0xDBFF && counter < length) {
      // It's a high surrogate, and there is a next character.
      var extra = charCodeAt(string, counter++);
      if ((extra & 0xFC00) === 0xDC00) {
        // Low surrogate.
        push$3(output, ((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);
      } else {
        // It's an unmatched surrogate; only append this code unit, in case the
        // next code unit is the high surrogate of a surrogate pair.
        push$3(output, value);
        counter--;
      }
    } else {
      push$3(output, value);
    }
  }
  return output;
};

/**
 * Converts a digit/integer into a basic code point.
 */
var digitToBasic = function digitToBasic(digit) {
  //  0..25 map to ASCII a..z or A..Z
  // 26..35 map to ASCII 0..9
  return digit + 22 + 75 * (digit < 26);
};

/**
 * Bias adaptation function as per section 3.4 of RFC 3492.
 * https://tools.ietf.org/html/rfc3492#section-3.4
 */
var adapt = function adapt(delta, numPoints, firstTime) {
  var k = 0;
  delta = firstTime ? floor$1(delta / damp) : delta >> 1;
  delta += floor$1(delta / numPoints);
  while (delta > baseMinusTMin * tMax >> 1) {
    delta = floor$1(delta / baseMinusTMin);
    k += base;
  }
  return floor$1(k + (baseMinusTMin + 1) * delta / (delta + skew));
};

/**
 * Converts a string of Unicode symbols (e.g. a domain name label) to a
 * Punycode string of ASCII-only symbols.
 */
var encode = function encode(input) {
  var output = [];

  // Convert the input in UCS-2 to an array of Unicode code points.
  input = ucs2decode(input);

  // Cache the length.
  var inputLength = input.length;

  // Initialize the state.
  var n = initialN;
  var delta = 0;
  var bias = initialBias;
  var i, currentValue;

  // Handle the basic code points.
  for (i = 0; i < input.length; i++) {
    currentValue = input[i];
    if (currentValue < 0x80) {
      push$3(output, fromCharCode(currentValue));
    }
  }
  var basicLength = output.length; // number of basic code points.
  var handledCPCount = basicLength; // number of code points that have been handled;

  // Finish the basic string with a delimiter unless it's empty.
  if (basicLength) {
    push$3(output, delimiter);
  }

  // Main encoding loop:
  while (handledCPCount < inputLength) {
    // All non-basic code points < n have been handled already. Find the next larger one:
    var m = maxInt;
    for (i = 0; i < input.length; i++) {
      currentValue = input[i];
      if (currentValue >= n && currentValue < m) {
        m = currentValue;
      }
    }

    // Increase `delta` enough to advance the decoder's <n,i> state to <m,0>, but guard against overflow.
    var handledCPCountPlusOne = handledCPCount + 1;
    if (m - n > floor$1((maxInt - delta) / handledCPCountPlusOne)) {
      throw new $RangeError(OVERFLOW_ERROR);
    }
    delta += (m - n) * handledCPCountPlusOne;
    n = m;
    for (i = 0; i < input.length; i++) {
      currentValue = input[i];
      if (currentValue < n && ++delta > maxInt) {
        throw new $RangeError(OVERFLOW_ERROR);
      }
      if (currentValue === n) {
        // Represent delta as a generalized variable-length integer.
        var q = delta;
        var k = base;
        while (true) {
          var t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;
          if (q < t) break;
          var qMinusT = q - t;
          var baseMinusT = base - t;
          push$3(output, fromCharCode(digitToBasic(t + qMinusT % baseMinusT)));
          q = floor$1(qMinusT / baseMinusT);
          k += base;
        }
        push$3(output, fromCharCode(digitToBasic(q)));
        bias = adapt(delta, handledCPCountPlusOne, handledCPCount === basicLength);
        delta = 0;
        handledCPCount++;
      }
    }
    delta++;
    n++;
  }
  return join$2(output, '');
};
var stringPunycodeToAscii = function stringPunycodeToAscii(input) {
  var encoded = [];
  var labels = split$2(replace$2(toLowerCase$1(input), regexSeparators, "."), '.');
  var i, label;
  for (i = 0; i < labels.length; i++) {
    label = labels[i];
    push$3(encoded, exec$1(regexNonASCII, label) ? 'xn--' + encode(label) : label);
  }
  return join$2(encoded, '.');
};

// TODO: in core-js@4, move /modules/ dependencies to public entries for better optimization by tools like `preset-env`

var $$4 = _export;
var global$2 = global$10;
var safeGetBuiltIn = safeGetBuiltIn$2;
var call$1 = functionCall;
var uncurryThis$4 = functionUncurryThis;
var DESCRIPTORS$2 = descriptors;
var USE_NATIVE_URL$3 = urlConstructorDetection;
var defineBuiltIn$3 = defineBuiltIn$o;
var defineBuiltInAccessor$2 = defineBuiltInAccessor$i;
var defineBuiltIns = defineBuiltIns$5;
var setToStringTag$1 = setToStringTag$e;
var createIteratorConstructor = iteratorCreateConstructor;
var InternalStateModule$1 = internalState;
var anInstance$1 = anInstance$a;
var isCallable = isCallable$y;
var hasOwn$1 = hasOwnProperty_1;
var bind$2 = functionBindContext;
var classof = classof$n;
var anObject = anObject$D;
var isObject = isObject$B;
var $toString$1 = toString$D;
var create = objectCreate;
var createPropertyDescriptor = createPropertyDescriptor$c;
var getIterator = getIterator$4;
var getIteratorMethod = getIteratorMethod$5;
var createIterResultObject = createIterResultObject$5;
var validateArgumentsLength$5 = validateArgumentsLength$c;
var wellKnownSymbol = wellKnownSymbol$z;
var arraySort = arraySort$1;
var ITERATOR = wellKnownSymbol('iterator');
var URL_SEARCH_PARAMS = 'URLSearchParams';
var URL_SEARCH_PARAMS_ITERATOR = URL_SEARCH_PARAMS + 'Iterator';
var setInternalState$1 = InternalStateModule$1.set;
var getInternalParamsState = InternalStateModule$1.getterFor(URL_SEARCH_PARAMS);
var getInternalIteratorState = InternalStateModule$1.getterFor(URL_SEARCH_PARAMS_ITERATOR);
var nativeFetch = safeGetBuiltIn('fetch');
var NativeRequest = safeGetBuiltIn('Request');
var Headers = safeGetBuiltIn('Headers');
var RequestPrototype = NativeRequest && NativeRequest.prototype;
var HeadersPrototype = Headers && Headers.prototype;
var RegExp$1 = global$2.RegExp;
var TypeError$2 = global$2.TypeError;
var decodeURIComponent = global$2.decodeURIComponent;
var encodeURIComponent$1 = global$2.encodeURIComponent;
var charAt$1 = uncurryThis$4(''.charAt);
var join$1 = uncurryThis$4([].join);
var push$2 = uncurryThis$4([].push);
var replace$1 = uncurryThis$4(''.replace);
var shift$1 = uncurryThis$4([].shift);
var splice = uncurryThis$4([].splice);
var split$1 = uncurryThis$4(''.split);
var stringSlice$1 = uncurryThis$4(''.slice);
var plus = /\+/g;
var sequences = Array(4);
var percentSequence = function percentSequence(bytes) {
  return sequences[bytes - 1] || (sequences[bytes - 1] = RegExp$1('((?:%[\\da-f]{2}){' + bytes + '})', 'gi'));
};
var percentDecode = function percentDecode(sequence) {
  try {
    return decodeURIComponent(sequence);
  } catch (error) {
    return sequence;
  }
};
var deserialize = function deserialize(it) {
  var result = replace$1(it, plus, ' ');
  var bytes = 4;
  try {
    return decodeURIComponent(result);
  } catch (error) {
    while (bytes) {
      result = replace$1(result, percentSequence(bytes--), percentDecode);
    }
    return result;
  }
};
var find = /[!'()~]|%20/g;
var replacements = {
  '!': '%21',
  "'": '%27',
  '(': '%28',
  ')': '%29',
  '~': '%7E',
  '%20': '+'
};
var replacer = function replacer(match) {
  return replacements[match];
};
var _serialize = function serialize(it) {
  return replace$1(encodeURIComponent$1(it), find, replacer);
};
var URLSearchParamsIterator = createIteratorConstructor(function Iterator(params, kind) {
  setInternalState$1(this, {
    type: URL_SEARCH_PARAMS_ITERATOR,
    target: getInternalParamsState(params).entries,
    index: 0,
    kind: kind
  });
}, URL_SEARCH_PARAMS, function next() {
  var state = getInternalIteratorState(this);
  var target = state.target;
  var index = state.index++;
  if (!target || index >= target.length) {
    state.target = undefined;
    return createIterResultObject(undefined, true);
  }
  var entry = target[index];
  switch (state.kind) {
    case 'keys':
      return createIterResultObject(entry.key, false);
    case 'values':
      return createIterResultObject(entry.value, false);
  }
  return createIterResultObject([entry.key, entry.value], false);
}, true);
var URLSearchParamsState = function URLSearchParamsState(init) {
  this.entries = [];
  this.url = null;
  if (init !== undefined) {
    if (isObject(init)) this.parseObject(init);else this.parseQuery(typeof init == 'string' ? charAt$1(init, 0) === '?' ? stringSlice$1(init, 1) : init : $toString$1(init));
  }
};
URLSearchParamsState.prototype = {
  type: URL_SEARCH_PARAMS,
  bindURL: function bindURL(url) {
    this.url = url;
    this.update();
  },
  parseObject: function parseObject(object) {
    var entries = this.entries;
    var iteratorMethod = getIteratorMethod(object);
    var iterator, next, step, entryIterator, entryNext, first, second;
    if (iteratorMethod) {
      iterator = getIterator(object, iteratorMethod);
      next = iterator.next;
      while (!(step = call$1(next, iterator)).done) {
        entryIterator = getIterator(anObject(step.value));
        entryNext = entryIterator.next;
        if ((first = call$1(entryNext, entryIterator)).done || (second = call$1(entryNext, entryIterator)).done || !call$1(entryNext, entryIterator).done) throw new TypeError$2('Expected sequence with length 2');
        push$2(entries, {
          key: $toString$1(first.value),
          value: $toString$1(second.value)
        });
      }
    } else for (var key in object) if (hasOwn$1(object, key)) {
      push$2(entries, {
        key: key,
        value: $toString$1(object[key])
      });
    }
  },
  parseQuery: function parseQuery(query) {
    if (query) {
      var entries = this.entries;
      var attributes = split$1(query, '&');
      var index = 0;
      var attribute, entry;
      while (index < attributes.length) {
        attribute = attributes[index++];
        if (attribute.length) {
          entry = split$1(attribute, '=');
          push$2(entries, {
            key: deserialize(shift$1(entry)),
            value: deserialize(join$1(entry, '='))
          });
        }
      }
    }
  },
  serialize: function serialize() {
    var entries = this.entries;
    var result = [];
    var index = 0;
    var entry;
    while (index < entries.length) {
      entry = entries[index++];
      push$2(result, _serialize(entry.key) + '=' + _serialize(entry.value));
    }
    return join$1(result, '&');
  },
  update: function update() {
    this.entries.length = 0;
    this.parseQuery(this.url.query);
  },
  updateURL: function updateURL() {
    if (this.url) this.url.update();
  }
};

// `URLSearchParams` constructor
// https://url.spec.whatwg.org/#interface-urlsearchparams
var URLSearchParamsConstructor = function URLSearchParams( /* init */
) {
  anInstance$1(this, URLSearchParamsPrototype$3);
  var init = arguments.length > 0 ? arguments[0] : undefined;
  var state = setInternalState$1(this, new URLSearchParamsState(init));
  if (!DESCRIPTORS$2) this.size = state.entries.length;
};
var URLSearchParamsPrototype$3 = URLSearchParamsConstructor.prototype;
defineBuiltIns(URLSearchParamsPrototype$3, {
  // `URLSearchParams.prototype.append` method
  // https://url.spec.whatwg.org/#dom-urlsearchparams-append
  append: function append(name, value) {
    var state = getInternalParamsState(this);
    validateArgumentsLength$5(arguments.length, 2);
    push$2(state.entries, {
      key: $toString$1(name),
      value: $toString$1(value)
    });
    if (!DESCRIPTORS$2) this.length++;
    state.updateURL();
  },
  // `URLSearchParams.prototype.delete` method
  // https://url.spec.whatwg.org/#dom-urlsearchparams-delete
  'delete': function _delete(name /* , value */) {
    var state = getInternalParamsState(this);
    var length = validateArgumentsLength$5(arguments.length, 1);
    var entries = state.entries;
    var key = $toString$1(name);
    var $value = length < 2 ? undefined : arguments[1];
    var value = $value === undefined ? $value : $toString$1($value);
    var index = 0;
    while (index < entries.length) {
      var entry = entries[index];
      if (entry.key === key && (value === undefined || entry.value === value)) {
        splice(entries, index, 1);
        if (value !== undefined) break;
      } else index++;
    }
    if (!DESCRIPTORS$2) this.size = entries.length;
    state.updateURL();
  },
  // `URLSearchParams.prototype.get` method
  // https://url.spec.whatwg.org/#dom-urlsearchparams-get
  get: function get(name) {
    var entries = getInternalParamsState(this).entries;
    validateArgumentsLength$5(arguments.length, 1);
    var key = $toString$1(name);
    var index = 0;
    for (; index < entries.length; index++) {
      if (entries[index].key === key) return entries[index].value;
    }
    return null;
  },
  // `URLSearchParams.prototype.getAll` method
  // https://url.spec.whatwg.org/#dom-urlsearchparams-getall
  getAll: function getAll(name) {
    var entries = getInternalParamsState(this).entries;
    validateArgumentsLength$5(arguments.length, 1);
    var key = $toString$1(name);
    var result = [];
    var index = 0;
    for (; index < entries.length; index++) {
      if (entries[index].key === key) push$2(result, entries[index].value);
    }
    return result;
  },
  // `URLSearchParams.prototype.has` method
  // https://url.spec.whatwg.org/#dom-urlsearchparams-has
  has: function has(name /* , value */) {
    var entries = getInternalParamsState(this).entries;
    var length = validateArgumentsLength$5(arguments.length, 1);
    var key = $toString$1(name);
    var $value = length < 2 ? undefined : arguments[1];
    var value = $value === undefined ? $value : $toString$1($value);
    var index = 0;
    while (index < entries.length) {
      var entry = entries[index++];
      if (entry.key === key && (value === undefined || entry.value === value)) return true;
    }
    return false;
  },
  // `URLSearchParams.prototype.set` method
  // https://url.spec.whatwg.org/#dom-urlsearchparams-set
  set: function set(name, value) {
    var state = getInternalParamsState(this);
    validateArgumentsLength$5(arguments.length, 1);
    var entries = state.entries;
    var found = false;
    var key = $toString$1(name);
    var val = $toString$1(value);
    var index = 0;
    var entry;
    for (; index < entries.length; index++) {
      entry = entries[index];
      if (entry.key === key) {
        if (found) splice(entries, index--, 1);else {
          found = true;
          entry.value = val;
        }
      }
    }
    if (!found) push$2(entries, {
      key: key,
      value: val
    });
    if (!DESCRIPTORS$2) this.size = entries.length;
    state.updateURL();
  },
  // `URLSearchParams.prototype.sort` method
  // https://url.spec.whatwg.org/#dom-urlsearchparams-sort
  sort: function sort() {
    var state = getInternalParamsState(this);
    arraySort(state.entries, function (a, b) {
      return a.key > b.key ? 1 : -1;
    });
    state.updateURL();
  },
  // `URLSearchParams.prototype.forEach` method
  forEach: function forEach(callback /* , thisArg */) {
    var entries = getInternalParamsState(this).entries;
    var boundFunction = bind$2(callback, arguments.length > 1 ? arguments[1] : undefined);
    var index = 0;
    var entry;
    while (index < entries.length) {
      entry = entries[index++];
      boundFunction(entry.value, entry.key, this);
    }
  },
  // `URLSearchParams.prototype.keys` method
  keys: function keys() {
    return new URLSearchParamsIterator(this, 'keys');
  },
  // `URLSearchParams.prototype.values` method
  values: function values() {
    return new URLSearchParamsIterator(this, 'values');
  },
  // `URLSearchParams.prototype.entries` method
  entries: function entries() {
    return new URLSearchParamsIterator(this, 'entries');
  }
}, {
  enumerable: true
});

// `URLSearchParams.prototype[@@iterator]` method
defineBuiltIn$3(URLSearchParamsPrototype$3, ITERATOR, URLSearchParamsPrototype$3.entries, {
  name: 'entries'
});

// `URLSearchParams.prototype.toString` method
// https://url.spec.whatwg.org/#urlsearchparams-stringification-behavior
defineBuiltIn$3(URLSearchParamsPrototype$3, 'toString', function toString() {
  return getInternalParamsState(this).serialize();
}, {
  enumerable: true
});

// `URLSearchParams.prototype.size` getter
// https://github.com/whatwg/url/pull/734
if (DESCRIPTORS$2) defineBuiltInAccessor$2(URLSearchParamsPrototype$3, 'size', {
  get: function size() {
    return getInternalParamsState(this).entries.length;
  },
  configurable: true,
  enumerable: true
});
setToStringTag$1(URLSearchParamsConstructor, URL_SEARCH_PARAMS);
$$4({
  global: true,
  constructor: true,
  forced: !USE_NATIVE_URL$3
}, {
  URLSearchParams: URLSearchParamsConstructor
});

// Wrap `fetch` and `Request` for correct work with polyfilled `URLSearchParams`
if (!USE_NATIVE_URL$3 && isCallable(Headers)) {
  var headersHas = uncurryThis$4(HeadersPrototype.has);
  var headersSet = uncurryThis$4(HeadersPrototype.set);
  var wrapRequestOptions = function wrapRequestOptions(init) {
    if (isObject(init)) {
      var body = init.body;
      var headers;
      if (classof(body) === URL_SEARCH_PARAMS) {
        headers = init.headers ? new Headers(init.headers) : new Headers();
        if (!headersHas(headers, 'content-type')) {
          headersSet(headers, 'content-type', 'application/x-www-form-urlencoded;charset=UTF-8');
        }
        return create(init, {
          body: createPropertyDescriptor(0, $toString$1(body)),
          headers: createPropertyDescriptor(0, headers)
        });
      }
    }
    return init;
  };
  if (isCallable(nativeFetch)) {
    $$4({
      global: true,
      enumerable: true,
      dontCallGetSet: true,
      forced: true
    }, {
      fetch: function fetch(input /* , init */) {
        return nativeFetch(input, arguments.length > 1 ? wrapRequestOptions(arguments[1]) : {});
      }
    });
  }
  if (isCallable(NativeRequest)) {
    var RequestConstructor = function Request(input /* , init */) {
      anInstance$1(this, RequestPrototype);
      return new NativeRequest(input, arguments.length > 1 ? wrapRequestOptions(arguments[1]) : {});
    };
    RequestPrototype.constructor = RequestConstructor;
    RequestConstructor.prototype = RequestPrototype;
    $$4({
      global: true,
      constructor: true,
      dontCallGetSet: true,
      forced: true
    }, {
      Request: RequestConstructor
    });
  }
}
var web_urlSearchParams_constructor = {
  URLSearchParams: URLSearchParamsConstructor,
  getState: getInternalParamsState
};

// TODO: in core-js@4, move /modules/ dependencies to public entries for better optimization by tools like `preset-env`

var $$3 = _export;
var DESCRIPTORS$1 = descriptors;
var USE_NATIVE_URL$2 = urlConstructorDetection;
var global$1 = global$10;
var bind$1 = functionBindContext;
var uncurryThis$3 = functionUncurryThis;
var defineBuiltIn$2 = defineBuiltIn$o;
var defineBuiltInAccessor$1 = defineBuiltInAccessor$i;
var anInstance = anInstance$a;
var hasOwn = hasOwnProperty_1;
var assign$1 = objectAssign;
var arrayFrom = arrayFrom$1;
var arraySlice = arraySlice$a;
var codeAt = stringMultibyte.codeAt;
var toASCII = stringPunycodeToAscii;
var $toString = toString$D;
var setToStringTag = setToStringTag$e;
var validateArgumentsLength$4 = validateArgumentsLength$c;
var URLSearchParamsModule = web_urlSearchParams_constructor;
var InternalStateModule = internalState;
var setInternalState = InternalStateModule.set;
var getInternalURLState = InternalStateModule.getterFor('URL');
var URLSearchParams$1 = URLSearchParamsModule.URLSearchParams;
var getInternalSearchParamsState = URLSearchParamsModule.getState;
var NativeURL = global$1.URL;
var TypeError$1 = global$1.TypeError;
var parseInt$1 = global$1.parseInt;
var floor = Math.floor;
var pow = Math.pow;
var charAt = uncurryThis$3(''.charAt);
var exec = uncurryThis$3(/./.exec);
var join = uncurryThis$3([].join);
var numberToString = uncurryThis$3(1.0.toString);
var pop = uncurryThis$3([].pop);
var push$1 = uncurryThis$3([].push);
var replace = uncurryThis$3(''.replace);
var shift = uncurryThis$3([].shift);
var split = uncurryThis$3(''.split);
var stringSlice = uncurryThis$3(''.slice);
var toLowerCase = uncurryThis$3(''.toLowerCase);
var unshift = uncurryThis$3([].unshift);
var INVALID_AUTHORITY = 'Invalid authority';
var INVALID_SCHEME = 'Invalid scheme';
var INVALID_HOST = 'Invalid host';
var INVALID_PORT = 'Invalid port';
var ALPHA = /[a-z]/i;
// eslint-disable-next-line regexp/no-obscure-range -- safe
var ALPHANUMERIC = /[\d+-.a-z]/i;
var DIGIT = /\d/;
var HEX_START = /^0x/i;
var OCT = /^[0-7]+$/;
var DEC = /^\d+$/;
var HEX = /^[\da-f]+$/i;
/* eslint-disable regexp/no-control-character -- safe */
var FORBIDDEN_HOST_CODE_POINT = /[\0\t\n\r #%/:<>?@[\\\]^|]/;
var FORBIDDEN_HOST_CODE_POINT_EXCLUDING_PERCENT = /[\0\t\n\r #/:<>?@[\\\]^|]/;
var LEADING_C0_CONTROL_OR_SPACE = /^[\u0000-\u0020]+/;
var TRAILING_C0_CONTROL_OR_SPACE = /(^|[^\u0000-\u0020])[\u0000-\u0020]+$/;
var TAB_AND_NEW_LINE = /[\t\n\r]/g;
/* eslint-enable regexp/no-control-character -- safe */
var EOF;

// https://url.spec.whatwg.org/#ipv4-number-parser
var parseIPv4 = function parseIPv4(input) {
  var parts = split(input, '.');
  var partsLength, numbers, index, part, radix, number, ipv4;
  if (parts.length && parts[parts.length - 1] === '') {
    parts.length--;
  }
  partsLength = parts.length;
  if (partsLength > 4) return input;
  numbers = [];
  for (index = 0; index < partsLength; index++) {
    part = parts[index];
    if (part === '') return input;
    radix = 10;
    if (part.length > 1 && charAt(part, 0) === '0') {
      radix = exec(HEX_START, part) ? 16 : 8;
      part = stringSlice(part, radix === 8 ? 1 : 2);
    }
    if (part === '') {
      number = 0;
    } else {
      if (!exec(radix === 10 ? DEC : radix === 8 ? OCT : HEX, part)) return input;
      number = parseInt$1(part, radix);
    }
    push$1(numbers, number);
  }
  for (index = 0; index < partsLength; index++) {
    number = numbers[index];
    if (index === partsLength - 1) {
      if (number >= pow(256, 5 - partsLength)) return null;
    } else if (number > 255) return null;
  }
  ipv4 = pop(numbers);
  for (index = 0; index < numbers.length; index++) {
    ipv4 += numbers[index] * pow(256, 3 - index);
  }
  return ipv4;
};

// https://url.spec.whatwg.org/#concept-ipv6-parser
// eslint-disable-next-line max-statements -- TODO
var parseIPv6 = function parseIPv6(input) {
  var address = [0, 0, 0, 0, 0, 0, 0, 0];
  var pieceIndex = 0;
  var compress = null;
  var pointer = 0;
  var value, length, numbersSeen, ipv4Piece, number, swaps, swap;
  var chr = function chr() {
    return charAt(input, pointer);
  };
  if (chr() === ':') {
    if (charAt(input, 1) !== ':') return;
    pointer += 2;
    pieceIndex++;
    compress = pieceIndex;
  }
  while (chr()) {
    if (pieceIndex === 8) return;
    if (chr() === ':') {
      if (compress !== null) return;
      pointer++;
      pieceIndex++;
      compress = pieceIndex;
      continue;
    }
    value = length = 0;
    while (length < 4 && exec(HEX, chr())) {
      value = value * 16 + parseInt$1(chr(), 16);
      pointer++;
      length++;
    }
    if (chr() === '.') {
      if (length === 0) return;
      pointer -= length;
      if (pieceIndex > 6) return;
      numbersSeen = 0;
      while (chr()) {
        ipv4Piece = null;
        if (numbersSeen > 0) {
          if (chr() === '.' && numbersSeen < 4) pointer++;else return;
        }
        if (!exec(DIGIT, chr())) return;
        while (exec(DIGIT, chr())) {
          number = parseInt$1(chr(), 10);
          if (ipv4Piece === null) ipv4Piece = number;else if (ipv4Piece === 0) return;else ipv4Piece = ipv4Piece * 10 + number;
          if (ipv4Piece > 255) return;
          pointer++;
        }
        address[pieceIndex] = address[pieceIndex] * 256 + ipv4Piece;
        numbersSeen++;
        if (numbersSeen === 2 || numbersSeen === 4) pieceIndex++;
      }
      if (numbersSeen !== 4) return;
      break;
    } else if (chr() === ':') {
      pointer++;
      if (!chr()) return;
    } else if (chr()) return;
    address[pieceIndex++] = value;
  }
  if (compress !== null) {
    swaps = pieceIndex - compress;
    pieceIndex = 7;
    while (pieceIndex !== 0 && swaps > 0) {
      swap = address[pieceIndex];
      address[pieceIndex--] = address[compress + swaps - 1];
      address[compress + --swaps] = swap;
    }
  } else if (pieceIndex !== 8) return;
  return address;
};
var findLongestZeroSequence = function findLongestZeroSequence(ipv6) {
  var maxIndex = null;
  var maxLength = 1;
  var currStart = null;
  var currLength = 0;
  var index = 0;
  for (; index < 8; index++) {
    if (ipv6[index] !== 0) {
      if (currLength > maxLength) {
        maxIndex = currStart;
        maxLength = currLength;
      }
      currStart = null;
      currLength = 0;
    } else {
      if (currStart === null) currStart = index;
      ++currLength;
    }
  }
  if (currLength > maxLength) {
    maxIndex = currStart;
    maxLength = currLength;
  }
  return maxIndex;
};

// https://url.spec.whatwg.org/#host-serializing
var serializeHost = function serializeHost(host) {
  var result, index, compress, ignore0;
  // ipv4
  if (typeof host == 'number') {
    result = [];
    for (index = 0; index < 4; index++) {
      unshift(result, host % 256);
      host = floor(host / 256);
    }
    return join(result, '.');
    // ipv6
  } else if (_typeof(host) == 'object') {
    result = '';
    compress = findLongestZeroSequence(host);
    for (index = 0; index < 8; index++) {
      if (ignore0 && host[index] === 0) continue;
      if (ignore0) ignore0 = false;
      if (compress === index) {
        result += index ? ':' : '::';
        ignore0 = true;
      } else {
        result += numberToString(host[index], 16);
        if (index < 7) result += ':';
      }
    }
    return '[' + result + ']';
  }
  return host;
};
var C0ControlPercentEncodeSet = {};
var fragmentPercentEncodeSet = assign$1({}, C0ControlPercentEncodeSet, {
  ' ': 1,
  '"': 1,
  '<': 1,
  '>': 1,
  '`': 1
});
var pathPercentEncodeSet = assign$1({}, fragmentPercentEncodeSet, {
  '#': 1,
  '?': 1,
  '{': 1,
  '}': 1
});
var userinfoPercentEncodeSet = assign$1({}, pathPercentEncodeSet, {
  '/': 1,
  ':': 1,
  ';': 1,
  '=': 1,
  '@': 1,
  '[': 1,
  '\\': 1,
  ']': 1,
  '^': 1,
  '|': 1
});
var percentEncode = function percentEncode(chr, set) {
  var code = codeAt(chr, 0);
  return code > 0x20 && code < 0x7F && !hasOwn(set, chr) ? chr : encodeURIComponent(chr);
};

// https://url.spec.whatwg.org/#special-scheme
var specialSchemes = {
  ftp: 21,
  file: null,
  http: 80,
  https: 443,
  ws: 80,
  wss: 443
};

// https://url.spec.whatwg.org/#windows-drive-letter
var isWindowsDriveLetter = function isWindowsDriveLetter(string, normalized) {
  var second;
  return string.length === 2 && exec(ALPHA, charAt(string, 0)) && ((second = charAt(string, 1)) === ':' || !normalized && second === '|');
};

// https://url.spec.whatwg.org/#start-with-a-windows-drive-letter
var startsWithWindowsDriveLetter = function startsWithWindowsDriveLetter(string) {
  var third;
  return string.length > 1 && isWindowsDriveLetter(stringSlice(string, 0, 2)) && (string.length === 2 || (third = charAt(string, 2)) === '/' || third === '\\' || third === '?' || third === '#');
};

// https://url.spec.whatwg.org/#single-dot-path-segment
var isSingleDot = function isSingleDot(segment) {
  return segment === '.' || toLowerCase(segment) === '%2e';
};

// https://url.spec.whatwg.org/#double-dot-path-segment
var isDoubleDot = function isDoubleDot(segment) {
  segment = toLowerCase(segment);
  return segment === '..' || segment === '%2e.' || segment === '.%2e' || segment === '%2e%2e';
};

// States:
var SCHEME_START = {};
var SCHEME = {};
var NO_SCHEME = {};
var SPECIAL_RELATIVE_OR_AUTHORITY = {};
var PATH_OR_AUTHORITY = {};
var RELATIVE = {};
var RELATIVE_SLASH = {};
var SPECIAL_AUTHORITY_SLASHES = {};
var SPECIAL_AUTHORITY_IGNORE_SLASHES = {};
var AUTHORITY = {};
var HOST = {};
var HOSTNAME = {};
var PORT = {};
var FILE = {};
var FILE_SLASH = {};
var FILE_HOST = {};
var PATH_START = {};
var PATH = {};
var CANNOT_BE_A_BASE_URL_PATH = {};
var QUERY = {};
var FRAGMENT = {};
var URLState = function URLState(url, isBase, base) {
  var urlString = $toString(url);
  var baseState, failure, searchParams;
  if (isBase) {
    failure = this.parse(urlString);
    if (failure) throw new TypeError$1(failure);
    this.searchParams = null;
  } else {
    if (base !== undefined) baseState = new URLState(base, true);
    failure = this.parse(urlString, null, baseState);
    if (failure) throw new TypeError$1(failure);
    searchParams = getInternalSearchParamsState(new URLSearchParams$1());
    searchParams.bindURL(this);
    this.searchParams = searchParams;
  }
};
URLState.prototype = {
  type: 'URL',
  // https://url.spec.whatwg.org/#url-parsing
  // eslint-disable-next-line max-statements -- TODO
  parse: function parse(input, stateOverride, base) {
    var url = this;
    var state = stateOverride || SCHEME_START;
    var pointer = 0;
    var buffer = '';
    var seenAt = false;
    var seenBracket = false;
    var seenPasswordToken = false;
    var codePoints, chr, bufferCodePoints, failure;
    input = $toString(input);
    if (!stateOverride) {
      url.scheme = '';
      url.username = '';
      url.password = '';
      url.host = null;
      url.port = null;
      url.path = [];
      url.query = null;
      url.fragment = null;
      url.cannotBeABaseURL = false;
      input = replace(input, LEADING_C0_CONTROL_OR_SPACE, '');
      input = replace(input, TRAILING_C0_CONTROL_OR_SPACE, '$1');
    }
    input = replace(input, TAB_AND_NEW_LINE, '');
    codePoints = arrayFrom(input);
    while (pointer <= codePoints.length) {
      chr = codePoints[pointer];
      switch (state) {
        case SCHEME_START:
          if (chr && exec(ALPHA, chr)) {
            buffer += toLowerCase(chr);
            state = SCHEME;
          } else if (!stateOverride) {
            state = NO_SCHEME;
            continue;
          } else return INVALID_SCHEME;
          break;
        case SCHEME:
          if (chr && (exec(ALPHANUMERIC, chr) || chr === '+' || chr === '-' || chr === '.')) {
            buffer += toLowerCase(chr);
          } else if (chr === ':') {
            if (stateOverride && (url.isSpecial() !== hasOwn(specialSchemes, buffer) || buffer === 'file' && (url.includesCredentials() || url.port !== null) || url.scheme === 'file' && !url.host)) return;
            url.scheme = buffer;
            if (stateOverride) {
              if (url.isSpecial() && specialSchemes[url.scheme] === url.port) url.port = null;
              return;
            }
            buffer = '';
            if (url.scheme === 'file') {
              state = FILE;
            } else if (url.isSpecial() && base && base.scheme === url.scheme) {
              state = SPECIAL_RELATIVE_OR_AUTHORITY;
            } else if (url.isSpecial()) {
              state = SPECIAL_AUTHORITY_SLASHES;
            } else if (codePoints[pointer + 1] === '/') {
              state = PATH_OR_AUTHORITY;
              pointer++;
            } else {
              url.cannotBeABaseURL = true;
              push$1(url.path, '');
              state = CANNOT_BE_A_BASE_URL_PATH;
            }
          } else if (!stateOverride) {
            buffer = '';
            state = NO_SCHEME;
            pointer = 0;
            continue;
          } else return INVALID_SCHEME;
          break;
        case NO_SCHEME:
          if (!base || base.cannotBeABaseURL && chr !== '#') return INVALID_SCHEME;
          if (base.cannotBeABaseURL && chr === '#') {
            url.scheme = base.scheme;
            url.path = arraySlice(base.path);
            url.query = base.query;
            url.fragment = '';
            url.cannotBeABaseURL = true;
            state = FRAGMENT;
            break;
          }
          state = base.scheme === 'file' ? FILE : RELATIVE;
          continue;
        case SPECIAL_RELATIVE_OR_AUTHORITY:
          if (chr === '/' && codePoints[pointer + 1] === '/') {
            state = SPECIAL_AUTHORITY_IGNORE_SLASHES;
            pointer++;
          } else {
            state = RELATIVE;
            continue;
          }
          break;
        case PATH_OR_AUTHORITY:
          if (chr === '/') {
            state = AUTHORITY;
            break;
          } else {
            state = PATH;
            continue;
          }
        case RELATIVE:
          url.scheme = base.scheme;
          if (chr === EOF) {
            url.username = base.username;
            url.password = base.password;
            url.host = base.host;
            url.port = base.port;
            url.path = arraySlice(base.path);
            url.query = base.query;
          } else if (chr === '/' || chr === '\\' && url.isSpecial()) {
            state = RELATIVE_SLASH;
          } else if (chr === '?') {
            url.username = base.username;
            url.password = base.password;
            url.host = base.host;
            url.port = base.port;
            url.path = arraySlice(base.path);
            url.query = '';
            state = QUERY;
          } else if (chr === '#') {
            url.username = base.username;
            url.password = base.password;
            url.host = base.host;
            url.port = base.port;
            url.path = arraySlice(base.path);
            url.query = base.query;
            url.fragment = '';
            state = FRAGMENT;
          } else {
            url.username = base.username;
            url.password = base.password;
            url.host = base.host;
            url.port = base.port;
            url.path = arraySlice(base.path);
            url.path.length--;
            state = PATH;
            continue;
          }
          break;
        case RELATIVE_SLASH:
          if (url.isSpecial() && (chr === '/' || chr === '\\')) {
            state = SPECIAL_AUTHORITY_IGNORE_SLASHES;
          } else if (chr === '/') {
            state = AUTHORITY;
          } else {
            url.username = base.username;
            url.password = base.password;
            url.host = base.host;
            url.port = base.port;
            state = PATH;
            continue;
          }
          break;
        case SPECIAL_AUTHORITY_SLASHES:
          state = SPECIAL_AUTHORITY_IGNORE_SLASHES;
          if (chr !== '/' || charAt(buffer, pointer + 1) !== '/') continue;
          pointer++;
          break;
        case SPECIAL_AUTHORITY_IGNORE_SLASHES:
          if (chr !== '/' && chr !== '\\') {
            state = AUTHORITY;
            continue;
          }
          break;
        case AUTHORITY:
          if (chr === '@') {
            if (seenAt) buffer = '%40' + buffer;
            seenAt = true;
            bufferCodePoints = arrayFrom(buffer);
            for (var i = 0; i < bufferCodePoints.length; i++) {
              var codePoint = bufferCodePoints[i];
              if (codePoint === ':' && !seenPasswordToken) {
                seenPasswordToken = true;
                continue;
              }
              var encodedCodePoints = percentEncode(codePoint, userinfoPercentEncodeSet);
              if (seenPasswordToken) url.password += encodedCodePoints;else url.username += encodedCodePoints;
            }
            buffer = '';
          } else if (chr === EOF || chr === '/' || chr === '?' || chr === '#' || chr === '\\' && url.isSpecial()) {
            if (seenAt && buffer === '') return INVALID_AUTHORITY;
            pointer -= arrayFrom(buffer).length + 1;
            buffer = '';
            state = HOST;
          } else buffer += chr;
          break;
        case HOST:
        case HOSTNAME:
          if (stateOverride && url.scheme === 'file') {
            state = FILE_HOST;
            continue;
          } else if (chr === ':' && !seenBracket) {
            if (buffer === '') return INVALID_HOST;
            failure = url.parseHost(buffer);
            if (failure) return failure;
            buffer = '';
            state = PORT;
            if (stateOverride === HOSTNAME) return;
          } else if (chr === EOF || chr === '/' || chr === '?' || chr === '#' || chr === '\\' && url.isSpecial()) {
            if (url.isSpecial() && buffer === '') return INVALID_HOST;
            if (stateOverride && buffer === '' && (url.includesCredentials() || url.port !== null)) return;
            failure = url.parseHost(buffer);
            if (failure) return failure;
            buffer = '';
            state = PATH_START;
            if (stateOverride) return;
            continue;
          } else {
            if (chr === '[') seenBracket = true;else if (chr === ']') seenBracket = false;
            buffer += chr;
          }
          break;
        case PORT:
          if (exec(DIGIT, chr)) {
            buffer += chr;
          } else if (chr === EOF || chr === '/' || chr === '?' || chr === '#' || chr === '\\' && url.isSpecial() || stateOverride) {
            if (buffer !== '') {
              var port = parseInt$1(buffer, 10);
              if (port > 0xFFFF) return INVALID_PORT;
              url.port = url.isSpecial() && port === specialSchemes[url.scheme] ? null : port;
              buffer = '';
            }
            if (stateOverride) return;
            state = PATH_START;
            continue;
          } else return INVALID_PORT;
          break;
        case FILE:
          url.scheme = 'file';
          if (chr === '/' || chr === '\\') state = FILE_SLASH;else if (base && base.scheme === 'file') {
            switch (chr) {
              case EOF:
                url.host = base.host;
                url.path = arraySlice(base.path);
                url.query = base.query;
                break;
              case '?':
                url.host = base.host;
                url.path = arraySlice(base.path);
                url.query = '';
                state = QUERY;
                break;
              case '#':
                url.host = base.host;
                url.path = arraySlice(base.path);
                url.query = base.query;
                url.fragment = '';
                state = FRAGMENT;
                break;
              default:
                if (!startsWithWindowsDriveLetter(join(arraySlice(codePoints, pointer), ''))) {
                  url.host = base.host;
                  url.path = arraySlice(base.path);
                  url.shortenPath();
                }
                state = PATH;
                continue;
            }
          } else {
            state = PATH;
            continue;
          }
          break;
        case FILE_SLASH:
          if (chr === '/' || chr === '\\') {
            state = FILE_HOST;
            break;
          }
          if (base && base.scheme === 'file' && !startsWithWindowsDriveLetter(join(arraySlice(codePoints, pointer), ''))) {
            if (isWindowsDriveLetter(base.path[0], true)) push$1(url.path, base.path[0]);else url.host = base.host;
          }
          state = PATH;
          continue;
        case FILE_HOST:
          if (chr === EOF || chr === '/' || chr === '\\' || chr === '?' || chr === '#') {
            if (!stateOverride && isWindowsDriveLetter(buffer)) {
              state = PATH;
            } else if (buffer === '') {
              url.host = '';
              if (stateOverride) return;
              state = PATH_START;
            } else {
              failure = url.parseHost(buffer);
              if (failure) return failure;
              if (url.host === 'localhost') url.host = '';
              if (stateOverride) return;
              buffer = '';
              state = PATH_START;
            }
            continue;
          } else buffer += chr;
          break;
        case PATH_START:
          if (url.isSpecial()) {
            state = PATH;
            if (chr !== '/' && chr !== '\\') continue;
          } else if (!stateOverride && chr === '?') {
            url.query = '';
            state = QUERY;
          } else if (!stateOverride && chr === '#') {
            url.fragment = '';
            state = FRAGMENT;
          } else if (chr !== EOF) {
            state = PATH;
            if (chr !== '/') continue;
          }
          break;
        case PATH:
          if (chr === EOF || chr === '/' || chr === '\\' && url.isSpecial() || !stateOverride && (chr === '?' || chr === '#')) {
            if (isDoubleDot(buffer)) {
              url.shortenPath();
              if (chr !== '/' && !(chr === '\\' && url.isSpecial())) {
                push$1(url.path, '');
              }
            } else if (isSingleDot(buffer)) {
              if (chr !== '/' && !(chr === '\\' && url.isSpecial())) {
                push$1(url.path, '');
              }
            } else {
              if (url.scheme === 'file' && !url.path.length && isWindowsDriveLetter(buffer)) {
                if (url.host) url.host = '';
                buffer = charAt(buffer, 0) + ':'; // normalize windows drive letter
              }
              push$1(url.path, buffer);
            }
            buffer = '';
            if (url.scheme === 'file' && (chr === EOF || chr === '?' || chr === '#')) {
              while (url.path.length > 1 && url.path[0] === '') {
                shift(url.path);
              }
            }
            if (chr === '?') {
              url.query = '';
              state = QUERY;
            } else if (chr === '#') {
              url.fragment = '';
              state = FRAGMENT;
            }
          } else {
            buffer += percentEncode(chr, pathPercentEncodeSet);
          }
          break;
        case CANNOT_BE_A_BASE_URL_PATH:
          if (chr === '?') {
            url.query = '';
            state = QUERY;
          } else if (chr === '#') {
            url.fragment = '';
            state = FRAGMENT;
          } else if (chr !== EOF) {
            url.path[0] += percentEncode(chr, C0ControlPercentEncodeSet);
          }
          break;
        case QUERY:
          if (!stateOverride && chr === '#') {
            url.fragment = '';
            state = FRAGMENT;
          } else if (chr !== EOF) {
            if (chr === "'" && url.isSpecial()) url.query += '%27';else if (chr === '#') url.query += '%23';else url.query += percentEncode(chr, C0ControlPercentEncodeSet);
          }
          break;
        case FRAGMENT:
          if (chr !== EOF) url.fragment += percentEncode(chr, fragmentPercentEncodeSet);
          break;
      }
      pointer++;
    }
  },
  // https://url.spec.whatwg.org/#host-parsing
  parseHost: function parseHost(input) {
    var result, codePoints, index;
    if (charAt(input, 0) === '[') {
      if (charAt(input, input.length - 1) !== ']') return INVALID_HOST;
      result = parseIPv6(stringSlice(input, 1, -1));
      if (!result) return INVALID_HOST;
      this.host = result;
      // opaque host
    } else if (!this.isSpecial()) {
      if (exec(FORBIDDEN_HOST_CODE_POINT_EXCLUDING_PERCENT, input)) return INVALID_HOST;
      result = '';
      codePoints = arrayFrom(input);
      for (index = 0; index < codePoints.length; index++) {
        result += percentEncode(codePoints[index], C0ControlPercentEncodeSet);
      }
      this.host = result;
    } else {
      input = toASCII(input);
      if (exec(FORBIDDEN_HOST_CODE_POINT, input)) return INVALID_HOST;
      result = parseIPv4(input);
      if (result === null) return INVALID_HOST;
      this.host = result;
    }
  },
  // https://url.spec.whatwg.org/#cannot-have-a-username-password-port
  cannotHaveUsernamePasswordPort: function cannotHaveUsernamePasswordPort() {
    return !this.host || this.cannotBeABaseURL || this.scheme === 'file';
  },
  // https://url.spec.whatwg.org/#include-credentials
  includesCredentials: function includesCredentials() {
    return this.username !== '' || this.password !== '';
  },
  // https://url.spec.whatwg.org/#is-special
  isSpecial: function isSpecial() {
    return hasOwn(specialSchemes, this.scheme);
  },
  // https://url.spec.whatwg.org/#shorten-a-urls-path
  shortenPath: function shortenPath() {
    var path = this.path;
    var pathSize = path.length;
    if (pathSize && (this.scheme !== 'file' || pathSize !== 1 || !isWindowsDriveLetter(path[0], true))) {
      path.length--;
    }
  },
  // https://url.spec.whatwg.org/#concept-url-serializer
  serialize: function serialize() {
    var url = this;
    var scheme = url.scheme;
    var username = url.username;
    var password = url.password;
    var host = url.host;
    var port = url.port;
    var path = url.path;
    var query = url.query;
    var fragment = url.fragment;
    var output = scheme + ':';
    if (host !== null) {
      output += '//';
      if (url.includesCredentials()) {
        output += username + (password ? ':' + password : '') + '@';
      }
      output += serializeHost(host);
      if (port !== null) output += ':' + port;
    } else if (scheme === 'file') output += '//';
    output += url.cannotBeABaseURL ? path[0] : path.length ? '/' + join(path, '/') : '';
    if (query !== null) output += '?' + query;
    if (fragment !== null) output += '#' + fragment;
    return output;
  },
  // https://url.spec.whatwg.org/#dom-url-href
  setHref: function setHref(href) {
    var failure = this.parse(href);
    if (failure) throw new TypeError$1(failure);
    this.searchParams.update();
  },
  // https://url.spec.whatwg.org/#dom-url-origin
  getOrigin: function getOrigin() {
    var scheme = this.scheme;
    var port = this.port;
    if (scheme === 'blob') try {
      return new URLConstructor(scheme.path[0]).origin;
    } catch (error) {
      return 'null';
    }
    if (scheme === 'file' || !this.isSpecial()) return 'null';
    return scheme + '://' + serializeHost(this.host) + (port !== null ? ':' + port : '');
  },
  // https://url.spec.whatwg.org/#dom-url-protocol
  getProtocol: function getProtocol() {
    return this.scheme + ':';
  },
  setProtocol: function setProtocol(protocol) {
    this.parse($toString(protocol) + ':', SCHEME_START);
  },
  // https://url.spec.whatwg.org/#dom-url-username
  getUsername: function getUsername() {
    return this.username;
  },
  setUsername: function setUsername(username) {
    var codePoints = arrayFrom($toString(username));
    if (this.cannotHaveUsernamePasswordPort()) return;
    this.username = '';
    for (var i = 0; i < codePoints.length; i++) {
      this.username += percentEncode(codePoints[i], userinfoPercentEncodeSet);
    }
  },
  // https://url.spec.whatwg.org/#dom-url-password
  getPassword: function getPassword() {
    return this.password;
  },
  setPassword: function setPassword(password) {
    var codePoints = arrayFrom($toString(password));
    if (this.cannotHaveUsernamePasswordPort()) return;
    this.password = '';
    for (var i = 0; i < codePoints.length; i++) {
      this.password += percentEncode(codePoints[i], userinfoPercentEncodeSet);
    }
  },
  // https://url.spec.whatwg.org/#dom-url-host
  getHost: function getHost() {
    var host = this.host;
    var port = this.port;
    return host === null ? '' : port === null ? serializeHost(host) : serializeHost(host) + ':' + port;
  },
  setHost: function setHost(host) {
    if (this.cannotBeABaseURL) return;
    this.parse(host, HOST);
  },
  // https://url.spec.whatwg.org/#dom-url-hostname
  getHostname: function getHostname() {
    var host = this.host;
    return host === null ? '' : serializeHost(host);
  },
  setHostname: function setHostname(hostname) {
    if (this.cannotBeABaseURL) return;
    this.parse(hostname, HOSTNAME);
  },
  // https://url.spec.whatwg.org/#dom-url-port
  getPort: function getPort() {
    var port = this.port;
    return port === null ? '' : $toString(port);
  },
  setPort: function setPort(port) {
    if (this.cannotHaveUsernamePasswordPort()) return;
    port = $toString(port);
    if (port === '') this.port = null;else this.parse(port, PORT);
  },
  // https://url.spec.whatwg.org/#dom-url-pathname
  getPathname: function getPathname() {
    var path = this.path;
    return this.cannotBeABaseURL ? path[0] : path.length ? '/' + join(path, '/') : '';
  },
  setPathname: function setPathname(pathname) {
    if (this.cannotBeABaseURL) return;
    this.path = [];
    this.parse(pathname, PATH_START);
  },
  // https://url.spec.whatwg.org/#dom-url-search
  getSearch: function getSearch() {
    var query = this.query;
    return query ? '?' + query : '';
  },
  setSearch: function setSearch(search) {
    search = $toString(search);
    if (search === '') {
      this.query = null;
    } else {
      if (charAt(search, 0) === '?') search = stringSlice(search, 1);
      this.query = '';
      this.parse(search, QUERY);
    }
    this.searchParams.update();
  },
  // https://url.spec.whatwg.org/#dom-url-searchparams
  getSearchParams: function getSearchParams() {
    return this.searchParams.facade;
  },
  // https://url.spec.whatwg.org/#dom-url-hash
  getHash: function getHash() {
    var fragment = this.fragment;
    return fragment ? '#' + fragment : '';
  },
  setHash: function setHash(hash) {
    hash = $toString(hash);
    if (hash === '') {
      this.fragment = null;
      return;
    }
    if (charAt(hash, 0) === '#') hash = stringSlice(hash, 1);
    this.fragment = '';
    this.parse(hash, FRAGMENT);
  },
  update: function update() {
    this.query = this.searchParams.serialize() || null;
  }
};

// `URL` constructor
// https://url.spec.whatwg.org/#url-class
var URLConstructor = function URL(url /* , base */) {
  var that = anInstance(this, URLPrototype);
  var base = validateArgumentsLength$4(arguments.length, 1) > 1 ? arguments[1] : undefined;
  var state = setInternalState(that, new URLState(url, false, base));
  if (!DESCRIPTORS$1) {
    that.href = state.serialize();
    that.origin = state.getOrigin();
    that.protocol = state.getProtocol();
    that.username = state.getUsername();
    that.password = state.getPassword();
    that.host = state.getHost();
    that.hostname = state.getHostname();
    that.port = state.getPort();
    that.pathname = state.getPathname();
    that.search = state.getSearch();
    that.searchParams = state.getSearchParams();
    that.hash = state.getHash();
  }
};
var URLPrototype = URLConstructor.prototype;
var accessorDescriptor = function accessorDescriptor(getter, setter) {
  return {
    get: function get() {
      return getInternalURLState(this)[getter]();
    },
    set: setter && function (value) {
      return getInternalURLState(this)[setter](value);
    },
    configurable: true,
    enumerable: true
  };
};
if (DESCRIPTORS$1) {
  // `URL.prototype.href` accessors pair
  // https://url.spec.whatwg.org/#dom-url-href
  defineBuiltInAccessor$1(URLPrototype, 'href', accessorDescriptor('serialize', 'setHref'));
  // `URL.prototype.origin` getter
  // https://url.spec.whatwg.org/#dom-url-origin
  defineBuiltInAccessor$1(URLPrototype, 'origin', accessorDescriptor('getOrigin'));
  // `URL.prototype.protocol` accessors pair
  // https://url.spec.whatwg.org/#dom-url-protocol
  defineBuiltInAccessor$1(URLPrototype, 'protocol', accessorDescriptor('getProtocol', 'setProtocol'));
  // `URL.prototype.username` accessors pair
  // https://url.spec.whatwg.org/#dom-url-username
  defineBuiltInAccessor$1(URLPrototype, 'username', accessorDescriptor('getUsername', 'setUsername'));
  // `URL.prototype.password` accessors pair
  // https://url.spec.whatwg.org/#dom-url-password
  defineBuiltInAccessor$1(URLPrototype, 'password', accessorDescriptor('getPassword', 'setPassword'));
  // `URL.prototype.host` accessors pair
  // https://url.spec.whatwg.org/#dom-url-host
  defineBuiltInAccessor$1(URLPrototype, 'host', accessorDescriptor('getHost', 'setHost'));
  // `URL.prototype.hostname` accessors pair
  // https://url.spec.whatwg.org/#dom-url-hostname
  defineBuiltInAccessor$1(URLPrototype, 'hostname', accessorDescriptor('getHostname', 'setHostname'));
  // `URL.prototype.port` accessors pair
  // https://url.spec.whatwg.org/#dom-url-port
  defineBuiltInAccessor$1(URLPrototype, 'port', accessorDescriptor('getPort', 'setPort'));
  // `URL.prototype.pathname` accessors pair
  // https://url.spec.whatwg.org/#dom-url-pathname
  defineBuiltInAccessor$1(URLPrototype, 'pathname', accessorDescriptor('getPathname', 'setPathname'));
  // `URL.prototype.search` accessors pair
  // https://url.spec.whatwg.org/#dom-url-search
  defineBuiltInAccessor$1(URLPrototype, 'search', accessorDescriptor('getSearch', 'setSearch'));
  // `URL.prototype.searchParams` getter
  // https://url.spec.whatwg.org/#dom-url-searchparams
  defineBuiltInAccessor$1(URLPrototype, 'searchParams', accessorDescriptor('getSearchParams'));
  // `URL.prototype.hash` accessors pair
  // https://url.spec.whatwg.org/#dom-url-hash
  defineBuiltInAccessor$1(URLPrototype, 'hash', accessorDescriptor('getHash', 'setHash'));
}

// `URL.prototype.toJSON` method
// https://url.spec.whatwg.org/#dom-url-tojson
defineBuiltIn$2(URLPrototype, 'toJSON', function toJSON() {
  return getInternalURLState(this).serialize();
}, {
  enumerable: true
});

// `URL.prototype.toString` method
// https://url.spec.whatwg.org/#URL-stringification-behavior
defineBuiltIn$2(URLPrototype, 'toString', function toString() {
  return getInternalURLState(this).serialize();
}, {
  enumerable: true
});
if (NativeURL) {
  var nativeCreateObjectURL = NativeURL.createObjectURL;
  var nativeRevokeObjectURL = NativeURL.revokeObjectURL;
  // `URL.createObjectURL` method
  // https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL
  if (nativeCreateObjectURL) defineBuiltIn$2(URLConstructor, 'createObjectURL', bind$1(nativeCreateObjectURL, NativeURL));
  // `URL.revokeObjectURL` method
  // https://developer.mozilla.org/en-US/docs/Web/API/URL/revokeObjectURL
  if (nativeRevokeObjectURL) defineBuiltIn$2(URLConstructor, 'revokeObjectURL', bind$1(nativeRevokeObjectURL, NativeURL));
}
setToStringTag(URLConstructor, 'URL');
$$3({
  global: true,
  constructor: true,
  forced: !USE_NATIVE_URL$2,
  sham: !DESCRIPTORS$1
}, {
  URL: URLConstructor
});

var $$2 = _export;
var getBuiltIn$1 = getBuiltIn$r;
var fails = fails$1t;
var validateArgumentsLength$3 = validateArgumentsLength$c;
var toString$3 = toString$D;
var USE_NATIVE_URL$1 = urlConstructorDetection;
var URL$2 = getBuiltIn$1('URL');

// https://github.com/nodejs/node/issues/47505
// https://github.com/denoland/deno/issues/18893
var THROWS_WITHOUT_ARGUMENTS = USE_NATIVE_URL$1 && fails(function () {
  URL$2.canParse();
});

// Bun ~ 1.0.30 bug
// https://github.com/oven-sh/bun/issues/9250
var WRONG_ARITY = fails(function () {
  return URL$2.canParse.length !== 1;
});

// `URL.canParse` method
// https://url.spec.whatwg.org/#dom-url-canparse
$$2({
  target: 'URL',
  stat: true,
  forced: !THROWS_WITHOUT_ARGUMENTS || WRONG_ARITY
}, {
  canParse: function canParse(url) {
    var length = validateArgumentsLength$3(arguments.length, 1);
    var urlString = toString$3(url);
    var base = length < 2 || arguments[1] === undefined ? undefined : toString$3(arguments[1]);
    try {
      return !!new URL$2(urlString, base);
    } catch (error) {
      return false;
    }
  }
});

var $$1 = _export;
var getBuiltIn = getBuiltIn$r;
var validateArgumentsLength$2 = validateArgumentsLength$c;
var toString$2 = toString$D;
var USE_NATIVE_URL = urlConstructorDetection;
var URL$1 = getBuiltIn('URL');

// `URL.parse` method
// https://url.spec.whatwg.org/#dom-url-canparse
$$1({
  target: 'URL',
  stat: true,
  forced: !USE_NATIVE_URL
}, {
  parse: function parse(url) {
    var length = validateArgumentsLength$2(arguments.length, 1);
    var urlString = toString$2(url);
    var base = length < 2 || arguments[1] === undefined ? undefined : toString$2(arguments[1]);
    try {
      return new URL$1(urlString, base);
    } catch (error) {
      return null;
    }
  }
});

var $ = _export;
var call = functionCall;

// `URL.prototype.toJSON` method
// https://url.spec.whatwg.org/#dom-url-tojson
$({
  target: 'URL',
  proto: true,
  enumerable: true
}, {
  toJSON: function toJSON() {
    return call(URL.prototype.toString, this);
  }
});

var defineBuiltIn$1 = defineBuiltIn$o;
var uncurryThis$2 = functionUncurryThis;
var toString$1 = toString$D;
var validateArgumentsLength$1 = validateArgumentsLength$c;
var $URLSearchParams$1 = URLSearchParams;
var URLSearchParamsPrototype$2 = $URLSearchParams$1.prototype;
var append$1 = uncurryThis$2(URLSearchParamsPrototype$2.append);
var $delete = uncurryThis$2(URLSearchParamsPrototype$2['delete']);
var forEach$1 = uncurryThis$2(URLSearchParamsPrototype$2.forEach);
var push = uncurryThis$2([].push);
var params$1 = new $URLSearchParams$1('a=1&a=2&b=3');
params$1['delete']('a', 1);
// `undefined` case is a Chromium 117 bug
// https://bugs.chromium.org/p/v8/issues/detail?id=14222
params$1['delete']('b', undefined);
if (params$1 + '' !== 'a=2') {
  defineBuiltIn$1(URLSearchParamsPrototype$2, 'delete', function (name /* , value */) {
    var length = arguments.length;
    var $value = length < 2 ? undefined : arguments[1];
    if (length && $value === undefined) return $delete(this, name);
    var entries = [];
    forEach$1(this, function (v, k) {
      // also validates `this`
      push(entries, {
        key: k,
        value: v
      });
    });
    validateArgumentsLength$1(length, 1);
    var key = toString$1(name);
    var value = toString$1($value);
    var index = 0;
    var dindex = 0;
    var found = false;
    var entriesLength = entries.length;
    var entry;
    while (index < entriesLength) {
      entry = entries[index++];
      if (found || entry.key === key) {
        found = true;
        $delete(this, entry.key);
      } else dindex++;
    }
    while (dindex < entriesLength) {
      entry = entries[dindex++];
      if (!(entry.key === key && entry.value === value)) append$1(this, entry.key, entry.value);
    }
  }, {
    enumerable: true,
    unsafe: true
  });
}

var defineBuiltIn = defineBuiltIn$o;
var uncurryThis$1 = functionUncurryThis;
var toString = toString$D;
var validateArgumentsLength = validateArgumentsLength$c;
var $URLSearchParams = URLSearchParams;
var URLSearchParamsPrototype$1 = $URLSearchParams.prototype;
var getAll = uncurryThis$1(URLSearchParamsPrototype$1.getAll);
var $has = uncurryThis$1(URLSearchParamsPrototype$1.has);
var params = new $URLSearchParams('a=1');

// `undefined` case is a Chromium 117 bug
// https://bugs.chromium.org/p/v8/issues/detail?id=14222
if (params.has('a', 2) || !params.has('a', undefined)) {
  defineBuiltIn(URLSearchParamsPrototype$1, 'has', function has(name /* , value */) {
    var length = arguments.length;
    var $value = length < 2 ? undefined : arguments[1];
    if (length && $value === undefined) return $has(this, name);
    var values = getAll(this, name); // also validates `this`
    validateArgumentsLength(length, 1);
    var value = toString($value);
    var index = 0;
    while (index < values.length) {
      if (values[index++] === value) return true;
    }
    return false;
  }, {
    enumerable: true,
    unsafe: true
  });
}

var DESCRIPTORS = descriptors;
var uncurryThis = functionUncurryThis;
var defineBuiltInAccessor = defineBuiltInAccessor$i;
var URLSearchParamsPrototype = URLSearchParams.prototype;
var forEach = uncurryThis(URLSearchParamsPrototype.forEach);

// `URLSearchParams.prototype.size` getter
// https://github.com/whatwg/url/pull/734
if (DESCRIPTORS && !('size' in URLSearchParamsPrototype)) {
  defineBuiltInAccessor(URLSearchParamsPrototype, 'size', {
    get: function size() {
      var count = 0;
      forEach(this, function () {
        count++;
      });
      return count;
    },
    configurable: true,
    enumerable: true
  });
}

function noop() { }
function assign(tar, src) {
    // @ts-ignore
    for (const k in src)
        tar[k] = src[k];
    return tar;
}
function add_location(element, file, line, column, char) {
    element.__svelte_meta = {
        loc: { file, line, column, char }
    };
}
function run(fn) {
    return fn();
}
function blank_object() {
    return Object.create(null);
}
function run_all(fns) {
    fns.forEach(run);
}
function is_function(thing) {
    return typeof thing === 'function';
}
function safe_not_equal(a, b) {
    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');
}
let src_url_equal_anchor;
function src_url_equal(element_src, url) {
    if (!src_url_equal_anchor) {
        src_url_equal_anchor = document.createElement('a');
    }
    src_url_equal_anchor.href = url;
    return element_src === src_url_equal_anchor.href;
}
function is_empty(obj) {
    return Object.keys(obj).length === 0;
}
function validate_store(store, name) {
    if (store != null && typeof store.subscribe !== 'function') {
        throw new Error(`'${name}' is not a store with a 'subscribe' method`);
    }
}
function subscribe(store, ...callbacks) {
    if (store == null) {
        return noop;
    }
    const unsub = store.subscribe(...callbacks);
    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;
}
function get_store_value(store) {
    let value;
    subscribe(store, _ => value = _)();
    return value;
}
function component_subscribe(component, store, callback) {
    component.$$.on_destroy.push(subscribe(store, callback));
}
function create_slot(definition, ctx, $$scope, fn) {
    if (definition) {
        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);
        return definition[0](slot_ctx);
    }
}
function get_slot_context(definition, ctx, $$scope, fn) {
    return definition[1] && fn
        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))
        : $$scope.ctx;
}
function get_slot_changes(definition, $$scope, dirty, fn) {
    if (definition[2] && fn) {
        const lets = definition[2](fn(dirty));
        if ($$scope.dirty === undefined) {
            return lets;
        }
        if (typeof lets === 'object') {
            const merged = [];
            const len = Math.max($$scope.dirty.length, lets.length);
            for (let i = 0; i < len; i += 1) {
                merged[i] = $$scope.dirty[i] | lets[i];
            }
            return merged;
        }
        return $$scope.dirty | lets;
    }
    return $$scope.dirty;
}
function update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {
    if (slot_changes) {
        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);
        slot.p(slot_context, slot_changes);
    }
}
function get_all_dirty_from_scope($$scope) {
    if ($$scope.ctx.length > 32) {
        const dirty = [];
        const length = $$scope.ctx.length / 32;
        for (let i = 0; i < length; i++) {
            dirty[i] = -1;
        }
        return dirty;
    }
    return -1;
}
function append(target, node) {
    target.appendChild(node);
}
function insert(target, node, anchor) {
    target.insertBefore(node, anchor || null);
}
function detach(node) {
    if (node.parentNode) {
        node.parentNode.removeChild(node);
    }
}
function destroy_each(iterations, detaching) {
    for (let i = 0; i < iterations.length; i += 1) {
        if (iterations[i])
            iterations[i].d(detaching);
    }
}
function element(name) {
    return document.createElement(name);
}
function text(data) {
    return document.createTextNode(data);
}
function space() {
    return text(' ');
}
function empty() {
    return text('');
}
function listen(node, event, handler, options) {
    node.addEventListener(event, handler, options);
    return () => node.removeEventListener(event, handler, options);
}
function attr(node, attribute, value) {
    if (value == null)
        node.removeAttribute(attribute);
    else if (node.getAttribute(attribute) !== value)
        node.setAttribute(attribute, value);
}
function children(element) {
    return Array.from(element.childNodes);
}
function set_input_value(input, value) {
    input.value = value == null ? '' : value;
}
function set_style(node, key, value, important) {
    if (value == null) {
        node.style.removeProperty(key);
    }
    else {
        node.style.setProperty(key, value, important ? 'important' : '');
    }
}
function select_option(select, value, mounting) {
    for (let i = 0; i < select.options.length; i += 1) {
        const option = select.options[i];
        if (option.__value === value) {
            option.selected = true;
            return;
        }
    }
    if (!mounting || value !== undefined) {
        select.selectedIndex = -1; // no option should be selected
    }
}
function select_value(select) {
    const selected_option = select.querySelector(':checked');
    return selected_option && selected_option.__value;
}
function toggle_class(element, name, toggle) {
    element.classList[toggle ? 'add' : 'remove'](name);
}
function custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {
    const e = document.createEvent('CustomEvent');
    e.initCustomEvent(type, bubbles, cancelable, detail);
    return e;
}

let current_component;
function set_current_component(component) {
    current_component = component;
}
function get_current_component() {
    if (!current_component)
        throw new Error('Function called outside component initialization');
    return current_component;
}
/**
 * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.
 * It must be called during the component's initialisation (but doesn't need to live *inside* the component;
 * it can be called from an external module).
 *
 * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).
 *
 * https://svelte.dev/docs#run-time-svelte-onmount
 */
function onMount(fn) {
    get_current_component().$$.on_mount.push(fn);
}
/**
 * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).
 * Event dispatchers are functions that can take two arguments: `name` and `detail`.
 *
 * Component events created with `createEventDispatcher` create a
 * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).
 * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).
 * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)
 * property and can contain any type of data.
 *
 * https://svelte.dev/docs#run-time-svelte-createeventdispatcher
 */
function createEventDispatcher() {
    const component = get_current_component();
    return (type, detail, { cancelable = false } = {}) => {
        const callbacks = component.$$.callbacks[type];
        if (callbacks) {
            // TODO are there situations where events could be dispatched
            // in a server (non-DOM) environment?
            const event = custom_event(type, detail, { cancelable });
            callbacks.slice().forEach(fn => {
                fn.call(component, event);
            });
            return !event.defaultPrevented;
        }
        return true;
    };
}

const dirty_components = [];
const binding_callbacks = [];
let render_callbacks = [];
const flush_callbacks = [];
const resolved_promise = /* @__PURE__ */ Promise.resolve();
let update_scheduled = false;
function schedule_update() {
    if (!update_scheduled) {
        update_scheduled = true;
        resolved_promise.then(flush);
    }
}
function add_render_callback(fn) {
    render_callbacks.push(fn);
}
function add_flush_callback(fn) {
    flush_callbacks.push(fn);
}
// flush() calls callbacks in this order:
// 1. All beforeUpdate callbacks, in order: parents before children
// 2. All bind:this callbacks, in reverse order: children before parents.
// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT
//    for afterUpdates called during the initial onMount, which are called in
//    reverse order: children before parents.
// Since callbacks might update component values, which could trigger another
// call to flush(), the following steps guard against this:
// 1. During beforeUpdate, any updated components will be added to the
//    dirty_components array and will cause a reentrant call to flush(). Because
//    the flush index is kept outside the function, the reentrant call will pick
//    up where the earlier call left off and go through all dirty components. The
//    current_component value is saved and restored so that the reentrant call will
//    not interfere with the "parent" flush() call.
// 2. bind:this callbacks cannot trigger new flush() calls.
// 3. During afterUpdate, any updated components will NOT have their afterUpdate
//    callback called a second time; the seen_callbacks set, outside the flush()
//    function, guarantees this behavior.
const seen_callbacks = new Set();
let flushidx = 0; // Do *not* move this inside the flush() function
function flush() {
    // Do not reenter flush while dirty components are updated, as this can
    // result in an infinite loop. Instead, let the inner flush handle it.
    // Reentrancy is ok afterwards for bindings etc.
    if (flushidx !== 0) {
        return;
    }
    const saved_component = current_component;
    do {
        // first, call beforeUpdate functions
        // and update components
        try {
            while (flushidx < dirty_components.length) {
                const component = dirty_components[flushidx];
                flushidx++;
                set_current_component(component);
                update(component.$$);
            }
        }
        catch (e) {
            // reset dirty state to not end up in a deadlocked state and then rethrow
            dirty_components.length = 0;
            flushidx = 0;
            throw e;
        }
        set_current_component(null);
        dirty_components.length = 0;
        flushidx = 0;
        while (binding_callbacks.length)
            binding_callbacks.pop()();
        // then, once components are updated, call
        // afterUpdate functions. This may cause
        // subsequent updates...
        for (let i = 0; i < render_callbacks.length; i += 1) {
            const callback = render_callbacks[i];
            if (!seen_callbacks.has(callback)) {
                // ...so guard against infinite loops
                seen_callbacks.add(callback);
                callback();
            }
        }
        render_callbacks.length = 0;
    } while (dirty_components.length);
    while (flush_callbacks.length) {
        flush_callbacks.pop()();
    }
    update_scheduled = false;
    seen_callbacks.clear();
    set_current_component(saved_component);
}
function update($$) {
    if ($$.fragment !== null) {
        $$.update();
        run_all($$.before_update);
        const dirty = $$.dirty;
        $$.dirty = [-1];
        $$.fragment && $$.fragment.p($$.ctx, dirty);
        $$.after_update.forEach(add_render_callback);
    }
}
/**
 * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.
 */
function flush_render_callbacks(fns) {
    const filtered = [];
    const targets = [];
    render_callbacks.forEach((c) => fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c));
    targets.forEach((c) => c());
    render_callbacks = filtered;
}
const outroing = new Set();
let outros;
function group_outros() {
    outros = {
        r: 0,
        c: [],
        p: outros // parent group
    };
}
function check_outros() {
    if (!outros.r) {
        run_all(outros.c);
    }
    outros = outros.p;
}
function transition_in(block, local) {
    if (block && block.i) {
        outroing.delete(block);
        block.i(local);
    }
}
function transition_out(block, local, detach, callback) {
    if (block && block.o) {
        if (outroing.has(block))
            return;
        outroing.add(block);
        outros.c.push(() => {
            outroing.delete(block);
            if (callback) {
                if (detach)
                    block.d(1);
                callback();
            }
        });
        block.o(local);
    }
    else if (callback) {
        callback();
    }
}

function bind(component, name, callback) {
    const index = component.$$.props[name];
    if (index !== undefined) {
        component.$$.bound[index] = callback;
        callback(component.$$.ctx[index]);
    }
}
function create_component(block) {
    block && block.c();
}
function mount_component(component, target, anchor, customElement) {
    const { fragment, after_update } = component.$$;
    fragment && fragment.m(target, anchor);
    if (!customElement) {
        // onMount happens before the initial afterUpdate
        add_render_callback(() => {
            const new_on_destroy = component.$$.on_mount.map(run).filter(is_function);
            // if the component was destroyed immediately
            // it will update the `$$.on_destroy` reference to `null`.
            // the destructured on_destroy may still reference to the old array
            if (component.$$.on_destroy) {
                component.$$.on_destroy.push(...new_on_destroy);
            }
            else {
                // Edge case - component was destroyed immediately,
                // most likely as a result of a binding initialising
                run_all(new_on_destroy);
            }
            component.$$.on_mount = [];
        });
    }
    after_update.forEach(add_render_callback);
}
function destroy_component(component, detaching) {
    const $$ = component.$$;
    if ($$.fragment !== null) {
        flush_render_callbacks($$.after_update);
        run_all($$.on_destroy);
        $$.fragment && $$.fragment.d(detaching);
        // TODO null out other refs, including component.$$ (but need to
        // preserve final state?)
        $$.on_destroy = $$.fragment = null;
        $$.ctx = [];
    }
}
function make_dirty(component, i) {
    if (component.$$.dirty[0] === -1) {
        dirty_components.push(component);
        schedule_update();
        component.$$.dirty.fill(0);
    }
    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));
}
function init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {
    const parent_component = current_component;
    set_current_component(component);
    const $$ = component.$$ = {
        fragment: null,
        ctx: [],
        // state
        props,
        update: noop,
        not_equal,
        bound: blank_object(),
        // lifecycle
        on_mount: [],
        on_destroy: [],
        on_disconnect: [],
        before_update: [],
        after_update: [],
        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),
        // everything else
        callbacks: blank_object(),
        dirty,
        skip_bound: false,
        root: options.target || parent_component.$$.root
    };
    append_styles && append_styles($$.root);
    let ready = false;
    $$.ctx = instance
        ? instance(component, options.props || {}, (i, ret, ...rest) => {
            const value = rest.length ? rest[0] : ret;
            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {
                if (!$$.skip_bound && $$.bound[i])
                    $$.bound[i](value);
                if (ready)
                    make_dirty(component, i);
            }
            return ret;
        })
        : [];
    $$.update();
    ready = true;
    run_all($$.before_update);
    // `false` as a special case of no DOM component
    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;
    if (options.target) {
        if (options.hydrate) {
            const nodes = children(options.target);
            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
            $$.fragment && $$.fragment.l(nodes);
            nodes.forEach(detach);
        }
        else {
            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
            $$.fragment && $$.fragment.c();
        }
        if (options.intro)
            transition_in(component.$$.fragment);
        mount_component(component, options.target, options.anchor, options.customElement);
        flush();
    }
    set_current_component(parent_component);
}
/**
 * Base class for Svelte components. Used when dev=false.
 */
class SvelteComponent {
    $destroy() {
        destroy_component(this, 1);
        this.$destroy = noop;
    }
    $on(type, callback) {
        if (!is_function(callback)) {
            return noop;
        }
        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));
        callbacks.push(callback);
        return () => {
            const index = callbacks.indexOf(callback);
            if (index !== -1)
                callbacks.splice(index, 1);
        };
    }
    $set($$props) {
        if (this.$$set && !is_empty($$props)) {
            this.$$.skip_bound = true;
            this.$$set($$props);
            this.$$.skip_bound = false;
        }
    }
}

function dispatch_dev(type, detail) {
    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.59.2' }, detail), { bubbles: true }));
}
function append_dev(target, node) {
    dispatch_dev('SvelteDOMInsert', { target, node });
    append(target, node);
}
function insert_dev(target, node, anchor) {
    dispatch_dev('SvelteDOMInsert', { target, node, anchor });
    insert(target, node, anchor);
}
function detach_dev(node) {
    dispatch_dev('SvelteDOMRemove', { node });
    detach(node);
}
function listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation, has_stop_immediate_propagation) {
    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];
    if (has_prevent_default)
        modifiers.push('preventDefault');
    if (has_stop_propagation)
        modifiers.push('stopPropagation');
    if (has_stop_immediate_propagation)
        modifiers.push('stopImmediatePropagation');
    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });
    const dispose = listen(node, event, handler, options);
    return () => {
        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });
        dispose();
    };
}
function attr_dev(node, attribute, value) {
    attr(node, attribute, value);
    if (value == null)
        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });
    else
        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });
}
function prop_dev(node, property, value) {
    node[property] = value;
    dispatch_dev('SvelteDOMSetProperty', { node, property, value });
}
function set_data_dev(text, data) {
    data = '' + data;
    if (text.data === data)
        return;
    dispatch_dev('SvelteDOMSetData', { node: text, data });
    text.data = data;
}
function validate_each_argument(arg) {
    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {
        let msg = '{#each} only iterates over array-like objects.';
        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {
            msg += ' You can use a spread to convert this iterable into an array.';
        }
        throw new Error(msg);
    }
}
function validate_slots(name, slot, keys) {
    for (const slot_key of Object.keys(slot)) {
        if (!~keys.indexOf(slot_key)) {
            console.warn(`<${name}> received an unexpected slot "${slot_key}".`);
        }
    }
}
function construct_svelte_component_dev(component, props) {
    const error_message = 'this={...} of <svelte:component> should specify a Svelte component.';
    try {
        const instance = new component(props);
        if (!instance.$$ || !instance.$set || !instance.$on || !instance.$destroy) {
            throw new Error(error_message);
        }
        return instance;
    }
    catch (err) {
        const { message } = err;
        if (typeof message === 'string' && message.indexOf('is not a constructor') !== -1) {
            throw new Error(error_message);
        }
        else {
            throw err;
        }
    }
}
/**
 * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.
 */
class SvelteComponentDev extends SvelteComponent {
    constructor(options) {
        if (!options || (!options.target && !options.$$inline)) {
            throw new Error("'target' is a required option");
        }
        super();
    }
    $destroy() {
        super.$destroy();
        this.$destroy = () => {
            console.warn('Component was already destroyed'); // eslint-disable-line no-console
        };
    }
    $capture_state() { }
    $inject_state() { }
}

var file$m = "web/components/Icon.svelte";
function create_fragment$m(ctx) {
  var span;
  var t;
  var span_class_value;
  var mounted;
  var dispose;
  var block = {
    c: function create() {
      span = element("span");
      t = text( /*i*/ctx[0]);
      attr_dev(span, "class", span_class_value = "" + ( /*clazz*/ctx[1] + " material-symbols-outlined"));
      add_location(span, file$m, 1, 0, 57);
    },
    l: function claim(nodes) {
      throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    },
    m: function mount(target, anchor) {
      insert_dev(target, span, anchor);
      append_dev(span, t);
      if (!mounted) {
        dispose = listen_dev(span, "click", /*click_handler*/ctx[3], false, false, false, false);
        mounted = true;
      }
    },
    p: function update(ctx, _ref) {
      var _ref2 = _slicedToArray(_ref, 1),
        dirty = _ref2[0];
      if (dirty & /*i*/1) set_data_dev(t, /*i*/ctx[0]);
      if (dirty & /*clazz*/2 && span_class_value !== (span_class_value = "" + ( /*clazz*/ctx[1] + " material-symbols-outlined"))) {
        attr_dev(span, "class", span_class_value);
      }
    },
    i: noop,
    o: noop,
    d: function destroy(detaching) {
      if (detaching) detach_dev(span);
      mounted = false;
      dispose();
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_fragment$m.name,
    type: "component",
    source: "",
    ctx: ctx
  });
  return block;
}
function instance$m($$self, $$props, $$invalidate) {
  var _$$props$$$slots = $$props.$$slots,
    slots = _$$props$$$slots === void 0 ? {} : _$$props$$$slots;
    $$props.$$scope;
  validate_slots('Icon', slots, []);
  var dispatch = createEventDispatcher();
  var i = $$props.i;
  var _$$props$class = $$props.class,
    clazz = _$$props$class === void 0 ? '' : _$$props$class;
  $$self.$$.on_mount.push(function () {
    if (i === undefined && !('i' in $$props || $$self.$$.bound[$$self.$$.props['i']])) {
      console.warn("<Icon> was created without expected prop 'i'");
    }
  });
  var writable_props = ['i', 'class'];
  Object.keys($$props).forEach(function (key) {
    if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn("<Icon> was created with unknown prop '".concat(key, "'"));
  });
  var click_handler = function click_handler(_) {
    return dispatch('click');
  };
  $$self.$$set = function ($$props) {
    if ('i' in $$props) $$invalidate(0, i = $$props.i);
    if ('class' in $$props) $$invalidate(1, clazz = $$props.class);
  };
  $$self.$capture_state = function () {
    return {
      createEventDispatcher: createEventDispatcher,
      dispatch: dispatch,
      i: i,
      clazz: clazz
    };
  };
  $$self.$inject_state = function ($$props) {
    if ('i' in $$props) $$invalidate(0, i = $$props.i);
    if ('clazz' in $$props) $$invalidate(1, clazz = $$props.clazz);
  };
  if ($$props && "$$inject" in $$props) {
    $$self.$inject_state($$props.$$inject);
  }
  return [i, clazz, dispatch, click_handler];
}
var Icon = /*#__PURE__*/function (_SvelteComponentDev) {
  function Icon(options) {
    var _this;
    _classCallCheck(this, Icon);
    _this = _callSuper(this, Icon, [options]);
    init(_this, options, instance$m, create_fragment$m, safe_not_equal, {
      i: 0,
      class: 1
    });
    dispatch_dev("SvelteRegisterComponent", {
      component: _this,
      tagName: "Icon",
      options: options,
      id: create_fragment$m.name
    });
    return _this;
  }
  _inherits(Icon, _SvelteComponentDev);
  return _createClass(Icon, [{
    key: "i",
    get: function get() {
      throw new Error("<Icon>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    },
    set: function set(value) {
      throw new Error("<Icon>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    }
  }, {
    key: "class",
    get: function get() {
      throw new Error("<Icon>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    },
    set: function set(value) {
      throw new Error("<Icon>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    }
  }]);
}(SvelteComponentDev);

var file$l = "web/components/Button.svelte";

// (2:2) {#if i}
function create_if_block_1$7(ctx) {
  var icon;
  var current;
  icon = new Icon({
    props: {
      i: /*i*/ctx[0]
    },
    $$inline: true
  });
  var block = {
    c: function create() {
      create_component(icon.$$.fragment);
    },
    m: function mount(target, anchor) {
      mount_component(icon, target, anchor);
      current = true;
    },
    p: function update(ctx, dirty) {
      var icon_changes = {};
      if (dirty & /*i*/1) icon_changes.i = /*i*/ctx[0];
      icon.$set(icon_changes);
    },
    i: function intro(local) {
      if (current) return;
      transition_in(icon.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(icon.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      destroy_component(icon, detaching);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_if_block_1$7.name,
    type: "if",
    source: "(2:2) {#if i}",
    ctx: ctx
  });
  return block;
}

// (3:2) {#if t}
function create_if_block$e(ctx) {
  var t_1;
  var block = {
    c: function create() {
      t_1 = text( /*t*/ctx[1]);
    },
    m: function mount(target, anchor) {
      insert_dev(target, t_1, anchor);
    },
    p: function update(ctx, dirty) {
      if (dirty & /*t*/2) set_data_dev(t_1, /*t*/ctx[1]);
    },
    d: function destroy(detaching) {
      if (detaching) detach_dev(t_1);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_if_block$e.name,
    type: "if",
    source: "(3:2) {#if t}",
    ctx: ctx
  });
  return block;
}
function create_fragment$l(ctx) {
  var button;
  var t_1;
  var current;
  var mounted;
  var dispose;
  var if_block0 = /*i*/ctx[0] && create_if_block_1$7(ctx);
  var if_block1 = /*t*/ctx[1] && create_if_block$e(ctx);
  var block = {
    c: function create() {
      button = element("button");
      if (if_block0) if_block0.c();
      t_1 = space();
      if (if_block1) if_block1.c();
      attr_dev(button, "class", /*clazz*/ctx[4]);
      button.disabled = /*disabled*/ctx[3];
      toggle_class(button, "row", /*i*/ctx[0] && /*t*/ctx[1]);
      add_location(button, file$l, 0, 0, 0);
    },
    l: function claim(nodes) {
      throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    },
    m: function mount(target, anchor) {
      insert_dev(target, button, anchor);
      if (if_block0) if_block0.m(button, null);
      append_dev(button, t_1);
      if (if_block1) if_block1.m(button, null);
      current = true;
      if (!mounted) {
        dispose = listen_dev(button, "click", function () {
          if (is_function( /*action*/ctx[2])) /*action*/ctx[2].apply(this, arguments);
        }, false, false, false, false);
        mounted = true;
      }
    },
    p: function update(new_ctx, _ref) {
      var _ref2 = _slicedToArray(_ref, 1),
        dirty = _ref2[0];
      ctx = new_ctx;
      if ( /*i*/ctx[0]) {
        if (if_block0) {
          if_block0.p(ctx, dirty);
          if (dirty & /*i*/1) {
            transition_in(if_block0, 1);
          }
        } else {
          if_block0 = create_if_block_1$7(ctx);
          if_block0.c();
          transition_in(if_block0, 1);
          if_block0.m(button, t_1);
        }
      } else if (if_block0) {
        group_outros();
        transition_out(if_block0, 1, 1, function () {
          if_block0 = null;
        });
        check_outros();
      }
      if ( /*t*/ctx[1]) {
        if (if_block1) {
          if_block1.p(ctx, dirty);
        } else {
          if_block1 = create_if_block$e(ctx);
          if_block1.c();
          if_block1.m(button, null);
        }
      } else if (if_block1) {
        if_block1.d(1);
        if_block1 = null;
      }
      if (!current || dirty & /*clazz*/16) {
        attr_dev(button, "class", /*clazz*/ctx[4]);
      }
      if (!current || dirty & /*disabled*/8) {
        prop_dev(button, "disabled", /*disabled*/ctx[3]);
      }
      if (!current || dirty & /*clazz, i, t*/19) {
        toggle_class(button, "row", /*i*/ctx[0] && /*t*/ctx[1]);
      }
    },
    i: function intro(local) {
      if (current) return;
      transition_in(if_block0);
      current = true;
    },
    o: function outro(local) {
      transition_out(if_block0);
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching) detach_dev(button);
      if (if_block0) if_block0.d();
      if (if_block1) if_block1.d();
      mounted = false;
      dispose();
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_fragment$l.name,
    type: "component",
    source: "",
    ctx: ctx
  });
  return block;
}
function instance$l($$self, $$props, $$invalidate) {
  var _$$props$$$slots = $$props.$$slots,
    slots = _$$props$$$slots === void 0 ? {} : _$$props$$$slots;
    $$props.$$scope;
  validate_slots('Button', slots, []);
  var i = $$props.i,
    t = $$props.t,
    action = $$props.action,
    disabled = $$props.disabled;
  var _$$props$class = $$props.class,
    clazz = _$$props$class === void 0 ? '' : _$$props$class;
  $$self.$$.on_mount.push(function () {
    if (i === undefined && !('i' in $$props || $$self.$$.bound[$$self.$$.props['i']])) {
      console.warn("<Button> was created without expected prop 'i'");
    }
    if (t === undefined && !('t' in $$props || $$self.$$.bound[$$self.$$.props['t']])) {
      console.warn("<Button> was created without expected prop 't'");
    }
    if (action === undefined && !('action' in $$props || $$self.$$.bound[$$self.$$.props['action']])) {
      console.warn("<Button> was created without expected prop 'action'");
    }
    if (disabled === undefined && !('disabled' in $$props || $$self.$$.bound[$$self.$$.props['disabled']])) {
      console.warn("<Button> was created without expected prop 'disabled'");
    }
  });
  var writable_props = ['i', 't', 'action', 'disabled', 'class'];
  Object.keys($$props).forEach(function (key) {
    if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn("<Button> was created with unknown prop '".concat(key, "'"));
  });
  $$self.$$set = function ($$props) {
    if ('i' in $$props) $$invalidate(0, i = $$props.i);
    if ('t' in $$props) $$invalidate(1, t = $$props.t);
    if ('action' in $$props) $$invalidate(2, action = $$props.action);
    if ('disabled' in $$props) $$invalidate(3, disabled = $$props.disabled);
    if ('class' in $$props) $$invalidate(4, clazz = $$props.class);
  };
  $$self.$capture_state = function () {
    return {
      Icon: Icon,
      i: i,
      t: t,
      action: action,
      disabled: disabled,
      clazz: clazz
    };
  };
  $$self.$inject_state = function ($$props) {
    if ('i' in $$props) $$invalidate(0, i = $$props.i);
    if ('t' in $$props) $$invalidate(1, t = $$props.t);
    if ('action' in $$props) $$invalidate(2, action = $$props.action);
    if ('disabled' in $$props) $$invalidate(3, disabled = $$props.disabled);
    if ('clazz' in $$props) $$invalidate(4, clazz = $$props.clazz);
  };
  if ($$props && "$$inject" in $$props) {
    $$self.$inject_state($$props.$$inject);
  }
  return [i, t, action, disabled, clazz];
}
var Button = /*#__PURE__*/function (_SvelteComponentDev) {
  function Button(options) {
    var _this;
    _classCallCheck(this, Button);
    _this = _callSuper(this, Button, [options]);
    init(_this, options, instance$l, create_fragment$l, safe_not_equal, {
      i: 0,
      t: 1,
      action: 2,
      disabled: 3,
      class: 4
    });
    dispatch_dev("SvelteRegisterComponent", {
      component: _this,
      tagName: "Button",
      options: options,
      id: create_fragment$l.name
    });
    return _this;
  }
  _inherits(Button, _SvelteComponentDev);
  return _createClass(Button, [{
    key: "i",
    get: function get() {
      throw new Error("<Button>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    },
    set: function set(value) {
      throw new Error("<Button>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    }
  }, {
    key: "t",
    get: function get() {
      throw new Error("<Button>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    },
    set: function set(value) {
      throw new Error("<Button>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    }
  }, {
    key: "action",
    get: function get() {
      throw new Error("<Button>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    },
    set: function set(value) {
      throw new Error("<Button>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    }
  }, {
    key: "disabled",
    get: function get() {
      throw new Error("<Button>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    },
    set: function set(value) {
      throw new Error("<Button>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    }
  }, {
    key: "class",
    get: function get() {
      throw new Error("<Button>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    },
    set: function set(value) {
      throw new Error("<Button>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    }
  }]);
}(SvelteComponentDev);

const subscriber_queue = [];
/**
 * Create a `Writable` store that allows both updating and reading by subscription.
 * @param {*=}value initial value
 * @param {StartStopNotifier=} start
 */
function writable(value, start = noop) {
    let stop;
    const subscribers = new Set();
    function set(new_value) {
        if (safe_not_equal(value, new_value)) {
            value = new_value;
            if (stop) { // store is ready
                const run_queue = !subscriber_queue.length;
                for (const subscriber of subscribers) {
                    subscriber[1]();
                    subscriber_queue.push(subscriber, value);
                }
                if (run_queue) {
                    for (let i = 0; i < subscriber_queue.length; i += 2) {
                        subscriber_queue[i][0](subscriber_queue[i + 1]);
                    }
                    subscriber_queue.length = 0;
                }
            }
        }
    }
    function update(fn) {
        set(fn(value));
    }
    function subscribe(run, invalidate = noop) {
        const subscriber = [run, invalidate];
        subscribers.add(subscriber);
        if (subscribers.size === 1) {
            stop = start(set) || noop;
        }
        run(value);
        return () => {
            subscribers.delete(subscriber);
            if (subscribers.size === 0 && stop) {
                stop();
                stop = null;
            }
        };
    }
    return { set, update, subscribe };
}

var session_id = writable();
var curr_page = writable();
var menu = writable();

function api(_x, _x2, _x3) {
  return _api.apply(this, arguments);
}
function _api() {
  _api = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(route, method, body) {
    var _res$headers;
    var options, res, data;
    return _regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          options = {
            headers: {},
            method: method || 'GET'
          };
          if (get_store_value(session_id)) options.headers['Authorization'] = "Bearer ".concat(get_store_value(session_id));else if (localStorage.getItem('session_id')) options.headers['Authorization'] = "Bearer ".concat(localStorage.getItem('session_id'));
          if (body) {
            options.body = JSON.stringify(body);
            options.headers['Content-Type'] = 'application/json';
          }
          _context.next = 5;
          return fetch("".concat(window.location.origin, "/").concat(route), options);
        case 5:
          res = _context.sent;
          if (!((_res$headers = res.headers) !== null && _res$headers !== void 0 && (_res$headers = _res$headers.get('content-type')) !== null && _res$headers !== void 0 && _res$headers.includes('application/json'))) {
            _context.next = 10;
            break;
          }
          _context.next = 9;
          return res.json();
        case 9:
          data = _context.sent;
        case 10:
          return _context.abrupt("return", {
            res: res,
            data: data
          });
        case 11:
        case "end":
          return _context.stop();
      }
    }, _callee);
  }));
  return _api.apply(this, arguments);
}

function styleInject(css, ref) {
  if (ref === void 0) ref = {};
  var insertAt = ref.insertAt;
  if (!css || typeof document === 'undefined') {
    return;
  }
  var head = document.head || document.getElementsByTagName('head')[0];
  var style = document.createElement('style');
  style.type = 'text/css';
  if (insertAt === 'top') {
    if (head.firstChild) {
      head.insertBefore(style, head.firstChild);
    } else {
      head.appendChild(style);
    }
  } else {
    head.appendChild(style);
  }
  if (style.styleSheet) {
    style.styleSheet.cssText = css;
  } else {
    style.appendChild(document.createTextNode(css));
  }
}

var css_248z$h = "form.svelte-1oot8iw{max-width:300px;margin:0 auto}input.svelte-1oot8iw{width:100% !important;margin:10px 0;resize:none}.cards.svelte-1oot8iw{display:flex;flex-direction:column;gap:10px}.card.svelte-1oot8iw{display:inline-flex;margin:0 auto}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkFkbWluUGFuZWwuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQixlQUFlLENBQUMsYUFBYSxDQUFDLHFCQUFxQixxQkFBcUIsQ0FBQyxhQUFhLENBQUMsV0FBVyxDQUFDLHNCQUFzQixZQUFZLENBQUMscUJBQXFCLENBQUMsUUFBUSxDQUFDLHFCQUFxQixtQkFBbUIsQ0FBQyxhQUFhIiwiZmlsZSI6IkFkbWluUGFuZWwuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiZm9ybS5zdmVsdGUtMW9vdDhpd3ttYXgtd2lkdGg6MzAwcHg7bWFyZ2luOjAgYXV0b31pbnB1dC5zdmVsdGUtMW9vdDhpd3t3aWR0aDoxMDAlICFpbXBvcnRhbnQ7bWFyZ2luOjEwcHggMDtyZXNpemU6bm9uZX0uY2FyZHMuc3ZlbHRlLTFvb3Q4aXd7ZGlzcGxheTpmbGV4O2ZsZXgtZGlyZWN0aW9uOmNvbHVtbjtnYXA6MTBweH0uY2FyZC5zdmVsdGUtMW9vdDhpd3tkaXNwbGF5OmlubGluZS1mbGV4O21hcmdpbjowIGF1dG99Il19 */";
styleInject(css_248z$h);

var file$k = "web/routes/AdminPanel.svelte";
function get_each_context$7(ctx, list, i) {
  var child_ctx = ctx.slice();
  child_ctx[10] = list[i];
  return child_ctx;
}

// (13:0) {#each menus || [] as menu}
function create_each_block$7(ctx) {
  var div;
  var h2;
  var t0_value = /*menu*/ctx[10].name + "";
  var t0;
  var t1;
  var button;
  var t2;
  var current;
  function func() {
    var _ctx;
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    return /*func*/(_ctx = ctx)[9].apply(_ctx, [/*menu*/ctx[10]].concat(args));
  }
  button = new Button({
    props: {
      class: "red",
      action: func,
      i: "delete"
    },
    $$inline: true
  });
  var block = {
    c: function create() {
      div = element("div");
      h2 = element("h2");
      t0 = text(t0_value);
      t1 = space();
      create_component(button.$$.fragment);
      t2 = space();
      attr_dev(h2, "class", "special tac");
      add_location(h2, file$k, 14, 4, 503);
      attr_dev(div, "class", "card row svelte-1oot8iw");
      add_location(div, file$k, 13, 2, 476);
    },
    m: function mount(target, anchor) {
      insert_dev(target, div, anchor);
      append_dev(div, h2);
      append_dev(h2, t0);
      append_dev(div, t1);
      mount_component(button, div, null);
      append_dev(div, t2);
      current = true;
    },
    p: function update(new_ctx, dirty) {
      ctx = new_ctx;
      if ((!current || dirty & /*menus*/1) && t0_value !== (t0_value = /*menu*/ctx[10].name + "")) set_data_dev(t0, t0_value);
      var button_changes = {};
      if (dirty & /*menus*/1) button_changes.action = func;
      button.$set(button_changes);
    },
    i: function intro(local) {
      if (current) return;
      transition_in(button.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(button.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching) detach_dev(div);
      destroy_component(button);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_each_block$7.name,
    type: "each",
    source: "(13:0) {#each menus || [] as menu}",
    ctx: ctx
  });
  return block;
}
function create_fragment$k(ctx) {
  var form_1;
  var label0;
  var t0;
  var input0;
  var t1;
  var label1;
  var t2;
  var input1;
  var t3;
  var label2;
  var t4;
  var input2;
  var t5;
  var label3;
  var t6;
  var input3;
  var t7;
  var button;
  var t8;
  var div0;
  var t9;
  var div1;
  var current;
  var mounted;
  var dispose;
  button = new Button({
    props: {
      disabled: /*l_submitting*/ctx[2],
      action: /*submit*/ctx[3],
      t: /*l_submitting*/ctx[2] ? '...' : 'Create'
    },
    $$inline: true
  });
  var each_value = /*menus*/ctx[0] || [];
  validate_each_argument(each_value);
  var each_blocks = [];
  for (var i = 0; i < each_value.length; i += 1) {
    each_blocks[i] = create_each_block$7(get_each_context$7(ctx, each_value, i));
  }
  var out = function out(i) {
    return transition_out(each_blocks[i], 1, 1, function () {
      each_blocks[i] = null;
    });
  };
  var block = {
    c: function create() {
      form_1 = element("form");
      label0 = element("label");
      t0 = text("Username: ");
      input0 = element("input");
      t1 = space();
      label1 = element("label");
      t2 = text("Password: ");
      input1 = element("input");
      t3 = space();
      label2 = element("label");
      t4 = text("Name:     ");
      input2 = element("input");
      t5 = space();
      label3 = element("label");
      t6 = text("Path:     ");
      input3 = element("input");
      t7 = space();
      create_component(button.$$.fragment);
      t8 = space();
      div0 = element("div");
      t9 = space();
      div1 = element("div");
      for (var _i = 0; _i < each_blocks.length; _i += 1) {
        each_blocks[_i].c();
      }
      input0.required = true;
      attr_dev(input0, "class", "svelte-1oot8iw");
      add_location(input0, file$k, 1, 20, 27);
      add_location(label0, file$k, 1, 2, 9);
      input1.required = true;
      attr_dev(input1, "class", "svelte-1oot8iw");
      add_location(input1, file$k, 2, 20, 102);
      add_location(label1, file$k, 2, 2, 84);
      input2.required = true;
      attr_dev(input2, "class", "svelte-1oot8iw");
      add_location(input2, file$k, 3, 20, 177);
      add_location(label2, file$k, 3, 2, 159);
      input3.required = true;
      attr_dev(input3, "class", "svelte-1oot8iw");
      add_location(input3, file$k, 4, 20, 252);
      add_location(label3, file$k, 4, 2, 234);
      attr_dev(form_1, "class", "svelte-1oot8iw");
      add_location(form_1, file$k, 0, 0, 0);
      attr_dev(div0, "class", "hr");
      add_location(div0, file$k, 9, 0, 406);
      attr_dev(div1, "class", "cards svelte-1oot8iw");
      add_location(div1, file$k, 11, 0, 426);
    },
    l: function claim(nodes) {
      throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    },
    m: function mount(target, anchor) {
      insert_dev(target, form_1, anchor);
      append_dev(form_1, label0);
      append_dev(label0, t0);
      append_dev(label0, input0);
      set_input_value(input0, /*form*/ctx[1].username);
      append_dev(form_1, t1);
      append_dev(form_1, label1);
      append_dev(label1, t2);
      append_dev(label1, input1);
      set_input_value(input1, /*form*/ctx[1].password);
      append_dev(form_1, t3);
      append_dev(form_1, label2);
      append_dev(label2, t4);
      append_dev(label2, input2);
      set_input_value(input2, /*form*/ctx[1].name);
      append_dev(form_1, t5);
      append_dev(form_1, label3);
      append_dev(label3, t6);
      append_dev(label3, input3);
      set_input_value(input3, /*form*/ctx[1].path);
      append_dev(form_1, t7);
      mount_component(button, form_1, null);
      insert_dev(target, t8, anchor);
      insert_dev(target, div0, anchor);
      insert_dev(target, t9, anchor);
      insert_dev(target, div1, anchor);
      for (var _i2 = 0; _i2 < each_blocks.length; _i2 += 1) {
        if (each_blocks[_i2]) {
          each_blocks[_i2].m(div1, null);
        }
      }
      current = true;
      if (!mounted) {
        dispose = [listen_dev(input0, "input", /*input0_input_handler*/ctx[5]), listen_dev(input1, "input", /*input1_input_handler*/ctx[6]), listen_dev(input2, "input", /*input2_input_handler*/ctx[7]), listen_dev(input3, "input", /*input3_input_handler*/ctx[8])];
        mounted = true;
      }
    },
    p: function update(ctx, _ref) {
      var _ref2 = _slicedToArray(_ref, 1),
        dirty = _ref2[0];
      if (dirty & /*form*/2 && input0.value !== /*form*/ctx[1].username) {
        set_input_value(input0, /*form*/ctx[1].username);
      }
      if (dirty & /*form*/2 && input1.value !== /*form*/ctx[1].password) {
        set_input_value(input1, /*form*/ctx[1].password);
      }
      if (dirty & /*form*/2 && input2.value !== /*form*/ctx[1].name) {
        set_input_value(input2, /*form*/ctx[1].name);
      }
      if (dirty & /*form*/2 && input3.value !== /*form*/ctx[1].path) {
        set_input_value(input3, /*form*/ctx[1].path);
      }
      var button_changes = {};
      if (dirty & /*l_submitting*/4) button_changes.disabled = /*l_submitting*/ctx[2];
      if (dirty & /*l_submitting*/4) button_changes.t = /*l_submitting*/ctx[2] ? '...' : 'Create';
      button.$set(button_changes);
      if (dirty & /*delete_menu, menus*/17) {
        each_value = /*menus*/ctx[0] || [];
        validate_each_argument(each_value);
        var _i3;
        for (_i3 = 0; _i3 < each_value.length; _i3 += 1) {
          var child_ctx = get_each_context$7(ctx, each_value, _i3);
          if (each_blocks[_i3]) {
            each_blocks[_i3].p(child_ctx, dirty);
            transition_in(each_blocks[_i3], 1);
          } else {
            each_blocks[_i3] = create_each_block$7(child_ctx);
            each_blocks[_i3].c();
            transition_in(each_blocks[_i3], 1);
            each_blocks[_i3].m(div1, null);
          }
        }
        group_outros();
        for (_i3 = each_value.length; _i3 < each_blocks.length; _i3 += 1) {
          out(_i3);
        }
        check_outros();
      }
    },
    i: function intro(local) {
      if (current) return;
      transition_in(button.$$.fragment, local);
      for (var _i4 = 0; _i4 < each_value.length; _i4 += 1) {
        transition_in(each_blocks[_i4]);
      }
      current = true;
    },
    o: function outro(local) {
      transition_out(button.$$.fragment, local);
      each_blocks = each_blocks.filter(Boolean);
      for (var _i5 = 0; _i5 < each_blocks.length; _i5 += 1) {
        transition_out(each_blocks[_i5]);
      }
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching) detach_dev(form_1);
      destroy_component(button);
      if (detaching) detach_dev(t8);
      if (detaching) detach_dev(div0);
      if (detaching) detach_dev(t9);
      if (detaching) detach_dev(div1);
      destroy_each(each_blocks, detaching);
      mounted = false;
      run_all(dispose);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_fragment$k.name,
    type: "component",
    source: "",
    ctx: ctx
  });
  return block;
}
function instance$k($$self, $$props, $$invalidate) {
  var _$$props$$$slots = $$props.$$slots,
    slots = _$$props$$$slots === void 0 ? {} : _$$props$$$slots;
    $$props.$$scope;
  validate_slots('AdminPanel', slots, []);
  var menus;
  var form = {};
  var l_submitting;
  function submit() {
    return _submit.apply(this, arguments);
  }
  function _submit() {
    _submit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {
      var _yield$api, data;
      return _regeneratorRuntime().wrap(function _callee2$(_context2) {
        while (1) switch (_context2.prev = _context2.next) {
          case 0:
            $$invalidate(2, l_submitting = true);
            _context2.next = 3;
            return api('menu', 'POST', form);
          case 3:
            _yield$api = _context2.sent;
            data = _yield$api.data;
            $$invalidate(0, menus = [].concat(_toConsumableArray(menus), [data.menu]));
            $$invalidate(2, l_submitting = false);
            $$invalidate(1, form = {});
          case 8:
          case "end":
            return _context2.stop();
        }
      }, _callee2);
    }));
    return _submit.apply(this, arguments);
  }
  function delete_menu(_x) {
    return _delete_menu.apply(this, arguments);
  }
  function _delete_menu() {
    _delete_menu = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(id) {
      return _regeneratorRuntime().wrap(function _callee3$(_context3) {
        while (1) switch (_context3.prev = _context3.next) {
          case 0:
            if (confirm('Are you sure you want to delete it?')) {
              _context3.next = 2;
              break;
            }
            return _context3.abrupt("return");
          case 2:
            _context3.next = 4;
            return api("menu/".concat(id), 'DELETE');
          case 4:
            $$invalidate(0, menus = menus.filter(function (m) {
              return m.id != id;
            }));
          case 5:
          case "end":
            return _context3.stop();
        }
      }, _callee3);
    }));
    return _delete_menu.apply(this, arguments);
  }
  onMount( /*#__PURE__*/function () {
    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(_) {
      return _regeneratorRuntime().wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            _context.t0 = $$invalidate;
            _context.next = 3;
            return api('menus');
          case 3:
            _context.t1 = menus = _context.sent.data.menus;
            (0, _context.t0)(0, _context.t1);
          case 5:
          case "end":
            return _context.stop();
        }
      }, _callee);
    }));
    return function (_x2) {
      return _ref3.apply(this, arguments);
    };
  }());
  var writable_props = [];
  Object.keys($$props).forEach(function (key) {
    if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn("<AdminPanel> was created with unknown prop '".concat(key, "'"));
  });
  function input0_input_handler() {
    form.username = this.value;
    $$invalidate(1, form);
  }
  function input1_input_handler() {
    form.password = this.value;
    $$invalidate(1, form);
  }
  function input2_input_handler() {
    form.name = this.value;
    $$invalidate(1, form);
  }
  function input3_input_handler() {
    form.path = this.value;
    $$invalidate(1, form);
  }
  var func = function func(menu, _) {
    return delete_menu(menu.id);
  };
  $$self.$capture_state = function () {
    return {
      Button: Button,
      onMount: onMount,
      api: api,
      menus: menus,
      form: form,
      l_submitting: l_submitting,
      submit: submit,
      delete_menu: delete_menu
    };
  };
  $$self.$inject_state = function ($$props) {
    if ('menus' in $$props) $$invalidate(0, menus = $$props.menus);
    if ('form' in $$props) $$invalidate(1, form = $$props.form);
    if ('l_submitting' in $$props) $$invalidate(2, l_submitting = $$props.l_submitting);
  };
  if ($$props && "$$inject" in $$props) {
    $$self.$inject_state($$props.$$inject);
  }
  return [menus, form, l_submitting, submit, delete_menu, input0_input_handler, input1_input_handler, input2_input_handler, input3_input_handler, func];
}
var AdminPanel = /*#__PURE__*/function (_SvelteComponentDev) {
  function AdminPanel(options) {
    var _this;
    _classCallCheck(this, AdminPanel);
    _this = _callSuper(this, AdminPanel, [options]);
    init(_this, options, instance$k, create_fragment$k, safe_not_equal, {});
    dispatch_dev("SvelteRegisterComponent", {
      component: _this,
      tagName: "AdminPanel",
      options: options,
      id: create_fragment$k.name
    });
    return _this;
  }
  _inherits(AdminPanel, _SvelteComponentDev);
  return _createClass(AdminPanel);
}(SvelteComponentDev);

var css_248z$g = ".modal.svelte-1agyxdy{display:flex;justify-content:center;align-items:center;position:fixed;left:0;top:0;z-index:1;width:100%;height:100%;background-color:rgba(0, 0, 0, 0.5)}.modal-content.svelte-1agyxdy{display:flex;flex-direction:column;width:400px;max-width:80%;padding:20px;border-radius:5px;max-height:70%;background-color:var(--bg0);overflow:auto}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIk1vZGFsLmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxzQkFBc0IsWUFBWSxDQUFDLHNCQUFzQixDQUFDLGtCQUFrQixDQUFDLGNBQWMsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxVQUFVLENBQUMsV0FBVyxDQUFDLG1DQUFtQyxDQUFDLDhCQUE4QixZQUFZLENBQUMscUJBQXFCLENBQUMsV0FBVyxDQUFDLGFBQWEsQ0FBQyxZQUFZLENBQUMsaUJBQWlCLENBQUMsY0FBYyxDQUFDLDJCQUEyQixDQUFDLGFBQWEiLCJmaWxlIjoiTW9kYWwuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1vZGFsLnN2ZWx0ZS0xYWd5eGR5e2Rpc3BsYXk6ZmxleDtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyO2FsaWduLWl0ZW1zOmNlbnRlcjtwb3NpdGlvbjpmaXhlZDtsZWZ0OjA7dG9wOjA7ei1pbmRleDoxO3dpZHRoOjEwMCU7aGVpZ2h0OjEwMCU7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDAsIDAsIDAsIDAuNSl9Lm1vZGFsLWNvbnRlbnQuc3ZlbHRlLTFhZ3l4ZHl7ZGlzcGxheTpmbGV4O2ZsZXgtZGlyZWN0aW9uOmNvbHVtbjt3aWR0aDo0MDBweDttYXgtd2lkdGg6ODAlO3BhZGRpbmc6MjBweDtib3JkZXItcmFkaXVzOjVweDttYXgtaGVpZ2h0OjcwJTtiYWNrZ3JvdW5kLWNvbG9yOnZhcigtLWJnMCk7b3ZlcmZsb3c6YXV0b30iXX0= */";
styleInject(css_248z$g);

var file$j = "web/components/Modal.svelte";

// (1:0) {#if show}
function create_if_block$d(ctx) {
  var div1;
  var div0;
  var current;
  var mounted;
  var dispose;
  var default_slot_template = /*#slots*/ctx[3].default;
  var default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ctx[2], null);
  var block = {
    c: function create() {
      div1 = element("div");
      div0 = element("div");
      if (default_slot) default_slot.c();
      attr_dev(div0, "class", "modal-content svelte-1agyxdy");
      add_location(div0, file$j, 3, 4, 124);
      attr_dev(div1, "class", "modal svelte-1agyxdy");
      add_location(div1, file$j, 2, 2, 72);
    },
    m: function mount(target, anchor) {
      insert_dev(target, div1, anchor);
      append_dev(div1, div0);
      if (default_slot) {
        default_slot.m(div0, null);
      }
      current = true;
      if (!mounted) {
        dispose = listen_dev(div1, "click", /*background_click*/ctx[1], false, false, false, false);
        mounted = true;
      }
    },
    p: function update(ctx, dirty) {
      if (default_slot) {
        if (default_slot.p && (!current || dirty & /*$$scope*/4)) {
          update_slot_base(default_slot, default_slot_template, ctx, /*$$scope*/ctx[2], !current ? get_all_dirty_from_scope( /*$$scope*/ctx[2]) : get_slot_changes(default_slot_template, /*$$scope*/ctx[2], dirty, null), null);
        }
      }
    },
    i: function intro(local) {
      if (current) return;
      transition_in(default_slot, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(default_slot, local);
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching) detach_dev(div1);
      if (default_slot) default_slot.d(detaching);
      mounted = false;
      dispose();
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_if_block$d.name,
    type: "if",
    source: "(1:0) {#if show}",
    ctx: ctx
  });
  return block;
}
function create_fragment$j(ctx) {
  var if_block_anchor;
  var current;
  var if_block = /*show*/ctx[0] && create_if_block$d(ctx);
  var block = {
    c: function create() {
      if (if_block) if_block.c();
      if_block_anchor = empty();
    },
    l: function claim(nodes) {
      throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    },
    m: function mount(target, anchor) {
      if (if_block) if_block.m(target, anchor);
      insert_dev(target, if_block_anchor, anchor);
      current = true;
    },
    p: function update(ctx, _ref) {
      var _ref2 = _slicedToArray(_ref, 1),
        dirty = _ref2[0];
      if ( /*show*/ctx[0]) {
        if (if_block) {
          if_block.p(ctx, dirty);
          if (dirty & /*show*/1) {
            transition_in(if_block, 1);
          }
        } else {
          if_block = create_if_block$d(ctx);
          if_block.c();
          transition_in(if_block, 1);
          if_block.m(if_block_anchor.parentNode, if_block_anchor);
        }
      } else if (if_block) {
        group_outros();
        transition_out(if_block, 1, 1, function () {
          if_block = null;
        });
        check_outros();
      }
    },
    i: function intro(local) {
      if (current) return;
      transition_in(if_block);
      current = true;
    },
    o: function outro(local) {
      transition_out(if_block);
      current = false;
    },
    d: function destroy(detaching) {
      if (if_block) if_block.d(detaching);
      if (detaching) detach_dev(if_block_anchor);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_fragment$j.name,
    type: "component",
    source: "",
    ctx: ctx
  });
  return block;
}
function instance$j($$self, $$props, $$invalidate) {
  var _$$props$$$slots = $$props.$$slots,
    slots = _$$props$$$slots === void 0 ? {} : _$$props$$$slots,
    $$scope = $$props.$$scope;
  validate_slots('Modal', slots, ['default']);
  var dispatch = createEventDispatcher();
  var show = $$props.show;
  function close() {
    dispatch('close');
    $$invalidate(0, show = false);
  }
  function background_click(e) {
    if (e.target.classList.contains('modal')) close();
  }
  onMount(function (_) {
    function on_keydown(e) {
      if (e.key == 'Escape') close();
    }
    window.addEventListener('keydown', on_keydown);
    return function (_) {
      window.removeEventListener('keydown', on_keydown);
    };
  });
  $$self.$$.on_mount.push(function () {
    if (show === undefined && !('show' in $$props || $$self.$$.bound[$$self.$$.props['show']])) {
      console.warn("<Modal> was created without expected prop 'show'");
    }
  });
  var writable_props = ['show'];
  Object.keys($$props).forEach(function (key) {
    if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn("<Modal> was created with unknown prop '".concat(key, "'"));
  });
  $$self.$$set = function ($$props) {
    if ('show' in $$props) $$invalidate(0, show = $$props.show);
    if ('$$scope' in $$props) $$invalidate(2, $$scope = $$props.$$scope);
  };
  $$self.$capture_state = function () {
    return {
      onMount: onMount,
      createEventDispatcher: createEventDispatcher,
      dispatch: dispatch,
      show: show,
      close: close,
      background_click: background_click
    };
  };
  $$self.$inject_state = function ($$props) {
    if ('show' in $$props) $$invalidate(0, show = $$props.show);
  };
  if ($$props && "$$inject" in $$props) {
    $$self.$inject_state($$props.$$inject);
  }
  return [show, background_click, $$scope, slots];
}
var Modal = /*#__PURE__*/function (_SvelteComponentDev) {
  function Modal(options) {
    var _this;
    _classCallCheck(this, Modal);
    _this = _callSuper(this, Modal, [options]);
    init(_this, options, instance$j, create_fragment$j, safe_not_equal, {
      show: 0
    });
    dispatch_dev("SvelteRegisterComponent", {
      component: _this,
      tagName: "Modal",
      options: options,
      id: create_fragment$j.name
    });
    return _this;
  }
  _inherits(Modal, _SvelteComponentDev);
  return _createClass(Modal, [{
    key: "show",
    get: function get() {
      throw new Error("<Modal>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    },
    set: function set(value) {
      throw new Error("<Modal>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    }
  }]);
}(SvelteComponentDev);

// Menu
function edit_menu(_x) {
  return _edit_menu.apply(this, arguments);
}

// Category
function _edit_menu() {
  _edit_menu = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(_data) {
    var menu$1;
    return _regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          menu$1 = get_store_value(menu);
          _context.next = 3;
          return api("menu/".concat(menu$1.id), 'PUT', _data);
        case 3:
          menu$1 = _objectSpread2(_objectSpread2({}, menu$1), _data);
          menu.set(menu$1);
        case 5:
        case "end":
          return _context.stop();
      }
    }, _callee);
  }));
  return _edit_menu.apply(this, arguments);
}
function create_category(_x2) {
  return _create_category.apply(this, arguments);
}
function _create_category() {
  _create_category = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(_data) {
    var menu$1, _yield$api, data;
    return _regeneratorRuntime().wrap(function _callee2$(_context2) {
      while (1) switch (_context2.prev = _context2.next) {
        case 0:
          menu$1 = get_store_value(menu);
          _context2.next = 3;
          return api("category/".concat(menu$1.id), 'POST', _data);
        case 3:
          _yield$api = _context2.sent;
          data = _yield$api.data;
          menu$1.categories = [].concat(_toConsumableArray(menu$1.categories || []), [data.category]);
          menu.set(menu$1);
        case 7:
        case "end":
          return _context2.stop();
      }
    }, _callee2);
  }));
  return _create_category.apply(this, arguments);
}
function edit_category(_x3, _x4) {
  return _edit_category.apply(this, arguments);
}
function _edit_category() {
  _edit_category = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(id, _data) {
    var menu$1, ci;
    return _regeneratorRuntime().wrap(function _callee3$(_context3) {
      while (1) switch (_context3.prev = _context3.next) {
        case 0:
          menu$1 = get_store_value(menu);
          _context3.next = 3;
          return api("category/".concat(id), 'PUT', _data);
        case 3:
          for (ci in menu$1.categories) if (menu$1.categories[ci].id == id) menu$1.categories[ci] = _objectSpread2(_objectSpread2({}, menu$1.categories[ci]), _data);
          menu.set(menu$1);
        case 5:
        case "end":
          return _context3.stop();
      }
    }, _callee3);
  }));
  return _edit_category.apply(this, arguments);
}
function delete_category(_x5) {
  return _delete_category.apply(this, arguments);
}
function _delete_category() {
  _delete_category = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(id) {
    var menu$1;
    return _regeneratorRuntime().wrap(function _callee4$(_context4) {
      while (1) switch (_context4.prev = _context4.next) {
        case 0:
          menu$1 = get_store_value(menu);
          _context4.next = 3;
          return api("category/".concat(id), 'DELETE');
        case 3:
          menu$1.categories = menu$1.categories.filter(function (c) {
            return c.id != id;
          });
          menu.set(menu$1);
        case 5:
        case "end":
          return _context4.stop();
      }
    }, _callee4);
  }));
  return _delete_category.apply(this, arguments);
}
function move_category_up(_x6) {
  return _move_category_up.apply(this, arguments);
}
function _move_category_up() {
  _move_category_up = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(id) {
    var menu$1, i, item;
    return _regeneratorRuntime().wrap(function _callee5$(_context5) {
      while (1) switch (_context5.prev = _context5.next) {
        case 0:
          menu$1 = get_store_value(menu);
          _context5.next = 3;
          return api("raise-category/".concat(id), 'PUT');
        case 3:
          i = menu$1.categories.findIndex(function (c) {
            return c.id == id;
          });
          item = menu$1.categories.splice(i, 1)[0];
          menu$1.categories = [].concat(_toConsumableArray(menu$1.categories.slice(0, i - 1)), [item], _toConsumableArray(menu$1.categories.slice(i - 1)));
          menu.set(menu$1);
        case 7:
        case "end":
          return _context5.stop();
      }
    }, _callee5);
  }));
  return _move_category_up.apply(this, arguments);
}
function move_category_down(_x7) {
  return _move_category_down.apply(this, arguments);
}

// Subcategory
function _move_category_down() {
  _move_category_down = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(id) {
    var menu$1, i;
    return _regeneratorRuntime().wrap(function _callee6$(_context6) {
      while (1) switch (_context6.prev = _context6.next) {
        case 0:
          menu$1 = get_store_value(menu);
          i = menu$1.categories.findIndex(function (c) {
            return c.id == id;
          });
          _context6.next = 4;
          return move_category_up(menu$1.categories[i + 1].id);
        case 4:
        case "end":
          return _context6.stop();
      }
    }, _callee6);
  }));
  return _move_category_down.apply(this, arguments);
}
function create_subcategory(_x8, _x9) {
  return _create_subcategory.apply(this, arguments);
}
function _create_subcategory() {
  _create_subcategory = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(id, _data) {
    var menu$1, _yield$api2, data, ci;
    return _regeneratorRuntime().wrap(function _callee7$(_context7) {
      while (1) switch (_context7.prev = _context7.next) {
        case 0:
          menu$1 = get_store_value(menu);
          _context7.next = 3;
          return api("subcategory/".concat(id), 'POST', _data);
        case 3:
          _yield$api2 = _context7.sent;
          data = _yield$api2.data;
          for (ci in menu$1.categories) if (menu$1.categories[ci].id == id) menu$1.categories[ci].subcategories = [].concat(_toConsumableArray(menu$1.categories[ci].subcategories || []), [data.subcategory]);
          menu.set(menu$1);
        case 7:
        case "end":
          return _context7.stop();
      }
    }, _callee7);
  }));
  return _create_subcategory.apply(this, arguments);
}
function edit_subcategory(_x10, _x11) {
  return _edit_subcategory.apply(this, arguments);
}
function _edit_subcategory() {
  _edit_subcategory = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(id, _data) {
    var menu$1, ci, sci;
    return _regeneratorRuntime().wrap(function _callee8$(_context8) {
      while (1) switch (_context8.prev = _context8.next) {
        case 0:
          menu$1 = get_store_value(menu);
          _context8.next = 3;
          return api("subcategory/".concat(id), 'PUT', _data);
        case 3:
          _context8.t0 = _regeneratorRuntime().keys(menu$1.categories);
        case 4:
          if ((_context8.t1 = _context8.t0()).done) {
            _context8.next = 13;
            break;
          }
          ci = _context8.t1.value;
          sci = menu$1.categories[ci].subcategories.findIndex(function (sc) {
            return sc.id == id;
          });
          if (!(sci == -1)) {
            _context8.next = 9;
            break;
          }
          return _context8.abrupt("continue", 4);
        case 9:
          menu$1.categories[ci].subcategories[sci] = _objectSpread2(_objectSpread2({}, menu$1.categories[ci].subcategories[sci]), _data);
          return _context8.abrupt("break", 13);
        case 13:
          menu.set(menu$1);
        case 14:
        case "end":
          return _context8.stop();
      }
    }, _callee8);
  }));
  return _edit_subcategory.apply(this, arguments);
}
function delete_subcategory(_x12) {
  return _delete_subcategory.apply(this, arguments);
}
function _delete_subcategory() {
  _delete_subcategory = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(id) {
    var menu$1, ci;
    return _regeneratorRuntime().wrap(function _callee9$(_context9) {
      while (1) switch (_context9.prev = _context9.next) {
        case 0:
          menu$1 = get_store_value(menu);
          _context9.next = 3;
          return api("subcategory/".concat(id), 'DELETE');
        case 3:
          for (ci in menu$1.categories) menu$1.categories[ci].subcategories = menu$1.categories[ci].subcategories.filter(function (sc) {
            return sc.id != id;
          });
          menu.set(menu$1);
        case 5:
        case "end":
          return _context9.stop();
      }
    }, _callee9);
  }));
  return _delete_subcategory.apply(this, arguments);
}
function move_subcategory_up(_x13) {
  return _move_subcategory_up.apply(this, arguments);
}
function _move_subcategory_up() {
  _move_subcategory_up = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(id) {
    var menu$1, ci, sci, item;
    return _regeneratorRuntime().wrap(function _callee10$(_context10) {
      while (1) switch (_context10.prev = _context10.next) {
        case 0:
          menu$1 = get_store_value(menu);
          _context10.next = 3;
          return api("raise-subcategory/".concat(id), 'PUT');
        case 3:
          _context10.t0 = _regeneratorRuntime().keys(menu$1.categories);
        case 4:
          if ((_context10.t1 = _context10.t0()).done) {
            _context10.next = 14;
            break;
          }
          ci = _context10.t1.value;
          sci = menu$1.categories[ci].subcategories.findIndex(function (sc) {
            return sc.id == id;
          });
          if (!(sci == -1)) {
            _context10.next = 9;
            break;
          }
          return _context10.abrupt("continue", 4);
        case 9:
          item = menu$1.categories[ci].subcategories.splice(sci, 1)[0];
          menu$1.categories[ci].subcategories = [].concat(_toConsumableArray(menu$1.categories[ci].subcategories.slice(0, sci - 1)), [item], _toConsumableArray(menu$1.categories[ci].subcategories.slice(sci - 1)));
          return _context10.abrupt("break", 14);
        case 14:
          menu.set(menu$1);
        case 15:
        case "end":
          return _context10.stop();
      }
    }, _callee10);
  }));
  return _move_subcategory_up.apply(this, arguments);
}
function move_subcategory_down(_x14) {
  return _move_subcategory_down.apply(this, arguments);
}

// Item
function _move_subcategory_down() {
  _move_subcategory_down = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11(id) {
    var menu$1, ci, sci;
    return _regeneratorRuntime().wrap(function _callee11$(_context11) {
      while (1) switch (_context11.prev = _context11.next) {
        case 0:
          menu$1 = get_store_value(menu);
          _context11.t0 = _regeneratorRuntime().keys(menu$1.categories);
        case 2:
          if ((_context11.t1 = _context11.t0()).done) {
            _context11.next = 12;
            break;
          }
          ci = _context11.t1.value;
          sci = menu$1.categories[ci].subcategories.findIndex(function (sc) {
            return sc.id == id;
          });
          if (!(sci == -1)) {
            _context11.next = 7;
            break;
          }
          return _context11.abrupt("continue", 2);
        case 7:
          _context11.next = 9;
          return move_subcategory_up(menu$1.categories[ci].subcategories[sci + 1].id);
        case 9:
          return _context11.abrupt("break", 12);
        case 12:
        case "end":
          return _context11.stop();
      }
    }, _callee11);
  }));
  return _move_subcategory_down.apply(this, arguments);
}
function create_item(_x15, _x16) {
  return _create_item.apply(this, arguments);
}
function _create_item() {
  _create_item = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12(id, _data) {
    var menu$1, _yield$api3, data, ci, sci;
    return _regeneratorRuntime().wrap(function _callee12$(_context12) {
      while (1) switch (_context12.prev = _context12.next) {
        case 0:
          menu$1 = get_store_value(menu);
          _context12.next = 3;
          return api("item/".concat(id), 'POST', _data);
        case 3:
          _yield$api3 = _context12.sent;
          data = _yield$api3.data;
          _context12.t0 = _regeneratorRuntime().keys(menu$1.categories);
        case 6:
          if ((_context12.t1 = _context12.t0()).done) {
            _context12.next = 15;
            break;
          }
          ci = _context12.t1.value;
          sci = menu$1.categories[ci].subcategories.findIndex(function (sc) {
            return sc.id == id;
          });
          if (!(sci == -1)) {
            _context12.next = 11;
            break;
          }
          return _context12.abrupt("continue", 6);
        case 11:
          menu$1.categories[ci].subcategories[sci].items = [].concat(_toConsumableArray(menu$1.categories[ci].subcategories[sci].items || []), [data.item]);
          return _context12.abrupt("break", 15);
        case 15:
          menu.set(menu$1);
        case 16:
        case "end":
          return _context12.stop();
      }
    }, _callee12);
  }));
  return _create_item.apply(this, arguments);
}
function edit_item(_x17, _x18) {
  return _edit_item.apply(this, arguments);
}
function _edit_item() {
  _edit_item = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee13(id, _data) {
    var menu$1, ci, sci, ii;
    return _regeneratorRuntime().wrap(function _callee13$(_context13) {
      while (1) switch (_context13.prev = _context13.next) {
        case 0:
          menu$1 = get_store_value(menu);
          _context13.next = 3;
          return api("item/".concat(id), 'PUT', _data);
        case 3:
          _context13.t0 = _regeneratorRuntime().keys(menu$1.categories);
        case 4:
          if ((_context13.t1 = _context13.t0()).done) {
            _context13.next = 21;
            break;
          }
          ci = _context13.t1.value;
          _context13.t2 = _regeneratorRuntime().keys(menu$1.categories[ci].subcategories);
        case 7:
          if ((_context13.t3 = _context13.t2()).done) {
            _context13.next = 19;
            break;
          }
          sci = _context13.t3.value;
          _context13.t4 = _regeneratorRuntime().keys(menu$1.categories[ci].subcategories[sci].items);
        case 10:
          if ((_context13.t5 = _context13.t4()).done) {
            _context13.next = 17;
            break;
          }
          ii = _context13.t5.value;
          if (!(menu$1.categories[ci].subcategories[sci].items[ii].id == id)) {
            _context13.next = 15;
            break;
          }
          menu$1.categories[ci].subcategories[sci].items[ii] = _objectSpread2(_objectSpread2({}, menu$1.categories[ci].subcategories[sci].items[ii]), _data);
          return _context13.abrupt("break", 17);
        case 15:
          _context13.next = 10;
          break;
        case 17:
          _context13.next = 7;
          break;
        case 19:
          _context13.next = 4;
          break;
        case 21:
          menu.set(menu$1);
        case 22:
        case "end":
          return _context13.stop();
      }
    }, _callee13);
  }));
  return _edit_item.apply(this, arguments);
}
function delete_item(_x19) {
  return _delete_item.apply(this, arguments);
}
function _delete_item() {
  _delete_item = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee14(id) {
    var menu$1, ci, sci;
    return _regeneratorRuntime().wrap(function _callee14$(_context14) {
      while (1) switch (_context14.prev = _context14.next) {
        case 0:
          menu$1 = get_store_value(menu);
          _context14.next = 3;
          return api("item/".concat(id), 'DELETE');
        case 3:
          for (ci in menu$1.categories) for (sci in menu$1.categories[ci].subcategories) menu$1.categories[ci].subcategories[sci].items = menu$1.categories[ci].subcategories[sci].items.filter(function (i) {
            return i.id != id;
          });
          menu.set(menu$1);
        case 5:
        case "end":
          return _context14.stop();
      }
    }, _callee14);
  }));
  return _delete_item.apply(this, arguments);
}
function move_item_up(_x20) {
  return _move_item_up.apply(this, arguments);
}
function _move_item_up() {
  _move_item_up = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee15(id) {
    var menu$1, ci, sci, ii, item;
    return _regeneratorRuntime().wrap(function _callee15$(_context15) {
      while (1) switch (_context15.prev = _context15.next) {
        case 0:
          menu$1 = get_store_value(menu);
          _context15.next = 3;
          return api("raise-item/".concat(id), 'PUT');
        case 3:
          _context15.t0 = _regeneratorRuntime().keys(menu$1.categories);
        case 4:
          if ((_context15.t1 = _context15.t0()).done) {
            _context15.next = 15;
            break;
          }
          ci = _context15.t1.value;
          sci = menu$1.categories[ci].subcategories.findIndex(function (sc) {
            return sc.items.find(function (i) {
              return i.id == id;
            });
          });
          if (!(sci == -1)) {
            _context15.next = 9;
            break;
          }
          return _context15.abrupt("continue", 4);
        case 9:
          ii = menu$1.categories[ci].subcategories[sci].items.findIndex(function (i) {
            return i.id == id;
          });
          item = menu$1.categories[ci].subcategories[sci].items.splice(ii, 1)[0];
          menu$1.categories[ci].subcategories[sci].items = [].concat(_toConsumableArray(menu$1.categories[ci].subcategories[sci].items.slice(0, ii - 1)), [item], _toConsumableArray(menu$1.categories[ci].subcategories[sci].items.slice(ii - 1)));
          return _context15.abrupt("break", 15);
        case 15:
          menu.set(menu$1);
        case 16:
        case "end":
          return _context15.stop();
      }
    }, _callee15);
  }));
  return _move_item_up.apply(this, arguments);
}
function move_item_down(_x21) {
  return _move_item_down.apply(this, arguments);
}
function _move_item_down() {
  _move_item_down = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee16(id) {
    var menu$1, ci, sci, ii;
    return _regeneratorRuntime().wrap(function _callee16$(_context16) {
      while (1) switch (_context16.prev = _context16.next) {
        case 0:
          menu$1 = get_store_value(menu);
          _context16.t0 = _regeneratorRuntime().keys(menu$1.categories);
        case 2:
          if ((_context16.t1 = _context16.t0()).done) {
            _context16.next = 13;
            break;
          }
          ci = _context16.t1.value;
          sci = menu$1.categories[ci].subcategories.findIndex(function (sc) {
            return sc.items.find(function (i) {
              return i.id == id;
            });
          });
          if (!(sci == -1)) {
            _context16.next = 7;
            break;
          }
          return _context16.abrupt("continue", 2);
        case 7:
          ii = menu$1.categories[ci].subcategories[sci].items.findIndex(function (i) {
            return i.id == id;
          });
          _context16.next = 10;
          return move_item_up(menu$1.categories[ci].subcategories[sci].items[ii + 1].id);
        case 10:
          return _context16.abrupt("break", 13);
        case 13:
        case "end":
          return _context16.stop();
      }
    }, _callee16);
  }));
  return _move_item_down.apply(this, arguments);
}

var css_248z$f = "label.svelte-1mya8io{margin:20px 0;text-align:start}label.svelte-1mya8io:not(.row){display:flex;flex-direction:column;gap:10px}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkl0ZW1Nb2RhbC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEscUJBQXFCLGFBQWEsQ0FBQyxnQkFBZ0IsQ0FBQywrQkFBK0IsWUFBWSxDQUFDLHFCQUFxQixDQUFDLFFBQVEiLCJmaWxlIjoiSXRlbU1vZGFsLmNzcyIsInNvdXJjZXNDb250ZW50IjpbImxhYmVsLnN2ZWx0ZS0xbXlhOGlve21hcmdpbjoyMHB4IDA7dGV4dC1hbGlnbjpzdGFydH1sYWJlbC5zdmVsdGUtMW15YThpbzpub3QoLnJvdyl7ZGlzcGxheTpmbGV4O2ZsZXgtZGlyZWN0aW9uOmNvbHVtbjtnYXA6MTBweH0iXX0= */";
styleInject(css_248z$f);

var file$i = "web/components/ItemModal.svelte";

// (1:0) {#if show}
function create_if_block$c(ctx) {
  var modal;
  var current;
  modal = new Modal({
    props: {
      show: /*show*/ctx[0],
      $$slots: {
        default: [create_default_slot$7]
      },
      $$scope: {
        ctx: ctx
      }
    },
    $$inline: true
  });
  modal.$on("close", /*close*/ctx[4]);
  var block = {
    c: function create() {
      create_component(modal.$$.fragment);
    },
    m: function mount(target, anchor) {
      mount_component(modal, target, anchor);
      current = true;
    },
    p: function update(ctx, dirty) {
      var modal_changes = {};
      if (dirty & /*show*/1) modal_changes.show = /*show*/ctx[0];
      if (dirty & /*$$scope, l_submitting, item, form*/2062) {
        modal_changes.$$scope = {
          dirty: dirty,
          ctx: ctx
        };
      }
      modal.$set(modal_changes);
    },
    i: function intro(local) {
      if (current) return;
      transition_in(modal.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(modal.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      destroy_component(modal, detaching);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_if_block$c.name,
    type: "if",
    source: "(1:0) {#if show}",
    ctx: ctx
  });
  return block;
}

// (2:2) <Modal {show} on:close={close}>
function create_default_slot$7(ctx) {
  var h2;
  var t0_value = ( /*item*/ctx[1] ? "Produto: ".concat( /*item*/ctx[1].name) : 'Criando um Produto') + "";
  var t0;
  var t1;
  var form_1;
  var label0;
  var t2;
  var input0;
  var t3;
  var label1;
  var t4;
  var textarea;
  var t5;
  var label2;
  var t6;
  var input1;
  var t7;
  var button0;
  var t8_value = ( /*l_submitting*/ctx[3] ? '...' : /*item*/ctx[1] ? 'Editar' : 'Criar') + "";
  var t8;
  var t9;
  var button1;
  var t10;
  var mounted;
  var dispose;
  var block = {
    c: function create() {
      h2 = element("h2");
      t0 = text(t0_value);
      t1 = space();
      form_1 = element("form");
      label0 = element("label");
      t2 = text("Nome:      ");
      input0 = element("input");
      t3 = space();
      label1 = element("label");
      t4 = text("Descrição: ");
      textarea = element("textarea");
      t5 = space();
      label2 = element("label");
      t6 = text("Preço:     ");
      input1 = element("input");
      t7 = space();
      button0 = element("button");
      t8 = text(t8_value);
      t9 = space();
      button1 = element("button");
      t10 = text("Cancelar");
      attr_dev(h2, "class", "special tac");
      add_location(h2, file$i, 2, 4, 49);
      input0.required = true;
      add_location(input0, file$i, 5, 25, 173);
      attr_dev(label0, "class", "svelte-1mya8io");
      add_location(label0, file$i, 5, 6, 154);
      attr_dev(textarea, "rows", "5");
      add_location(textarea, file$i, 6, 25, 249);
      attr_dev(label1, "class", "svelte-1mya8io");
      add_location(label1, file$i, 6, 6, 230);
      attr_dev(input1, "placehloder", "R$");
      attr_dev(input1, "rows", "5");
      input1.required = true;
      add_location(input1, file$i, 7, 25, 333);
      attr_dev(label2, "class", "svelte-1mya8io");
      add_location(label2, file$i, 7, 6, 314);
      attr_dev(button0, "class", "grn");
      button0.disabled = /*l_submitting*/ctx[3];
      add_location(button0, file$i, 9, 6, 416);
      attr_dev(button1, "class", "red");
      set_style(button1, "margin-top", "10px");
      button1.disabled = /*l_submitting*/ctx[3];
      add_location(button1, file$i, 10, 6, 548);
      add_location(form_1, file$i, 4, 4, 141);
    },
    m: function mount(target, anchor) {
      insert_dev(target, h2, anchor);
      append_dev(h2, t0);
      insert_dev(target, t1, anchor);
      insert_dev(target, form_1, anchor);
      append_dev(form_1, label0);
      append_dev(label0, t2);
      append_dev(label0, input0);
      set_input_value(input0, /*form*/ctx[2].name);
      append_dev(form_1, t3);
      append_dev(form_1, label1);
      append_dev(label1, t4);
      append_dev(label1, textarea);
      set_input_value(textarea, /*form*/ctx[2].description);
      append_dev(form_1, t5);
      append_dev(form_1, label2);
      append_dev(label2, t6);
      append_dev(label2, input1);
      set_input_value(input1, /*form*/ctx[2].price);
      append_dev(form_1, t7);
      append_dev(form_1, button0);
      append_dev(button0, t8);
      append_dev(form_1, t9);
      append_dev(form_1, button1);
      append_dev(button1, t10);
      if (!mounted) {
        dispose = [listen_dev(input0, "input", /*input0_input_handler*/ctx[7]), listen_dev(textarea, "input", /*textarea_input_handler*/ctx[8]), listen_dev(input1, "input", /*input1_input_handler*/ctx[9]), listen_dev(button0, "click", /*submit*/ctx[5], false, false, false, false), listen_dev(button1, "click", /*close*/ctx[4], false, false, false, false)];
        mounted = true;
      }
    },
    p: function update(ctx, dirty) {
      if (dirty & /*item*/2 && t0_value !== (t0_value = ( /*item*/ctx[1] ? "Produto: ".concat( /*item*/ctx[1].name) : 'Criando um Produto') + "")) set_data_dev(t0, t0_value);
      if (dirty & /*form*/4 && input0.value !== /*form*/ctx[2].name) {
        set_input_value(input0, /*form*/ctx[2].name);
      }
      if (dirty & /*form*/4) {
        set_input_value(textarea, /*form*/ctx[2].description);
      }
      if (dirty & /*form*/4 && input1.value !== /*form*/ctx[2].price) {
        set_input_value(input1, /*form*/ctx[2].price);
      }
      if (dirty & /*l_submitting, item*/10 && t8_value !== (t8_value = ( /*l_submitting*/ctx[3] ? '...' : /*item*/ctx[1] ? 'Editar' : 'Criar') + "")) set_data_dev(t8, t8_value);
      if (dirty & /*l_submitting*/8) {
        prop_dev(button0, "disabled", /*l_submitting*/ctx[3]);
      }
      if (dirty & /*l_submitting*/8) {
        prop_dev(button1, "disabled", /*l_submitting*/ctx[3]);
      }
    },
    d: function destroy(detaching) {
      if (detaching) detach_dev(h2);
      if (detaching) detach_dev(t1);
      if (detaching) detach_dev(form_1);
      mounted = false;
      run_all(dispose);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_default_slot$7.name,
    type: "slot",
    source: "(2:2) <Modal {show} on:close={close}>",
    ctx: ctx
  });
  return block;
}
function create_fragment$i(ctx) {
  var if_block_anchor;
  var current;
  var if_block = /*show*/ctx[0] && create_if_block$c(ctx);
  var block = {
    c: function create() {
      if (if_block) if_block.c();
      if_block_anchor = empty();
    },
    l: function claim(nodes) {
      throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    },
    m: function mount(target, anchor) {
      if (if_block) if_block.m(target, anchor);
      insert_dev(target, if_block_anchor, anchor);
      current = true;
    },
    p: function update(ctx, _ref) {
      var _ref2 = _slicedToArray(_ref, 1),
        dirty = _ref2[0];
      if ( /*show*/ctx[0]) {
        if (if_block) {
          if_block.p(ctx, dirty);
          if (dirty & /*show*/1) {
            transition_in(if_block, 1);
          }
        } else {
          if_block = create_if_block$c(ctx);
          if_block.c();
          transition_in(if_block, 1);
          if_block.m(if_block_anchor.parentNode, if_block_anchor);
        }
      } else if (if_block) {
        group_outros();
        transition_out(if_block, 1, 1, function () {
          if_block = null;
        });
        check_outros();
      }
    },
    i: function intro(local) {
      if (current) return;
      transition_in(if_block);
      current = true;
    },
    o: function outro(local) {
      transition_out(if_block);
      current = false;
    },
    d: function destroy(detaching) {
      if (if_block) if_block.d(detaching);
      if (detaching) detach_dev(if_block_anchor);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_fragment$i.name,
    type: "component",
    source: "",
    ctx: ctx
  });
  return block;
}
function instance$i($$self, $$props, $$invalidate) {
  var _$$props$$$slots = $$props.$$slots,
    slots = _$$props$$$slots === void 0 ? {} : _$$props$$$slots;
    $$props.$$scope;
  validate_slots('ItemModal', slots, []);
  var show = $$props.show,
    item = $$props.item,
    subcategory_id = $$props.subcategory_id;
  var l_submitting;
  var form;
  function close() {
    $$invalidate(0, show = false);
  }
  function submit() {
    return _submit.apply(this, arguments);
  }
  function _submit() {
    _submit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
      return _regeneratorRuntime().wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            $$invalidate(3, l_submitting = true);
            $$invalidate(2, form.price_in_cents = Math.round(form.price * 100), form);
            if (!item) {
              _context.next = 7;
              break;
            }
            _context.next = 5;
            return edit_item(item.id, form);
          case 5:
            _context.next = 9;
            break;
          case 7:
            _context.next = 9;
            return create_item(subcategory_id, form);
          case 9:
            close();
          case 10:
          case "end":
            return _context.stop();
        }
      }, _callee);
    }));
    return _submit.apply(this, arguments);
  }
  function mount() {
    var _item, _item2;
    $$invalidate(3, l_submitting = false);
    $$invalidate(2, form = {
      name: (_item = item) === null || _item === void 0 ? void 0 : _item.name,
      description: (_item2 = item) === null || _item2 === void 0 ? void 0 : _item2.description,
      price: item ? item.price_in_cents / 100 : undefined
    });
  }
  $$self.$$.on_mount.push(function () {
    if (show === undefined && !('show' in $$props || $$self.$$.bound[$$self.$$.props['show']])) {
      console.warn("<ItemModal> was created without expected prop 'show'");
    }
    if (item === undefined && !('item' in $$props || $$self.$$.bound[$$self.$$.props['item']])) {
      console.warn("<ItemModal> was created without expected prop 'item'");
    }
    if (subcategory_id === undefined && !('subcategory_id' in $$props || $$self.$$.bound[$$self.$$.props['subcategory_id']])) {
      console.warn("<ItemModal> was created without expected prop 'subcategory_id'");
    }
  });
  var writable_props = ['show', 'item', 'subcategory_id'];
  Object.keys($$props).forEach(function (key) {
    if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn("<ItemModal> was created with unknown prop '".concat(key, "'"));
  });
  function input0_input_handler() {
    form.name = this.value;
    $$invalidate(2, form);
  }
  function textarea_input_handler() {
    form.description = this.value;
    $$invalidate(2, form);
  }
  function input1_input_handler() {
    form.price = this.value;
    $$invalidate(2, form);
  }
  $$self.$$set = function ($$props) {
    if ('show' in $$props) $$invalidate(0, show = $$props.show);
    if ('item' in $$props) $$invalidate(1, item = $$props.item);
    if ('subcategory_id' in $$props) $$invalidate(6, subcategory_id = $$props.subcategory_id);
  };
  $$self.$capture_state = function () {
    return {
      Modal: Modal,
      create_item: create_item,
      edit_item: edit_item,
      show: show,
      item: item,
      subcategory_id: subcategory_id,
      l_submitting: l_submitting,
      form: form,
      close: close,
      submit: submit,
      mount: mount
    };
  };
  $$self.$inject_state = function ($$props) {
    if ('show' in $$props) $$invalidate(0, show = $$props.show);
    if ('item' in $$props) $$invalidate(1, item = $$props.item);
    if ('subcategory_id' in $$props) $$invalidate(6, subcategory_id = $$props.subcategory_id);
    if ('l_submitting' in $$props) $$invalidate(3, l_submitting = $$props.l_submitting);
    if ('form' in $$props) $$invalidate(2, form = $$props.form);
  };
  if ($$props && "$$inject" in $$props) {
    $$self.$inject_state($$props.$$inject);
  }
  $$self.$$.update = function () {
    if ($$self.$$.dirty & /*show*/1) {
      if (show) mount();
    }
    if ($$self.$$.dirty & /*form*/4) {
      var _form;
      if ((_form = form) !== null && _form !== void 0 && _form.price) {
        $$invalidate(2, form.price = String(form.price).replaceAll(',', '.').replaceAll(/[^\d\.]/g, ''), form);
        var parts = form.price.split('.');
        if (parts.length > 1) $$invalidate(2, form.price = "".concat(parts[0], ".").concat(parts.slice(1).join('').slice(0, 2)), form);
      }
    }
  };
  return [show, item, form, l_submitting, close, submit, subcategory_id, input0_input_handler, textarea_input_handler, input1_input_handler];
}
var ItemModal = /*#__PURE__*/function (_SvelteComponentDev) {
  function ItemModal(options) {
    var _this;
    _classCallCheck(this, ItemModal);
    _this = _callSuper(this, ItemModal, [options]);
    init(_this, options, instance$i, create_fragment$i, safe_not_equal, {
      show: 0,
      item: 1,
      subcategory_id: 6
    });
    dispatch_dev("SvelteRegisterComponent", {
      component: _this,
      tagName: "ItemModal",
      options: options,
      id: create_fragment$i.name
    });
    return _this;
  }
  _inherits(ItemModal, _SvelteComponentDev);
  return _createClass(ItemModal, [{
    key: "show",
    get: function get() {
      throw new Error("<ItemModal>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    },
    set: function set(value) {
      throw new Error("<ItemModal>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    }
  }, {
    key: "item",
    get: function get() {
      throw new Error("<ItemModal>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    },
    set: function set(value) {
      throw new Error("<ItemModal>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    }
  }, {
    key: "subcategory_id",
    get: function get() {
      throw new Error("<ItemModal>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    },
    set: function set(value) {
      throw new Error("<ItemModal>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    }
  }]);
}(SvelteComponentDev);

function minify_text(text) {
  return text.toLowerCase().normalize('NFD').replace(/[\u0300-\u036f]/g, '').replace(/[^a-z0-9\s]/g, '');
}
function format_price(n) {
  var str = String(n / 100).replace('.', ',');
  if (n % 100 == 0) str += ',00';else if (n % 10 == 0) str += '0';
  return str;
}

var css_248z$e = ".special.svelte-rf44i4{margin:0 0 20px 0;text-align:center}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkl0ZW1Sb3cuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHVCQUF1QixpQkFBaUIsQ0FBQyxpQkFBaUIiLCJmaWxlIjoiSXRlbVJvdy5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc3BlY2lhbC5zdmVsdGUtcmY0NGk0e21hcmdpbjowIDAgMjBweCAwO3RleHQtYWxpZ246Y2VudGVyfSJdfQ== */";
styleInject(css_248z$e);

var file$h = "web/components/ItemRow.svelte";

// (8:0) <Modal bind:show={m_options}>
function create_default_slot_2$2(ctx) {
  var p;
  var t0;
  var t1_value = /*item*/ctx[0].name + "";
  var t1;
  var t2;
  var div;
  var button0;
  var t3;
  var button1;
  var t4;
  var button2;
  var t5;
  var button3;
  var t6;
  var button4;
  var current;
  button0 = new Button({
    props: {
      class: "blu",
      i: "edit",
      t: "Editar",
      action: /*edit*/ctx[8]
    },
    $$inline: true
  });
  button1 = new Button({
    props: {
      class: "red",
      i: "delete",
      t: "Excluir",
      action: /*_delete*/ctx[9]
    },
    $$inline: true
  });
  button2 = new Button({
    props: {
      i: "keyboard_arrow_up",
      t: "Mover pra cima",
      action: /*move_up*/ctx[10],
      disabled: /*i*/ctx[3] == 0
    },
    $$inline: true
  });
  button3 = new Button({
    props: {
      i: "keyboard_arrow_down",
      t: "Mover pra baixo",
      action: /*move_down*/ctx[11],
      disabled: /*i*/ctx[3] == /*items_length*/ctx[4] - 1
    },
    $$inline: true
  });
  button4 = new Button({
    props: {
      i: "close",
      t: "Cancelar",
      action: /*func*/ctx[13]
    },
    $$inline: true
  });
  var block = {
    c: function create() {
      p = element("p");
      t0 = text("Produto: ");
      t1 = text(t1_value);
      t2 = space();
      div = element("div");
      create_component(button0.$$.fragment);
      t3 = space();
      create_component(button1.$$.fragment);
      t4 = space();
      create_component(button2.$$.fragment);
      t5 = space();
      create_component(button3.$$.fragment);
      t6 = space();
      create_component(button4.$$.fragment);
      attr_dev(p, "class", "special svelte-rf44i4");
      add_location(p, file$h, 8, 2, 239);
      attr_dev(div, "class", "btn-col");
      add_location(div, file$h, 9, 2, 287);
    },
    m: function mount(target, anchor) {
      insert_dev(target, p, anchor);
      append_dev(p, t0);
      append_dev(p, t1);
      insert_dev(target, t2, anchor);
      insert_dev(target, div, anchor);
      mount_component(button0, div, null);
      append_dev(div, t3);
      mount_component(button1, div, null);
      append_dev(div, t4);
      mount_component(button2, div, null);
      append_dev(div, t5);
      mount_component(button3, div, null);
      append_dev(div, t6);
      mount_component(button4, div, null);
      current = true;
    },
    p: function update(ctx, dirty) {
      if ((!current || dirty & /*item*/1) && t1_value !== (t1_value = /*item*/ctx[0].name + "")) set_data_dev(t1, t1_value);
      var button2_changes = {};
      if (dirty & /*i*/8) button2_changes.disabled = /*i*/ctx[3] == 0;
      button2.$set(button2_changes);
      var button3_changes = {};
      if (dirty & /*i, items_length*/24) button3_changes.disabled = /*i*/ctx[3] == /*items_length*/ctx[4] - 1;
      button3.$set(button3_changes);
      var button4_changes = {};
      if (dirty & /*m_options*/2) button4_changes.action = /*func*/ctx[13];
      button4.$set(button4_changes);
    },
    i: function intro(local) {
      if (current) return;
      transition_in(button0.$$.fragment, local);
      transition_in(button1.$$.fragment, local);
      transition_in(button2.$$.fragment, local);
      transition_in(button3.$$.fragment, local);
      transition_in(button4.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(button0.$$.fragment, local);
      transition_out(button1.$$.fragment, local);
      transition_out(button2.$$.fragment, local);
      transition_out(button3.$$.fragment, local);
      transition_out(button4.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching) detach_dev(p);
      if (detaching) detach_dev(t2);
      if (detaching) detach_dev(div);
      destroy_component(button0);
      destroy_component(button1);
      destroy_component(button2);
      destroy_component(button3);
      destroy_component(button4);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_default_slot_2$2.name,
    type: "slot",
    source: "(8:0) <Modal bind:show={m_options}>",
    ctx: ctx
  });
  return block;
}

// (20:0) {#if l_deleting}
function create_if_block_1$6(ctx) {
  var modal;
  var current;
  modal = new Modal({
    props: {
      show: true,
      $$slots: {
        default: [create_default_slot_1$2]
      },
      $$scope: {
        ctx: ctx
      }
    },
    $$inline: true
  });
  var block = {
    c: function create() {
      create_component(modal.$$.fragment);
    },
    m: function mount(target, anchor) {
      mount_component(modal, target, anchor);
      current = true;
    },
    i: function intro(local) {
      if (current) return;
      transition_in(modal.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(modal.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      destroy_component(modal, detaching);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_if_block_1$6.name,
    type: "if",
    source: "(20:0) {#if l_deleting}",
    ctx: ctx
  });
  return block;
}

// (21:2) <Modal show={true}>
function create_default_slot_1$2(ctx) {
  var t;
  var block = {
    c: function create() {
      t = text("Excluindo...");
    },
    m: function mount(target, anchor) {
      insert_dev(target, t, anchor);
    },
    d: function destroy(detaching) {
      if (detaching) detach_dev(t);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_default_slot_1$2.name,
    type: "slot",
    source: "(21:2) <Modal show={true}>",
    ctx: ctx
  });
  return block;
}

// (24:0) {#if l_moving}
function create_if_block$b(ctx) {
  var modal;
  var current;
  modal = new Modal({
    props: {
      show: true,
      $$slots: {
        default: [create_default_slot$6]
      },
      $$scope: {
        ctx: ctx
      }
    },
    $$inline: true
  });
  var block = {
    c: function create() {
      create_component(modal.$$.fragment);
    },
    m: function mount(target, anchor) {
      mount_component(modal, target, anchor);
      current = true;
    },
    i: function intro(local) {
      if (current) return;
      transition_in(modal.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(modal.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      destroy_component(modal, detaching);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_if_block$b.name,
    type: "if",
    source: "(24:0) {#if l_moving}",
    ctx: ctx
  });
  return block;
}

// (25:2) <Modal show={true}>
function create_default_slot$6(ctx) {
  var t;
  var block = {
    c: function create() {
      t = text("Movendo...");
    },
    m: function mount(target, anchor) {
      insert_dev(target, t, anchor);
    },
    d: function destroy(detaching) {
      if (detaching) detach_dev(t);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_default_slot$6.name,
    type: "slot",
    source: "(25:2) <Modal show={true}>",
    ctx: ctx
  });
  return block;
}
function create_fragment$h(ctx) {
  var tr;
  var td0;
  var t0_value = /*item*/ctx[0].name + "";
  var t0;
  var t1;
  var td1;
  var t2_value = ( /*item*/ctx[0].description || 'Sem descrição') + "";
  var t2;
  var t3;
  var td2;
  var t4;
  var t5_value = format_price( /*item*/ctx[0].price_in_cents) + "";
  var t5;
  var t6;
  var td3;
  var button;
  var t7;
  var modal;
  var updating_show;
  var t8;
  var itemmodal;
  var updating_show_1;
  var t9;
  var t10;
  var if_block1_anchor;
  var current;
  button = new Button({
    props: {
      class: "blu",
      i: "edit",
      action: /*show_options*/ctx[7]
    },
    $$inline: true
  });
  function modal_show_binding(value) {
    /*modal_show_binding*/ctx[14](value);
  }
  var modal_props = {
    $$slots: {
      default: [create_default_slot_2$2]
    },
    $$scope: {
      ctx: ctx
    }
  };
  if ( /*m_options*/ctx[1] !== void 0) {
    modal_props.show = /*m_options*/ctx[1];
  }
  modal = new Modal({
    props: modal_props,
    $$inline: true
  });
  binding_callbacks.push(function () {
    return bind(modal, 'show', modal_show_binding);
  });
  function itemmodal_show_binding(value) {
    /*itemmodal_show_binding*/ctx[15](value);
  }
  var itemmodal_props = {
    item: /*item*/ctx[0],
    subcategory_id: /*item*/ctx[0].subcategory_id
  };
  if ( /*m_edit*/ctx[2] !== void 0) {
    itemmodal_props.show = /*m_edit*/ctx[2];
  }
  itemmodal = new ItemModal({
    props: itemmodal_props,
    $$inline: true
  });
  binding_callbacks.push(function () {
    return bind(itemmodal, 'show', itemmodal_show_binding);
  });
  var if_block0 = /*l_deleting*/ctx[5] && create_if_block_1$6(ctx);
  var if_block1 = /*l_moving*/ctx[6] && create_if_block$b(ctx);
  var block = {
    c: function create() {
      tr = element("tr");
      td0 = element("td");
      t0 = text(t0_value);
      t1 = space();
      td1 = element("td");
      t2 = text(t2_value);
      t3 = space();
      td2 = element("td");
      t4 = text("R$ ");
      t5 = text(t5_value);
      t6 = space();
      td3 = element("td");
      create_component(button.$$.fragment);
      t7 = space();
      create_component(modal.$$.fragment);
      t8 = space();
      create_component(itemmodal.$$.fragment);
      t9 = space();
      if (if_block0) if_block0.c();
      t10 = space();
      if (if_block1) if_block1.c();
      if_block1_anchor = empty();
      add_location(td0, file$h, 1, 2, 7);
      add_location(td1, file$h, 2, 2, 32);
      add_location(td2, file$h, 3, 2, 83);
      add_location(td3, file$h, 4, 2, 135);
      add_location(tr, file$h, 0, 0, 0);
    },
    l: function claim(nodes) {
      throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    },
    m: function mount(target, anchor) {
      insert_dev(target, tr, anchor);
      append_dev(tr, td0);
      append_dev(td0, t0);
      append_dev(tr, t1);
      append_dev(tr, td1);
      append_dev(td1, t2);
      append_dev(tr, t3);
      append_dev(tr, td2);
      append_dev(td2, t4);
      append_dev(td2, t5);
      append_dev(tr, t6);
      append_dev(tr, td3);
      mount_component(button, td3, null);
      insert_dev(target, t7, anchor);
      mount_component(modal, target, anchor);
      insert_dev(target, t8, anchor);
      mount_component(itemmodal, target, anchor);
      insert_dev(target, t9, anchor);
      if (if_block0) if_block0.m(target, anchor);
      insert_dev(target, t10, anchor);
      if (if_block1) if_block1.m(target, anchor);
      insert_dev(target, if_block1_anchor, anchor);
      current = true;
    },
    p: function update(ctx, _ref) {
      var _ref2 = _slicedToArray(_ref, 1),
        dirty = _ref2[0];
      if ((!current || dirty & /*item*/1) && t0_value !== (t0_value = /*item*/ctx[0].name + "")) set_data_dev(t0, t0_value);
      if ((!current || dirty & /*item*/1) && t2_value !== (t2_value = ( /*item*/ctx[0].description || 'Sem descrição') + "")) set_data_dev(t2, t2_value);
      if ((!current || dirty & /*item*/1) && t5_value !== (t5_value = format_price( /*item*/ctx[0].price_in_cents) + "")) set_data_dev(t5, t5_value);
      var modal_changes = {};
      if (dirty & /*$$scope, m_options, i, items_length, item*/131099) {
        modal_changes.$$scope = {
          dirty: dirty,
          ctx: ctx
        };
      }
      if (!updating_show && dirty & /*m_options*/2) {
        updating_show = true;
        modal_changes.show = /*m_options*/ctx[1];
        add_flush_callback(function () {
          return updating_show = false;
        });
      }
      modal.$set(modal_changes);
      var itemmodal_changes = {};
      if (dirty & /*item*/1) itemmodal_changes.item = /*item*/ctx[0];
      if (dirty & /*item*/1) itemmodal_changes.subcategory_id = /*item*/ctx[0].subcategory_id;
      if (!updating_show_1 && dirty & /*m_edit*/4) {
        updating_show_1 = true;
        itemmodal_changes.show = /*m_edit*/ctx[2];
        add_flush_callback(function () {
          return updating_show_1 = false;
        });
      }
      itemmodal.$set(itemmodal_changes);
      if ( /*l_deleting*/ctx[5]) {
        if (if_block0) {
          if (dirty & /*l_deleting*/32) {
            transition_in(if_block0, 1);
          }
        } else {
          if_block0 = create_if_block_1$6(ctx);
          if_block0.c();
          transition_in(if_block0, 1);
          if_block0.m(t10.parentNode, t10);
        }
      } else if (if_block0) {
        group_outros();
        transition_out(if_block0, 1, 1, function () {
          if_block0 = null;
        });
        check_outros();
      }
      if ( /*l_moving*/ctx[6]) {
        if (if_block1) {
          if (dirty & /*l_moving*/64) {
            transition_in(if_block1, 1);
          }
        } else {
          if_block1 = create_if_block$b(ctx);
          if_block1.c();
          transition_in(if_block1, 1);
          if_block1.m(if_block1_anchor.parentNode, if_block1_anchor);
        }
      } else if (if_block1) {
        group_outros();
        transition_out(if_block1, 1, 1, function () {
          if_block1 = null;
        });
        check_outros();
      }
    },
    i: function intro(local) {
      if (current) return;
      transition_in(button.$$.fragment, local);
      transition_in(modal.$$.fragment, local);
      transition_in(itemmodal.$$.fragment, local);
      transition_in(if_block0);
      transition_in(if_block1);
      current = true;
    },
    o: function outro(local) {
      transition_out(button.$$.fragment, local);
      transition_out(modal.$$.fragment, local);
      transition_out(itemmodal.$$.fragment, local);
      transition_out(if_block0);
      transition_out(if_block1);
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching) detach_dev(tr);
      destroy_component(button);
      if (detaching) detach_dev(t7);
      destroy_component(modal, detaching);
      if (detaching) detach_dev(t8);
      destroy_component(itemmodal, detaching);
      if (detaching) detach_dev(t9);
      if (if_block0) if_block0.d(detaching);
      if (detaching) detach_dev(t10);
      if (if_block1) if_block1.d(detaching);
      if (detaching) detach_dev(if_block1_anchor);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_fragment$h.name,
    type: "component",
    source: "",
    ctx: ctx
  });
  return block;
}
function instance$h($$self, $$props, $$invalidate) {
  var $menu;
  validate_store(menu, 'menu');
  component_subscribe($$self, menu, function ($$value) {
    return $$invalidate(12, $menu = $$value);
  });
  var _$$props$$$slots = $$props.$$slots,
    slots = _$$props$$$slots === void 0 ? {} : _$$props$$$slots;
    $$props.$$scope;
  validate_slots('ItemRow', slots, []);
  var item = $$props.item;
  var m_options, m_edit;
  var i, items_length;
  var l_deleting, l_moving;
  function show_options() {
    $$invalidate(1, m_options = 1);
  }
  function edit() {
    $$invalidate(1, m_options = 0);
    $$invalidate(2, m_edit = 1);
  }
  function _delete() {
    return _delete2.apply(this, arguments);
  }
  function _delete2() {
    _delete2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
      return _regeneratorRuntime().wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            $$invalidate(1, m_options = 0);
            if (confirm("Certeza que quer excluir o produto ".concat(item.name, "?"))) {
              _context.next = 3;
              break;
            }
            return _context.abrupt("return");
          case 3:
            $$invalidate(5, l_deleting = true);
            _context.next = 6;
            return delete_item(item.id);
          case 6:
            $$invalidate(5, l_deleting = false);
          case 7:
          case "end":
            return _context.stop();
        }
      }, _callee);
    }));
    return _delete2.apply(this, arguments);
  }
  function move_up() {
    return _move_up.apply(this, arguments);
  }
  function _move_up() {
    _move_up = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {
      return _regeneratorRuntime().wrap(function _callee2$(_context2) {
        while (1) switch (_context2.prev = _context2.next) {
          case 0:
            $$invalidate(1, m_options = 0);
            $$invalidate(6, l_moving = true);
            _context2.next = 4;
            return move_item_up(item.id);
          case 4:
            $$invalidate(6, l_moving = false);
          case 5:
          case "end":
            return _context2.stop();
        }
      }, _callee2);
    }));
    return _move_up.apply(this, arguments);
  }
  function move_down() {
    return _move_down.apply(this, arguments);
  }
  function _move_down() {
    _move_down = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {
      return _regeneratorRuntime().wrap(function _callee3$(_context3) {
        while (1) switch (_context3.prev = _context3.next) {
          case 0:
            $$invalidate(1, m_options = 0);
            $$invalidate(6, l_moving = true);
            _context3.next = 4;
            return move_item_down(item.id);
          case 4:
            $$invalidate(6, l_moving = false);
          case 5:
          case "end":
            return _context3.stop();
        }
      }, _callee3);
    }));
    return _move_down.apply(this, arguments);
  }
  function update_i() {
    var category = $menu.categories.find(function (c) {
      return c.subcategories.find(function (sc) {
        return sc.id == item.subcategory_id;
      });
    });
    var subcategory = category === null || category === void 0 ? void 0 : category.subcategories.find(function (sc) {
      return sc.id == item.subcategory_id;
    });
    var items = subcategory === null || subcategory === void 0 ? void 0 : subcategory.items;
    $$invalidate(4, items_length = items === null || items === void 0 ? void 0 : items.length);
    $$invalidate(3, i = items === null || items === void 0 ? void 0 : items.findIndex(function (i) {
      return i.id == item.id;
    }));
  }
  $$self.$$.on_mount.push(function () {
    if (item === undefined && !('item' in $$props || $$self.$$.bound[$$self.$$.props['item']])) {
      console.warn("<ItemRow> was created without expected prop 'item'");
    }
  });
  var writable_props = ['item'];
  Object.keys($$props).forEach(function (key) {
    if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn("<ItemRow> was created with unknown prop '".concat(key, "'"));
  });
  var func = function func(_) {
    return $$invalidate(1, m_options = false);
  };
  function modal_show_binding(value) {
    m_options = value;
    $$invalidate(1, m_options);
  }
  function itemmodal_show_binding(value) {
    m_edit = value;
    $$invalidate(2, m_edit);
  }
  $$self.$$set = function ($$props) {
    if ('item' in $$props) $$invalidate(0, item = $$props.item);
  };
  $$self.$capture_state = function () {
    return {
      ItemModal: ItemModal,
      Button: Button,
      Modal: Modal,
      delete_item: delete_item,
      move_item_up: move_item_up,
      move_item_down: move_item_down,
      format_price: format_price,
      menu: menu,
      item: item,
      m_options: m_options,
      m_edit: m_edit,
      i: i,
      items_length: items_length,
      l_deleting: l_deleting,
      l_moving: l_moving,
      show_options: show_options,
      edit: edit,
      _delete: _delete,
      move_up: move_up,
      move_down: move_down,
      update_i: update_i,
      $menu: $menu
    };
  };
  $$self.$inject_state = function ($$props) {
    if ('item' in $$props) $$invalidate(0, item = $$props.item);
    if ('m_options' in $$props) $$invalidate(1, m_options = $$props.m_options);
    if ('m_edit' in $$props) $$invalidate(2, m_edit = $$props.m_edit);
    if ('i' in $$props) $$invalidate(3, i = $$props.i);
    if ('items_length' in $$props) $$invalidate(4, items_length = $$props.items_length);
    if ('l_deleting' in $$props) $$invalidate(5, l_deleting = $$props.l_deleting);
    if ('l_moving' in $$props) $$invalidate(6, l_moving = $$props.l_moving);
  };
  if ($$props && "$$inject" in $$props) {
    $$self.$inject_state($$props.$$inject);
  }
  $$self.$$.update = function () {
    if ($$self.$$.dirty & /*$menu*/4096) {
      if ($menu) update_i();
    }
  };
  return [item, m_options, m_edit, i, items_length, l_deleting, l_moving, show_options, edit, _delete, move_up, move_down, $menu, func, modal_show_binding, itemmodal_show_binding];
}
var ItemRow = /*#__PURE__*/function (_SvelteComponentDev) {
  function ItemRow(options) {
    var _this;
    _classCallCheck(this, ItemRow);
    _this = _callSuper(this, ItemRow, [options]);
    init(_this, options, instance$h, create_fragment$h, safe_not_equal, {
      item: 0
    });
    dispatch_dev("SvelteRegisterComponent", {
      component: _this,
      tagName: "ItemRow",
      options: options,
      id: create_fragment$h.name
    });
    return _this;
  }
  _inherits(ItemRow, _SvelteComponentDev);
  return _createClass(ItemRow, [{
    key: "item",
    get: function get() {
      throw new Error("<ItemRow>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    },
    set: function set(value) {
      throw new Error("<ItemRow>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    }
  }]);
}(SvelteComponentDev);

var css_248z$d = "table.svelte-s0l2tk.svelte-s0l2tk{border-collapse:collapse;margin:10px 0;border:3px solid var(--gray);width:100%}table.svelte-s0l2tk td{padding:8px;border-bottom:3px solid var(--gray)}table.svelte-s0l2tk td:nth-child(1):not(thead td){min-width:25%;text-wrap:auto}table.svelte-s0l2tk td:nth-child(1),table.svelte-s0l2tk td:nth-child(4),thead.svelte-s0l2tk td.svelte-s0l2tk:nth-child(2),table.svelte-s0l2tk td:nth-child(3){width:1px;white-space:nowrap}table.svelte-s0l2tk td:nth-child(3){white-space:nowrap}table.svelte-s0l2tk tr:nth-child(odd):not(thead tr){background:var(--bg0_h)}table.svelte-s0l2tk td:not(thead td){border-right:2px solid var(--gray)}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlN1YmNhdGVnb3J5VGFibGUuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGtDQUFrQyx3QkFBd0IsQ0FBQyxhQUFhLENBQUMsNEJBQTRCLENBQUMsVUFBVSxDQUFDLHVCQUF1QixXQUFXLENBQUMsbUNBQW1DLENBQUMsa0RBQWtELGFBQWEsQ0FBQyxjQUFjLENBQUMsOEpBQThKLFNBQVMsQ0FBQyxrQkFBa0IsQ0FBQyxvQ0FBb0Msa0JBQWtCLENBQUMsb0RBQW9ELHVCQUF1QixDQUFDLHFDQUFxQyxrQ0FBa0MiLCJmaWxlIjoiU3ViY2F0ZWdvcnlUYWJsZS5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZS5zdmVsdGUtczBsMnRrLnN2ZWx0ZS1zMGwydGt7Ym9yZGVyLWNvbGxhcHNlOmNvbGxhcHNlO21hcmdpbjoxMHB4IDA7Ym9yZGVyOjNweCBzb2xpZCB2YXIoLS1ncmF5KTt3aWR0aDoxMDAlfXRhYmxlLnN2ZWx0ZS1zMGwydGsgdGR7cGFkZGluZzo4cHg7Ym9yZGVyLWJvdHRvbTozcHggc29saWQgdmFyKC0tZ3JheSl9dGFibGUuc3ZlbHRlLXMwbDJ0ayB0ZDpudGgtY2hpbGQoMSk6bm90KHRoZWFkIHRkKXttaW4td2lkdGg6MjUlO3RleHQtd3JhcDphdXRvfXRhYmxlLnN2ZWx0ZS1zMGwydGsgdGQ6bnRoLWNoaWxkKDEpLHRhYmxlLnN2ZWx0ZS1zMGwydGsgdGQ6bnRoLWNoaWxkKDQpLHRoZWFkLnN2ZWx0ZS1zMGwydGsgdGQuc3ZlbHRlLXMwbDJ0azpudGgtY2hpbGQoMiksdGFibGUuc3ZlbHRlLXMwbDJ0ayB0ZDpudGgtY2hpbGQoMyl7d2lkdGg6MXB4O3doaXRlLXNwYWNlOm5vd3JhcH10YWJsZS5zdmVsdGUtczBsMnRrIHRkOm50aC1jaGlsZCgzKXt3aGl0ZS1zcGFjZTpub3dyYXB9dGFibGUuc3ZlbHRlLXMwbDJ0ayB0cjpudGgtY2hpbGQob2RkKTpub3QodGhlYWQgdHIpe2JhY2tncm91bmQ6dmFyKC0tYmcwX2gpfXRhYmxlLnN2ZWx0ZS1zMGwydGsgdGQ6bm90KHRoZWFkIHRkKXtib3JkZXItcmlnaHQ6MnB4IHNvbGlkIHZhcigtLWdyYXkpfSJdfQ== */";
styleInject(css_248z$d);

var file$g = "web/components/SubcategoryTable.svelte";
function get_each_context$6(ctx, list, i) {
  var child_ctx = ctx.slice();
  child_ctx[6] = list[i];
  return child_ctx;
}

// (9:4) {#each subcategory.items || [] as item}
function create_each_block$6(ctx) {
  var itemrow;
  var current;
  itemrow = new ItemRow({
    props: {
      item: /*item*/ctx[6]
    },
    $$inline: true
  });
  var block = {
    c: function create() {
      create_component(itemrow.$$.fragment);
    },
    m: function mount(target, anchor) {
      mount_component(itemrow, target, anchor);
      current = true;
    },
    p: function update(ctx, dirty) {
      var itemrow_changes = {};
      if (dirty & /*subcategory*/1) itemrow_changes.item = /*item*/ctx[6];
      itemrow.$set(itemrow_changes);
    },
    i: function intro(local) {
      if (current) return;
      transition_in(itemrow.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(itemrow.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      destroy_component(itemrow, detaching);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_each_block$6.name,
    type: "each",
    source: "(9:4) {#each subcategory.items || [] as item}",
    ctx: ctx
  });
  return block;
}
function create_fragment$g(ctx) {
  var table;
  var thead;
  var tr;
  var td0;
  var h2;
  var t0_value = /*subcategory*/ctx[0].name + "";
  var t0;
  var t1;
  var td1;
  var button;
  var t2;
  var tbody;
  var t3;
  var itemmodal;
  var updating_show;
  var current;
  button = new Button({
    props: {
      class: "grn",
      i: "add",
      action: /*create_item*/ctx[2]
    },
    $$inline: true
  });
  var each_value = /*subcategory*/ctx[0].items || [];
  validate_each_argument(each_value);
  var each_blocks = [];
  for (var i = 0; i < each_value.length; i += 1) {
    each_blocks[i] = create_each_block$6(get_each_context$6(ctx, each_value, i));
  }
  var out = function out(i) {
    return transition_out(each_blocks[i], 1, 1, function () {
      each_blocks[i] = null;
    });
  };
  function itemmodal_show_binding(value) {
    /*itemmodal_show_binding*/ctx[4](value);
  }
  var itemmodal_props = {
    subcategory_id: /*subcategory*/ctx[0].id
  };
  if ( /*m_item*/ctx[1] !== void 0) {
    itemmodal_props.show = /*m_item*/ctx[1];
  }
  itemmodal = new ItemModal({
    props: itemmodal_props,
    $$inline: true
  });
  binding_callbacks.push(function () {
    return bind(itemmodal, 'show', itemmodal_show_binding);
  });
  var block = {
    c: function create() {
      table = element("table");
      thead = element("thead");
      tr = element("tr");
      td0 = element("td");
      h2 = element("h2");
      t0 = text(t0_value);
      t1 = space();
      td1 = element("td");
      create_component(button.$$.fragment);
      t2 = space();
      tbody = element("tbody");
      for (var _i = 0; _i < each_blocks.length; _i += 1) {
        each_blocks[_i].c();
      }
      t3 = space();
      create_component(itemmodal.$$.fragment);
      add_location(h2, file$g, 3, 21, 48);
      attr_dev(td0, "colspan", "3");
      attr_dev(td0, "class", "svelte-s0l2tk");
      add_location(td0, file$g, 3, 6, 33);
      attr_dev(td1, "class", "svelte-s0l2tk");
      add_location(td1, file$g, 4, 6, 90);
      add_location(tr, file$g, 2, 4, 22);
      attr_dev(thead, "class", "svelte-s0l2tk");
      add_location(thead, file$g, 1, 2, 10);
      add_location(tbody, file$g, 7, 2, 176);
      attr_dev(table, "class", "svelte-s0l2tk");
      add_location(table, file$g, 0, 0, 0);
    },
    l: function claim(nodes) {
      throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    },
    m: function mount(target, anchor) {
      insert_dev(target, table, anchor);
      append_dev(table, thead);
      append_dev(thead, tr);
      append_dev(tr, td0);
      append_dev(td0, h2);
      append_dev(h2, t0);
      append_dev(tr, t1);
      append_dev(tr, td1);
      mount_component(button, td1, null);
      append_dev(table, t2);
      append_dev(table, tbody);
      for (var _i2 = 0; _i2 < each_blocks.length; _i2 += 1) {
        if (each_blocks[_i2]) {
          each_blocks[_i2].m(tbody, null);
        }
      }
      insert_dev(target, t3, anchor);
      mount_component(itemmodal, target, anchor);
      current = true;
    },
    p: function update(ctx, _ref) {
      var _ref2 = _slicedToArray(_ref, 1),
        dirty = _ref2[0];
      if ((!current || dirty & /*subcategory*/1) && t0_value !== (t0_value = /*subcategory*/ctx[0].name + "")) set_data_dev(t0, t0_value);
      if (dirty & /*subcategory*/1) {
        each_value = /*subcategory*/ctx[0].items || [];
        validate_each_argument(each_value);
        var _i3;
        for (_i3 = 0; _i3 < each_value.length; _i3 += 1) {
          var child_ctx = get_each_context$6(ctx, each_value, _i3);
          if (each_blocks[_i3]) {
            each_blocks[_i3].p(child_ctx, dirty);
            transition_in(each_blocks[_i3], 1);
          } else {
            each_blocks[_i3] = create_each_block$6(child_ctx);
            each_blocks[_i3].c();
            transition_in(each_blocks[_i3], 1);
            each_blocks[_i3].m(tbody, null);
          }
        }
        group_outros();
        for (_i3 = each_value.length; _i3 < each_blocks.length; _i3 += 1) {
          out(_i3);
        }
        check_outros();
      }
      var itemmodal_changes = {};
      if (dirty & /*subcategory*/1) itemmodal_changes.subcategory_id = /*subcategory*/ctx[0].id;
      if (!updating_show && dirty & /*m_item*/2) {
        updating_show = true;
        itemmodal_changes.show = /*m_item*/ctx[1];
        add_flush_callback(function () {
          return updating_show = false;
        });
      }
      itemmodal.$set(itemmodal_changes);
    },
    i: function intro(local) {
      if (current) return;
      transition_in(button.$$.fragment, local);
      for (var _i4 = 0; _i4 < each_value.length; _i4 += 1) {
        transition_in(each_blocks[_i4]);
      }
      transition_in(itemmodal.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(button.$$.fragment, local);
      each_blocks = each_blocks.filter(Boolean);
      for (var _i5 = 0; _i5 < each_blocks.length; _i5 += 1) {
        transition_out(each_blocks[_i5]);
      }
      transition_out(itemmodal.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching) detach_dev(table);
      destroy_component(button);
      destroy_each(each_blocks, detaching);
      if (detaching) detach_dev(t3);
      destroy_component(itemmodal, detaching);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_fragment$g.name,
    type: "component",
    source: "",
    ctx: ctx
  });
  return block;
}
function instance$g($$self, $$props, $$invalidate) {
  var $menu;
  validate_store(menu, 'menu');
  component_subscribe($$self, menu, function ($$value) {
    return $$invalidate(3, $menu = $$value);
  });
  var _$$props$$$slots = $$props.$$slots,
    slots = _$$props$$$slots === void 0 ? {} : _$$props$$$slots;
    $$props.$$scope;
  validate_slots('SubcategoryTable', slots, []);
  var subcategory = $$props.subcategory;
  var m_item;
  function create_item() {
    $$invalidate(1, m_item = 1);
  }
  function update_items(menu) {
    var category = menu.categories.find(function (c) {
      return c.id == subcategory.category_id;
    });
    var _subcategory = category.subcategories.find(function (sc) {
      return sc.id == subcategory.id;
    });
    $$invalidate(0, subcategory.items = _subcategory.items, subcategory);
  }
  $$self.$$.on_mount.push(function () {
    if (subcategory === undefined && !('subcategory' in $$props || $$self.$$.bound[$$self.$$.props['subcategory']])) {
      console.warn("<SubcategoryTable> was created without expected prop 'subcategory'");
    }
  });
  var writable_props = ['subcategory'];
  Object.keys($$props).forEach(function (key) {
    if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn("<SubcategoryTable> was created with unknown prop '".concat(key, "'"));
  });
  function itemmodal_show_binding(value) {
    m_item = value;
    $$invalidate(1, m_item);
  }
  $$self.$$set = function ($$props) {
    if ('subcategory' in $$props) $$invalidate(0, subcategory = $$props.subcategory);
  };
  $$self.$capture_state = function () {
    return {
      ItemModal: ItemModal,
      ItemRow: ItemRow,
      Button: Button,
      menu: menu,
      subcategory: subcategory,
      m_item: m_item,
      create_item: create_item,
      update_items: update_items,
      $menu: $menu
    };
  };
  $$self.$inject_state = function ($$props) {
    if ('subcategory' in $$props) $$invalidate(0, subcategory = $$props.subcategory);
    if ('m_item' in $$props) $$invalidate(1, m_item = $$props.m_item);
  };
  if ($$props && "$$inject" in $$props) {
    $$self.$inject_state($$props.$$inject);
  }
  $$self.$$.update = function () {
    if ($$self.$$.dirty & /*$menu*/8) {
      update_items($menu);
    }
  };
  return [subcategory, m_item, create_item, $menu, itemmodal_show_binding];
}
var SubcategoryTable = /*#__PURE__*/function (_SvelteComponentDev) {
  function SubcategoryTable(options) {
    var _this;
    _classCallCheck(this, SubcategoryTable);
    _this = _callSuper(this, SubcategoryTable, [options]);
    init(_this, options, instance$g, create_fragment$g, safe_not_equal, {
      subcategory: 0
    });
    dispatch_dev("SvelteRegisterComponent", {
      component: _this,
      tagName: "SubcategoryTable",
      options: options,
      id: create_fragment$g.name
    });
    return _this;
  }
  _inherits(SubcategoryTable, _SvelteComponentDev);
  return _createClass(SubcategoryTable, [{
    key: "subcategory",
    get: function get() {
      throw new Error("<SubcategoryTable>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    },
    set: function set(value) {
      throw new Error("<SubcategoryTable>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    }
  }]);
}(SvelteComponentDev);

var css_248z$c = "select.svelte-1nqktdd:nth-child(2){margin-left:auto}.row.svelte-1nqktdd{flex-wrap:wrap}@media screen and (max-width: 768px){input.svelte-1nqktdd{width:100%}select.svelte-1nqktdd{margin:0 !important}}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkl0ZW1zRWRpdC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsbUNBQW1DLGdCQUFnQixDQUFDLG9CQUFvQixjQUFjLENBQUMscUNBQXFDLHFCQUFxQixVQUFVLENBQUMsc0JBQXNCLG1CQUFtQixDQUFDIiwiZmlsZSI6Ikl0ZW1zRWRpdC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJzZWxlY3Quc3ZlbHRlLTFucWt0ZGQ6bnRoLWNoaWxkKDIpe21hcmdpbi1sZWZ0OmF1dG99LnJvdy5zdmVsdGUtMW5xa3RkZHtmbGV4LXdyYXA6d3JhcH1AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCl7aW5wdXQuc3ZlbHRlLTFucWt0ZGR7d2lkdGg6MTAwJX1zZWxlY3Quc3ZlbHRlLTFucWt0ZGR7bWFyZ2luOjAgIWltcG9ydGFudH19Il19 */";
styleInject(css_248z$c);

var file$f = "web/routes/ItemsEdit.svelte";
function get_each_context$5(ctx, list, i) {
  var child_ctx = ctx.slice();
  child_ctx[4] = list[i];
  return child_ctx;
}
function get_each_context_1$1(ctx, list, i) {
  var child_ctx = ctx.slice();
  child_ctx[6] = list[i];
  return child_ctx;
}
function get_each_context_2(ctx, list, i) {
  var child_ctx = ctx.slice();
  child_ctx[6] = list[i];
  return child_ctx;
}
function get_each_context_3(ctx, list, i) {
  var child_ctx = ctx.slice();
  child_ctx[4] = list[i];
  return child_ctx;
}

// (6:4) {#each $menu.categories || [] as category}
function create_each_block_3(ctx) {
  var option;
  var t0_value = /*category*/ctx[4].name + "";
  var t0;
  var t1;
  var option_value_value;
  var block = {
    c: function create() {
      option = element("option");
      t0 = text(t0_value);
      t1 = space();
      option.__value = option_value_value = /*category*/ctx[4].id;
      option.value = option.__value;
      add_location(option, file$f, 6, 6, 219);
    },
    m: function mount(target, anchor) {
      insert_dev(target, option, anchor);
      append_dev(option, t0);
      append_dev(option, t1);
    },
    p: function update(ctx, dirty) {
      if (dirty & /*$menu*/8 && t0_value !== (t0_value = /*category*/ctx[4].name + "")) set_data_dev(t0, t0_value);
      if (dirty & /*$menu*/8 && option_value_value !== (option_value_value = /*category*/ctx[4].id)) {
        prop_dev(option, "__value", option_value_value);
        option.value = option.__value;
      }
    },
    d: function destroy(detaching) {
      if (detaching) detach_dev(option);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_each_block_3.name,
    type: "each",
    source: "(6:4) {#each $menu.categories || [] as category}",
    ctx: ctx
  });
  return block;
}

// (13:4) {#each category?.subcategories || [] as subcategory}
function create_each_block_2(ctx) {
  var option;
  var t0_value = /*subcategory*/ctx[6].name + "";
  var t0;
  var t1;
  var option_value_value;
  var block = {
    c: function create() {
      option = element("option");
      t0 = text(t0_value);
      t1 = space();
      option.__value = option_value_value = /*subcategory*/ctx[6].id;
      option.value = option.__value;
      add_location(option, file$f, 13, 6, 486);
    },
    m: function mount(target, anchor) {
      insert_dev(target, option, anchor);
      append_dev(option, t0);
      append_dev(option, t1);
    },
    p: function update(ctx, dirty) {
      if (dirty & /*category*/16 && t0_value !== (t0_value = /*subcategory*/ctx[6].name + "")) set_data_dev(t0, t0_value);
      if (dirty & /*category*/16 && option_value_value !== (option_value_value = /*subcategory*/ctx[6].id)) {
        prop_dev(option, "__value", option_value_value);
        option.value = option.__value;
      }
    },
    d: function destroy(detaching) {
      if (detaching) detach_dev(option);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_each_block_2.name,
    type: "each",
    source: "(13:4) {#each category?.subcategories || [] as subcategory}",
    ctx: ctx
  });
  return block;
}

// (24:2) {#each category.subcategories || [] as subcategory}
function create_each_block_1$1(ctx) {
  var subcategorytable;
  var current;
  subcategorytable = new SubcategoryTable({
    props: {
      subcategory: /*subcategory*/ctx[6]
    },
    $$inline: true
  });
  var block = {
    c: function create() {
      create_component(subcategorytable.$$.fragment);
    },
    m: function mount(target, anchor) {
      mount_component(subcategorytable, target, anchor);
      current = true;
    },
    p: function update(ctx, dirty) {
      var subcategorytable_changes = {};
      if (dirty & /*filtered_menu*/32) subcategorytable_changes.subcategory = /*subcategory*/ctx[6];
      subcategorytable.$set(subcategorytable_changes);
    },
    i: function intro(local) {
      if (current) return;
      transition_in(subcategorytable.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(subcategorytable.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      destroy_component(subcategorytable, detaching);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_each_block_1$1.name,
    type: "each",
    source: "(24:2) {#each category.subcategories || [] as subcategory}",
    ctx: ctx
  });
  return block;
}

// (19:0) {#each filtered_menu.categories || [] as category}
function create_each_block$5(ctx) {
  var div;
  var t0;
  var h1;
  var t1_value = /*category*/ctx[4].name + "";
  var t1;
  var t2;
  var each_1_anchor;
  var current;
  var each_value_1 = /*category*/ctx[4].subcategories || [];
  validate_each_argument(each_value_1);
  var each_blocks = [];
  for (var i = 0; i < each_value_1.length; i += 1) {
    each_blocks[i] = create_each_block_1$1(get_each_context_1$1(ctx, each_value_1, i));
  }
  var out = function out(i) {
    return transition_out(each_blocks[i], 1, 1, function () {
      each_blocks[i] = null;
    });
  };
  var block = {
    c: function create() {
      div = element("div");
      t0 = space();
      h1 = element("h1");
      t1 = text(t1_value);
      t2 = space();
      for (var _i = 0; _i < each_blocks.length; _i += 1) {
        each_blocks[_i].c();
      }
      each_1_anchor = empty();
      attr_dev(div, "class", "hr");
      add_location(div, file$f, 19, 2, 632);
      add_location(h1, file$f, 21, 2, 654);
    },
    m: function mount(target, anchor) {
      insert_dev(target, div, anchor);
      insert_dev(target, t0, anchor);
      insert_dev(target, h1, anchor);
      append_dev(h1, t1);
      insert_dev(target, t2, anchor);
      for (var _i2 = 0; _i2 < each_blocks.length; _i2 += 1) {
        if (each_blocks[_i2]) {
          each_blocks[_i2].m(target, anchor);
        }
      }
      insert_dev(target, each_1_anchor, anchor);
      current = true;
    },
    p: function update(ctx, dirty) {
      if ((!current || dirty & /*filtered_menu*/32) && t1_value !== (t1_value = /*category*/ctx[4].name + "")) set_data_dev(t1, t1_value);
      if (dirty & /*filtered_menu*/32) {
        each_value_1 = /*category*/ctx[4].subcategories || [];
        validate_each_argument(each_value_1);
        var _i3;
        for (_i3 = 0; _i3 < each_value_1.length; _i3 += 1) {
          var child_ctx = get_each_context_1$1(ctx, each_value_1, _i3);
          if (each_blocks[_i3]) {
            each_blocks[_i3].p(child_ctx, dirty);
            transition_in(each_blocks[_i3], 1);
          } else {
            each_blocks[_i3] = create_each_block_1$1(child_ctx);
            each_blocks[_i3].c();
            transition_in(each_blocks[_i3], 1);
            each_blocks[_i3].m(each_1_anchor.parentNode, each_1_anchor);
          }
        }
        group_outros();
        for (_i3 = each_value_1.length; _i3 < each_blocks.length; _i3 += 1) {
          out(_i3);
        }
        check_outros();
      }
    },
    i: function intro(local) {
      if (current) return;
      for (var _i4 = 0; _i4 < each_value_1.length; _i4 += 1) {
        transition_in(each_blocks[_i4]);
      }
      current = true;
    },
    o: function outro(local) {
      each_blocks = each_blocks.filter(Boolean);
      for (var _i5 = 0; _i5 < each_blocks.length; _i5 += 1) {
        transition_out(each_blocks[_i5]);
      }
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching) detach_dev(div);
      if (detaching) detach_dev(t0);
      if (detaching) detach_dev(h1);
      if (detaching) detach_dev(t2);
      destroy_each(each_blocks, detaching);
      if (detaching) detach_dev(each_1_anchor);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_each_block$5.name,
    type: "each",
    source: "(19:0) {#each filtered_menu.categories || [] as category}",
    ctx: ctx
  });
  return block;
}

// (29:0) {#if !filtered_menu.categories.length && (query || category_id || subcategory_id)}
function create_if_block$a(ctx) {
  var p;
  var t0;
  var span;
  var mounted;
  var dispose;
  var block = {
    c: function create() {
      p = element("p");
      t0 = text("Nada encontrado para esses filtros.\n    \n    ");
      span = element("span");
      span.textContent = "Limpar filtros";
      attr_dev(span, "class", "underline cp");
      add_location(span, file$f, 32, 4, 988);
      add_location(p, file$f, 29, 2, 879);
    },
    m: function mount(target, anchor) {
      insert_dev(target, p, anchor);
      append_dev(p, t0);
      append_dev(p, span);
      if (!mounted) {
        dispose = listen_dev(span, "click", /*clear_filters*/ctx[7], false, false, false, false);
        mounted = true;
      }
    },
    p: noop,
    d: function destroy(detaching) {
      if (detaching) detach_dev(p);
      mounted = false;
      dispose();
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_if_block$a.name,
    type: "if",
    source: "(29:0) {#if !filtered_menu.categories.length && (query || category_id || subcategory_id)}",
    ctx: ctx
  });
  return block;
}
function create_fragment$f(ctx) {
  var _ctx$;
  var div;
  var input;
  var t0;
  var select0;
  var option0;
  var t1;
  var t2;
  var select1;
  var option1;
  var t3;
  var select1_disabled_value;
  var t4;
  var t5;
  var if_block_anchor;
  var current;
  var mounted;
  var dispose;
  var each_value_3 = /*$menu*/ctx[3].categories || [];
  validate_each_argument(each_value_3);
  var each_blocks_2 = [];
  for (var i = 0; i < each_value_3.length; i += 1) {
    each_blocks_2[i] = create_each_block_3(get_each_context_3(ctx, each_value_3, i));
  }
  var each_value_2 = /*category*/((_ctx$ = ctx[4]) === null || _ctx$ === void 0 ? void 0 : _ctx$.subcategories) || [];
  validate_each_argument(each_value_2);
  var each_blocks_1 = [];
  for (var _i6 = 0; _i6 < each_value_2.length; _i6 += 1) {
    each_blocks_1[_i6] = create_each_block_2(get_each_context_2(ctx, each_value_2, _i6));
  }
  var each_value = /*filtered_menu*/ctx[5].categories || [];
  validate_each_argument(each_value);
  var each_blocks = [];
  for (var _i7 = 0; _i7 < each_value.length; _i7 += 1) {
    each_blocks[_i7] = create_each_block$5(get_each_context$5(ctx, each_value, _i7));
  }
  var out = function out(i) {
    return transition_out(each_blocks[i], 1, 1, function () {
      each_blocks[i] = null;
    });
  };
  var if_block = ! /*filtered_menu*/ctx[5].categories.length && ( /*query*/ctx[2] || /*category_id*/ctx[0] || /*subcategory_id*/ctx[1]) && create_if_block$a(ctx);
  var block = {
    c: function create() {
      div = element("div");
      input = element("input");
      t0 = space();
      select0 = element("select");
      option0 = element("option");
      t1 = text("Todas categorias ");
      for (var _i8 = 0; _i8 < each_blocks_2.length; _i8 += 1) {
        each_blocks_2[_i8].c();
      }
      t2 = space();
      select1 = element("select");
      option1 = element("option");
      t3 = text("Todas subcategorias ");
      for (var _i9 = 0; _i9 < each_blocks_1.length; _i9 += 1) {
        each_blocks_1[_i9].c();
      }
      t4 = space();
      for (var _i10 = 0; _i10 < each_blocks.length; _i10 += 1) {
        each_blocks[_i10].c();
      }
      t5 = space();
      if (if_block) if_block.c();
      if_block_anchor = empty();
      attr_dev(input, "placeholder", "Pesquisar");
      attr_dev(input, "class", "svelte-1nqktdd");
      add_location(input, file$f, 1, 2, 20);
      option0.__value = undefined;
      option0.value = option0.__value;
      add_location(option0, file$f, 4, 4, 112);
      attr_dev(select0, "class", "svelte-1nqktdd");
      if ( /*category_id*/ctx[0] === void 0) add_render_callback(function () {
        return /*select0_change_handler*/ctx[9].call(select0);
      });
      add_location(select0, file$f, 3, 2, 74);
      option1.__value = undefined;
      option1.value = option1.__value;
      add_location(option1, file$f, 11, 4, 366);
      select1.disabled = select1_disabled_value = ! /*category_id*/ctx[0];
      attr_dev(select1, "class", "svelte-1nqktdd");
      if ( /*subcategory_id*/ctx[1] === void 0) add_render_callback(function () {
        return /*select1_change_handler*/ctx[10].call(select1);
      });
      add_location(select1, file$f, 10, 2, 301);
      attr_dev(div, "class", "row svelte-1nqktdd");
      add_location(div, file$f, 0, 0, 0);
    },
    l: function claim(nodes) {
      throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    },
    m: function mount(target, anchor) {
      insert_dev(target, div, anchor);
      append_dev(div, input);
      set_input_value(input, /*query*/ctx[2]);
      append_dev(div, t0);
      append_dev(div, select0);
      append_dev(select0, option0);
      append_dev(option0, t1);
      for (var _i11 = 0; _i11 < each_blocks_2.length; _i11 += 1) {
        if (each_blocks_2[_i11]) {
          each_blocks_2[_i11].m(select0, null);
        }
      }
      select_option(select0, /*category_id*/ctx[0], true);
      append_dev(div, t2);
      append_dev(div, select1);
      append_dev(select1, option1);
      append_dev(option1, t3);
      for (var _i12 = 0; _i12 < each_blocks_1.length; _i12 += 1) {
        if (each_blocks_1[_i12]) {
          each_blocks_1[_i12].m(select1, null);
        }
      }
      select_option(select1, /*subcategory_id*/ctx[1], true);
      insert_dev(target, t4, anchor);
      for (var _i13 = 0; _i13 < each_blocks.length; _i13 += 1) {
        if (each_blocks[_i13]) {
          each_blocks[_i13].m(target, anchor);
        }
      }
      insert_dev(target, t5, anchor);
      if (if_block) if_block.m(target, anchor);
      insert_dev(target, if_block_anchor, anchor);
      current = true;
      if (!mounted) {
        dispose = [listen_dev(input, "input", /*input_input_handler*/ctx[8]), listen_dev(select0, "change", /*select0_change_handler*/ctx[9]), listen_dev(select1, "change", /*select1_change_handler*/ctx[10])];
        mounted = true;
      }
    },
    p: function update(ctx, _ref) {
      var _ref2 = _slicedToArray(_ref, 1),
        dirty = _ref2[0];
      if (dirty & /*query*/4 && input.value !== /*query*/ctx[2]) {
        set_input_value(input, /*query*/ctx[2]);
      }
      if (dirty & /*$menu*/8) {
        each_value_3 = /*$menu*/ctx[3].categories || [];
        validate_each_argument(each_value_3);
        var _i14;
        for (_i14 = 0; _i14 < each_value_3.length; _i14 += 1) {
          var child_ctx = get_each_context_3(ctx, each_value_3, _i14);
          if (each_blocks_2[_i14]) {
            each_blocks_2[_i14].p(child_ctx, dirty);
          } else {
            each_blocks_2[_i14] = create_each_block_3(child_ctx);
            each_blocks_2[_i14].c();
            each_blocks_2[_i14].m(select0, null);
          }
        }
        for (; _i14 < each_blocks_2.length; _i14 += 1) {
          each_blocks_2[_i14].d(1);
        }
        each_blocks_2.length = each_value_3.length;
      }
      if (dirty & /*category_id, $menu, undefined*/9) {
        select_option(select0, /*category_id*/ctx[0]);
      }
      if (dirty & /*category*/16) {
        var _ctx$2;
        each_value_2 = /*category*/((_ctx$2 = ctx[4]) === null || _ctx$2 === void 0 ? void 0 : _ctx$2.subcategories) || [];
        validate_each_argument(each_value_2);
        var _i15;
        for (_i15 = 0; _i15 < each_value_2.length; _i15 += 1) {
          var _child_ctx = get_each_context_2(ctx, each_value_2, _i15);
          if (each_blocks_1[_i15]) {
            each_blocks_1[_i15].p(_child_ctx, dirty);
          } else {
            each_blocks_1[_i15] = create_each_block_2(_child_ctx);
            each_blocks_1[_i15].c();
            each_blocks_1[_i15].m(select1, null);
          }
        }
        for (; _i15 < each_blocks_1.length; _i15 += 1) {
          each_blocks_1[_i15].d(1);
        }
        each_blocks_1.length = each_value_2.length;
      }
      if (!current || dirty & /*category_id, $menu, undefined*/9 && select1_disabled_value !== (select1_disabled_value = ! /*category_id*/ctx[0])) {
        prop_dev(select1, "disabled", select1_disabled_value);
      }
      if (dirty & /*subcategory_id, category, undefined*/18) {
        select_option(select1, /*subcategory_id*/ctx[1]);
      }
      if (dirty & /*filtered_menu*/32) {
        each_value = /*filtered_menu*/ctx[5].categories || [];
        validate_each_argument(each_value);
        var _i16;
        for (_i16 = 0; _i16 < each_value.length; _i16 += 1) {
          var _child_ctx2 = get_each_context$5(ctx, each_value, _i16);
          if (each_blocks[_i16]) {
            each_blocks[_i16].p(_child_ctx2, dirty);
            transition_in(each_blocks[_i16], 1);
          } else {
            each_blocks[_i16] = create_each_block$5(_child_ctx2);
            each_blocks[_i16].c();
            transition_in(each_blocks[_i16], 1);
            each_blocks[_i16].m(t5.parentNode, t5);
          }
        }
        group_outros();
        for (_i16 = each_value.length; _i16 < each_blocks.length; _i16 += 1) {
          out(_i16);
        }
        check_outros();
      }
      if (! /*filtered_menu*/ctx[5].categories.length && ( /*query*/ctx[2] || /*category_id*/ctx[0] || /*subcategory_id*/ctx[1])) {
        if (if_block) {
          if_block.p(ctx, dirty);
        } else {
          if_block = create_if_block$a(ctx);
          if_block.c();
          if_block.m(if_block_anchor.parentNode, if_block_anchor);
        }
      } else if (if_block) {
        if_block.d(1);
        if_block = null;
      }
    },
    i: function intro(local) {
      if (current) return;
      for (var _i17 = 0; _i17 < each_value.length; _i17 += 1) {
        transition_in(each_blocks[_i17]);
      }
      current = true;
    },
    o: function outro(local) {
      each_blocks = each_blocks.filter(Boolean);
      for (var _i18 = 0; _i18 < each_blocks.length; _i18 += 1) {
        transition_out(each_blocks[_i18]);
      }
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching) detach_dev(div);
      destroy_each(each_blocks_2, detaching);
      destroy_each(each_blocks_1, detaching);
      if (detaching) detach_dev(t4);
      destroy_each(each_blocks, detaching);
      if (detaching) detach_dev(t5);
      if (if_block) if_block.d(detaching);
      if (detaching) detach_dev(if_block_anchor);
      mounted = false;
      run_all(dispose);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_fragment$f.name,
    type: "component",
    source: "",
    ctx: ctx
  });
  return block;
}
function instance$f($$self, $$props, $$invalidate) {
  var $menu;
  validate_store(menu, 'menu');
  component_subscribe($$self, menu, function ($$value) {
    return $$invalidate(3, $menu = $$value);
  });
  var _$$props$$$slots = $$props.$$slots,
    slots = _$$props$$$slots === void 0 ? {} : _$$props$$$slots;
    $$props.$$scope;
  validate_slots('ItemsEdit', slots, []);
  var category_id,
    subcategory_id,
    category,
    subcategory,
    query = '';
  var filtered_menu;
  function apply_filters(category_id, subcategory_id, query) {
    var _$menu$categories$fin;
    if (!((_$menu$categories$fin = $menu.categories.find(function (c) {
      return c.id == category_id;
    })) !== null && _$menu$categories$fin !== void 0 && _$menu$categories$fin.subcategories.find(function (sc) {
      return sc.id == subcategory_id;
    }))) subcategory_id = undefined;
    $$invalidate(5, filtered_menu = JSON.parse(JSON.stringify($menu)));
    if (category_id) $$invalidate(5, filtered_menu.categories = filtered_menu.categories.filter(function (c) {
      return c.id == category_id;
    }), filtered_menu);
    if (subcategory_id) $$invalidate(5, filtered_menu.categories = filtered_menu.categories.map(function (c) {
      return c.id != category_id ? c : _objectSpread2(_objectSpread2({}, c), {}, {
        subcategories: c.subcategories.filter(function (sc) {
          return sc.id == subcategory_id;
        })
      });
    }), filtered_menu);
    if (query) {
      function includes_arr(text, arr) {
        var _iterator = _createForOfIteratorHelper(arr),
          _step;
        try {
          for (_iterator.s(); !(_step = _iterator.n()).done;) {
            var item = _step.value;
            if (!text.includes(item)) return 0;
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }
        return 1;
      }
      filtered_menu.categories.forEach(function (c) {
        c.subcategories.forEach(function (sc) {
          sc.items = sc.items.filter(function (item) {
            return includes_arr(minify_text(item.name.replaceAll(' ', '')), minify_text(query).split(' '));
          });
        });
        c.subcategories = c.subcategories.filter(function (sc) {
          return sc.items.length;
        });
      });
      $$invalidate(5, filtered_menu.categories = filtered_menu.categories.filter(function (c) {
        return c.subcategories.length;
      }), filtered_menu);
    }
  }
  function clear_filters() {
    $$invalidate(2, query = '');
    $$invalidate(0, category_id = undefined);
    $$invalidate(1, subcategory_id = undefined);
  }
  var writable_props = [];
  Object.keys($$props).forEach(function (key) {
    if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn("<ItemsEdit> was created with unknown prop '".concat(key, "'"));
  });
  function input_input_handler() {
    query = this.value;
    $$invalidate(2, query);
  }
  function select0_change_handler() {
    category_id = select_value(this);
    $$invalidate(0, category_id);
  }
  function select1_change_handler() {
    subcategory_id = select_value(this);
    $$invalidate(1, subcategory_id);
    ($$invalidate(4, category), $$invalidate(3, $menu)), $$invalidate(0, category_id);
  }
  $$self.$capture_state = function () {
    return {
      SubcategoryTable: SubcategoryTable,
      menu: menu,
      minify_text: minify_text,
      category_id: category_id,
      subcategory_id: subcategory_id,
      category: category,
      subcategory: subcategory,
      query: query,
      filtered_menu: filtered_menu,
      apply_filters: apply_filters,
      clear_filters: clear_filters,
      $menu: $menu
    };
  };
  $$self.$inject_state = function ($$props) {
    if ('category_id' in $$props) $$invalidate(0, category_id = $$props.category_id);
    if ('subcategory_id' in $$props) $$invalidate(1, subcategory_id = $$props.subcategory_id);
    if ('category' in $$props) $$invalidate(4, category = $$props.category);
    if ('subcategory' in $$props) $$invalidate(6, subcategory = $$props.subcategory);
    if ('query' in $$props) $$invalidate(2, query = $$props.query);
    if ('filtered_menu' in $$props) $$invalidate(5, filtered_menu = $$props.filtered_menu);
  };
  if ($$props && "$$inject" in $$props) {
    $$self.$inject_state($$props.$$inject);
  }
  $$self.$$.update = function () {
    if ($$self.$$.dirty & /*category_id, subcategory_id, query*/7) {
      apply_filters(category_id, subcategory_id, query);
    }
    if ($$self.$$.dirty & /*$menu, category_id*/9) {
      $$invalidate(4, category = $menu.categories.find(function (c) {
        return c.id == category_id;
      }));
    }
    if ($$self.$$.dirty & /*category, subcategory_id*/18) {
      var _category;
      $$invalidate(6, subcategory = (_category = category) === null || _category === void 0 ? void 0 : _category.subcategories.find(function (sc) {
        return sc.id == subcategory_id;
      }));
    }
  };
  return [category_id, subcategory_id, query, $menu, category, filtered_menu, subcategory, clear_filters, input_input_handler, select0_change_handler, select1_change_handler];
}
var ItemsEdit = /*#__PURE__*/function (_SvelteComponentDev) {
  function ItemsEdit(options) {
    var _this;
    _classCallCheck(this, ItemsEdit);
    _this = _callSuper(this, ItemsEdit, [options]);
    init(_this, options, instance$f, create_fragment$f, safe_not_equal, {});
    dispatch_dev("SvelteRegisterComponent", {
      component: _this,
      tagName: "ItemsEdit",
      options: options,
      id: create_fragment$f.name
    });
    return _this;
  }
  _inherits(ItemsEdit, _SvelteComponentDev);
  return _createClass(ItemsEdit);
}(SvelteComponentDev);

var css_248z$b = "label.svelte-1mya8io{margin:20px 0;text-align:start}label.svelte-1mya8io:not(.row){display:flex;flex-direction:column;gap:10px}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNhdGVnb3J5TW9kYWwuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHFCQUFxQixhQUFhLENBQUMsZ0JBQWdCLENBQUMsK0JBQStCLFlBQVksQ0FBQyxxQkFBcUIsQ0FBQyxRQUFRIiwiZmlsZSI6IkNhdGVnb3J5TW9kYWwuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibGFiZWwuc3ZlbHRlLTFteWE4aW97bWFyZ2luOjIwcHggMDt0ZXh0LWFsaWduOnN0YXJ0fWxhYmVsLnN2ZWx0ZS0xbXlhOGlvOm5vdCgucm93KXtkaXNwbGF5OmZsZXg7ZmxleC1kaXJlY3Rpb246Y29sdW1uO2dhcDoxMHB4fSJdfQ== */";
styleInject(css_248z$b);

var file$e = "web/components/CategoryModal.svelte";

// (1:0) <Modal {show} on:close={close}>
function create_default_slot$5(ctx) {
  var h2;
  var t0_value = ( /*category*/ctx[1] ? "Categoria: ".concat( /*category*/ctx[1].name) : 'Criando uma categoria') + "";
  var t0;
  var t1;
  var form_1;
  var label;
  var t2;
  var input;
  var t3;
  var button0;
  var t4_value = ( /*l_submitting*/ctx[2] ? '...' : /*category*/ctx[1] ? 'Editar' : 'Criar') + "";
  var t4;
  var t5;
  var button1;
  var t6;
  var mounted;
  var dispose;
  var block = {
    c: function create() {
      h2 = element("h2");
      t0 = text(t0_value);
      t1 = space();
      form_1 = element("form");
      label = element("label");
      t2 = text("Nome: ");
      input = element("input");
      t3 = space();
      button0 = element("button");
      t4 = text(t4_value);
      t5 = space();
      button1 = element("button");
      t6 = text("Cancelar");
      attr_dev(h2, "class", "special tac");
      add_location(h2, file$e, 1, 2, 34);
      input.required = true;
      add_location(input, file$e, 4, 18, 162);
      attr_dev(label, "class", "svelte-1mya8io");
      add_location(label, file$e, 4, 4, 148);
      attr_dev(button0, "class", "grn");
      button0.disabled = /*l_submitting*/ctx[2];
      add_location(button0, file$e, 6, 4, 218);
      attr_dev(button1, "class", "red");
      set_style(button1, "margin-top", "10px");
      button1.disabled = /*l_submitting*/ctx[2];
      add_location(button1, file$e, 7, 4, 352);
      add_location(form_1, file$e, 3, 2, 137);
    },
    m: function mount(target, anchor) {
      insert_dev(target, h2, anchor);
      append_dev(h2, t0);
      insert_dev(target, t1, anchor);
      insert_dev(target, form_1, anchor);
      append_dev(form_1, label);
      append_dev(label, t2);
      append_dev(label, input);
      set_input_value(input, /*form*/ctx[3].name);
      append_dev(form_1, t3);
      append_dev(form_1, button0);
      append_dev(button0, t4);
      append_dev(form_1, t5);
      append_dev(form_1, button1);
      append_dev(button1, t6);
      if (!mounted) {
        dispose = [listen_dev(input, "input", /*input_input_handler*/ctx[6]), listen_dev(button0, "click", /*submit*/ctx[5], false, false, false, false), listen_dev(button1, "click", /*close*/ctx[4], false, false, false, false)];
        mounted = true;
      }
    },
    p: function update(ctx, dirty) {
      if (dirty & /*category*/2 && t0_value !== (t0_value = ( /*category*/ctx[1] ? "Categoria: ".concat( /*category*/ctx[1].name) : 'Criando uma categoria') + "")) set_data_dev(t0, t0_value);
      if (dirty & /*form*/8 && input.value !== /*form*/ctx[3].name) {
        set_input_value(input, /*form*/ctx[3].name);
      }
      if (dirty & /*l_submitting, category*/6 && t4_value !== (t4_value = ( /*l_submitting*/ctx[2] ? '...' : /*category*/ctx[1] ? 'Editar' : 'Criar') + "")) set_data_dev(t4, t4_value);
      if (dirty & /*l_submitting*/4) {
        prop_dev(button0, "disabled", /*l_submitting*/ctx[2]);
      }
      if (dirty & /*l_submitting*/4) {
        prop_dev(button1, "disabled", /*l_submitting*/ctx[2]);
      }
    },
    d: function destroy(detaching) {
      if (detaching) detach_dev(h2);
      if (detaching) detach_dev(t1);
      if (detaching) detach_dev(form_1);
      mounted = false;
      run_all(dispose);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_default_slot$5.name,
    type: "slot",
    source: "(1:0) <Modal {show} on:close={close}>",
    ctx: ctx
  });
  return block;
}
function create_fragment$e(ctx) {
  var modal;
  var current;
  modal = new Modal({
    props: {
      show: /*show*/ctx[0],
      $$slots: {
        default: [create_default_slot$5]
      },
      $$scope: {
        ctx: ctx
      }
    },
    $$inline: true
  });
  modal.$on("close", /*close*/ctx[4]);
  var block = {
    c: function create() {
      create_component(modal.$$.fragment);
    },
    l: function claim(nodes) {
      throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    },
    m: function mount(target, anchor) {
      mount_component(modal, target, anchor);
      current = true;
    },
    p: function update(ctx, _ref) {
      var _ref2 = _slicedToArray(_ref, 1),
        dirty = _ref2[0];
      var modal_changes = {};
      if (dirty & /*show*/1) modal_changes.show = /*show*/ctx[0];
      if (dirty & /*$$scope, l_submitting, category, form*/270) {
        modal_changes.$$scope = {
          dirty: dirty,
          ctx: ctx
        };
      }
      modal.$set(modal_changes);
    },
    i: function intro(local) {
      if (current) return;
      transition_in(modal.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(modal.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      destroy_component(modal, detaching);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_fragment$e.name,
    type: "component",
    source: "",
    ctx: ctx
  });
  return block;
}
function instance$e($$self, $$props, $$invalidate) {
  var _$$props$$$slots = $$props.$$slots,
    slots = _$$props$$$slots === void 0 ? {} : _$$props$$$slots;
    $$props.$$scope;
  validate_slots('CategoryModal', slots, []);
  var show = $$props.show,
    category = $$props.category;
  var l_submitting;
  var form;
  function close() {
    $$invalidate(0, show = false);
  }
  function submit() {
    return _submit.apply(this, arguments);
  }
  function _submit() {
    _submit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
      return _regeneratorRuntime().wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            $$invalidate(2, l_submitting = true);
            if (!category) {
              _context.next = 6;
              break;
            }
            _context.next = 4;
            return edit_category(category.id, form);
          case 4:
            _context.next = 8;
            break;
          case 6:
            _context.next = 8;
            return create_category(form);
          case 8:
            close();
          case 9:
          case "end":
            return _context.stop();
        }
      }, _callee);
    }));
    return _submit.apply(this, arguments);
  }
  function mount() {
    var _category;
    $$invalidate(2, l_submitting = false);
    $$invalidate(3, form = {
      name: (_category = category) === null || _category === void 0 ? void 0 : _category.name
    });
  }
  $$self.$$.on_mount.push(function () {
    if (show === undefined && !('show' in $$props || $$self.$$.bound[$$self.$$.props['show']])) {
      console.warn("<CategoryModal> was created without expected prop 'show'");
    }
    if (category === undefined && !('category' in $$props || $$self.$$.bound[$$self.$$.props['category']])) {
      console.warn("<CategoryModal> was created without expected prop 'category'");
    }
  });
  var writable_props = ['show', 'category'];
  Object.keys($$props).forEach(function (key) {
    if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn("<CategoryModal> was created with unknown prop '".concat(key, "'"));
  });
  function input_input_handler() {
    form.name = this.value;
    $$invalidate(3, form);
  }
  $$self.$$set = function ($$props) {
    if ('show' in $$props) $$invalidate(0, show = $$props.show);
    if ('category' in $$props) $$invalidate(1, category = $$props.category);
  };
  $$self.$capture_state = function () {
    return {
      Modal: Modal,
      create_category: create_category,
      edit_category: edit_category,
      show: show,
      category: category,
      l_submitting: l_submitting,
      form: form,
      close: close,
      submit: submit,
      mount: mount
    };
  };
  $$self.$inject_state = function ($$props) {
    if ('show' in $$props) $$invalidate(0, show = $$props.show);
    if ('category' in $$props) $$invalidate(1, category = $$props.category);
    if ('l_submitting' in $$props) $$invalidate(2, l_submitting = $$props.l_submitting);
    if ('form' in $$props) $$invalidate(3, form = $$props.form);
  };
  if ($$props && "$$inject" in $$props) {
    $$self.$inject_state($$props.$$inject);
  }
  $$self.$$.update = function () {
    if ($$self.$$.dirty & /*show*/1) {
      if (show) mount();
    }
  };
  return [show, category, l_submitting, form, close, submit, input_input_handler];
}
var CategoryModal = /*#__PURE__*/function (_SvelteComponentDev) {
  function CategoryModal(options) {
    var _this;
    _classCallCheck(this, CategoryModal);
    _this = _callSuper(this, CategoryModal, [options]);
    init(_this, options, instance$e, create_fragment$e, safe_not_equal, {
      show: 0,
      category: 1
    });
    dispatch_dev("SvelteRegisterComponent", {
      component: _this,
      tagName: "CategoryModal",
      options: options,
      id: create_fragment$e.name
    });
    return _this;
  }
  _inherits(CategoryModal, _SvelteComponentDev);
  return _createClass(CategoryModal, [{
    key: "show",
    get: function get() {
      throw new Error("<CategoryModal>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    },
    set: function set(value) {
      throw new Error("<CategoryModal>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    }
  }, {
    key: "category",
    get: function get() {
      throw new Error("<CategoryModal>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    },
    set: function set(value) {
      throw new Error("<CategoryModal>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    }
  }]);
}(SvelteComponentDev);

var css_248z$a = "label.svelte-1mya8io{margin:20px 0;text-align:start}label.svelte-1mya8io:not(.row){display:flex;flex-direction:column;gap:10px}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlN1YmNhdGVnb3J5TW9kYWwuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHFCQUFxQixhQUFhLENBQUMsZ0JBQWdCLENBQUMsK0JBQStCLFlBQVksQ0FBQyxxQkFBcUIsQ0FBQyxRQUFRIiwiZmlsZSI6IlN1YmNhdGVnb3J5TW9kYWwuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibGFiZWwuc3ZlbHRlLTFteWE4aW97bWFyZ2luOjIwcHggMDt0ZXh0LWFsaWduOnN0YXJ0fWxhYmVsLnN2ZWx0ZS0xbXlhOGlvOm5vdCgucm93KXtkaXNwbGF5OmZsZXg7ZmxleC1kaXJlY3Rpb246Y29sdW1uO2dhcDoxMHB4fSJdfQ== */";
styleInject(css_248z$a);

var file$d = "web/components/SubcategoryModal.svelte";

// (1:0) {#if show}
function create_if_block$9(ctx) {
  var modal;
  var current;
  modal = new Modal({
    props: {
      show: /*show*/ctx[0],
      $$slots: {
        default: [create_default_slot$4]
      },
      $$scope: {
        ctx: ctx
      }
    },
    $$inline: true
  });
  modal.$on("close", /*close*/ctx[4]);
  var block = {
    c: function create() {
      create_component(modal.$$.fragment);
    },
    m: function mount(target, anchor) {
      mount_component(modal, target, anchor);
      current = true;
    },
    p: function update(ctx, dirty) {
      var modal_changes = {};
      if (dirty & /*show*/1) modal_changes.show = /*show*/ctx[0];
      if (dirty & /*$$scope, l_submitting, subcategory, form*/526) {
        modal_changes.$$scope = {
          dirty: dirty,
          ctx: ctx
        };
      }
      modal.$set(modal_changes);
    },
    i: function intro(local) {
      if (current) return;
      transition_in(modal.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(modal.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      destroy_component(modal, detaching);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_if_block$9.name,
    type: "if",
    source: "(1:0) {#if show}",
    ctx: ctx
  });
  return block;
}

// (2:2) <Modal {show} on:close={close}>
function create_default_slot$4(ctx) {
  var h2;
  var t0_value = ( /*subcategory*/ctx[1] ? "Subcategoria: ".concat( /*subcategory*/ctx[1].name) : 'Criando uma Subcategoria') + "";
  var t0;
  var t1;
  var form_1;
  var label;
  var t2;
  var input;
  var t3;
  var button0;
  var t4_value = ( /*l_submitting*/ctx[2] ? '...' : /*subcategory*/ctx[1] ? 'Editar' : 'Criar') + "";
  var t4;
  var t5;
  var button1;
  var t6;
  var mounted;
  var dispose;
  var block = {
    c: function create() {
      h2 = element("h2");
      t0 = text(t0_value);
      t1 = space();
      form_1 = element("form");
      label = element("label");
      t2 = text("Nome: ");
      input = element("input");
      t3 = space();
      button0 = element("button");
      t4 = text(t4_value);
      t5 = space();
      button1 = element("button");
      t6 = text("Cancelar");
      attr_dev(h2, "class", "special tac");
      add_location(h2, file$d, 2, 4, 49);
      input.required = true;
      add_location(input, file$d, 5, 20, 193);
      attr_dev(label, "class", "svelte-1mya8io");
      add_location(label, file$d, 5, 6, 179);
      attr_dev(button0, "class", "grn");
      button0.disabled = /*l_submitting*/ctx[2];
      add_location(button0, file$d, 7, 6, 251);
      attr_dev(button1, "class", "red");
      set_style(button1, "margin-top", "10px");
      button1.disabled = /*l_submitting*/ctx[2];
      add_location(button1, file$d, 8, 6, 390);
      add_location(form_1, file$d, 4, 4, 166);
    },
    m: function mount(target, anchor) {
      insert_dev(target, h2, anchor);
      append_dev(h2, t0);
      insert_dev(target, t1, anchor);
      insert_dev(target, form_1, anchor);
      append_dev(form_1, label);
      append_dev(label, t2);
      append_dev(label, input);
      set_input_value(input, /*form*/ctx[3].name);
      append_dev(form_1, t3);
      append_dev(form_1, button0);
      append_dev(button0, t4);
      append_dev(form_1, t5);
      append_dev(form_1, button1);
      append_dev(button1, t6);
      if (!mounted) {
        dispose = [listen_dev(input, "input", /*input_input_handler*/ctx[7]), listen_dev(button0, "click", /*submit*/ctx[5], false, false, false, false), listen_dev(button1, "click", /*close*/ctx[4], false, false, false, false)];
        mounted = true;
      }
    },
    p: function update(ctx, dirty) {
      if (dirty & /*subcategory*/2 && t0_value !== (t0_value = ( /*subcategory*/ctx[1] ? "Subcategoria: ".concat( /*subcategory*/ctx[1].name) : 'Criando uma Subcategoria') + "")) set_data_dev(t0, t0_value);
      if (dirty & /*form*/8 && input.value !== /*form*/ctx[3].name) {
        set_input_value(input, /*form*/ctx[3].name);
      }
      if (dirty & /*l_submitting, subcategory*/6 && t4_value !== (t4_value = ( /*l_submitting*/ctx[2] ? '...' : /*subcategory*/ctx[1] ? 'Editar' : 'Criar') + "")) set_data_dev(t4, t4_value);
      if (dirty & /*l_submitting*/4) {
        prop_dev(button0, "disabled", /*l_submitting*/ctx[2]);
      }
      if (dirty & /*l_submitting*/4) {
        prop_dev(button1, "disabled", /*l_submitting*/ctx[2]);
      }
    },
    d: function destroy(detaching) {
      if (detaching) detach_dev(h2);
      if (detaching) detach_dev(t1);
      if (detaching) detach_dev(form_1);
      mounted = false;
      run_all(dispose);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_default_slot$4.name,
    type: "slot",
    source: "(2:2) <Modal {show} on:close={close}>",
    ctx: ctx
  });
  return block;
}
function create_fragment$d(ctx) {
  var if_block_anchor;
  var current;
  var if_block = /*show*/ctx[0] && create_if_block$9(ctx);
  var block = {
    c: function create() {
      if (if_block) if_block.c();
      if_block_anchor = empty();
    },
    l: function claim(nodes) {
      throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    },
    m: function mount(target, anchor) {
      if (if_block) if_block.m(target, anchor);
      insert_dev(target, if_block_anchor, anchor);
      current = true;
    },
    p: function update(ctx, _ref) {
      var _ref2 = _slicedToArray(_ref, 1),
        dirty = _ref2[0];
      if ( /*show*/ctx[0]) {
        if (if_block) {
          if_block.p(ctx, dirty);
          if (dirty & /*show*/1) {
            transition_in(if_block, 1);
          }
        } else {
          if_block = create_if_block$9(ctx);
          if_block.c();
          transition_in(if_block, 1);
          if_block.m(if_block_anchor.parentNode, if_block_anchor);
        }
      } else if (if_block) {
        group_outros();
        transition_out(if_block, 1, 1, function () {
          if_block = null;
        });
        check_outros();
      }
    },
    i: function intro(local) {
      if (current) return;
      transition_in(if_block);
      current = true;
    },
    o: function outro(local) {
      transition_out(if_block);
      current = false;
    },
    d: function destroy(detaching) {
      if (if_block) if_block.d(detaching);
      if (detaching) detach_dev(if_block_anchor);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_fragment$d.name,
    type: "component",
    source: "",
    ctx: ctx
  });
  return block;
}
function instance$d($$self, $$props, $$invalidate) {
  var _$$props$$$slots = $$props.$$slots,
    slots = _$$props$$$slots === void 0 ? {} : _$$props$$$slots;
    $$props.$$scope;
  validate_slots('SubcategoryModal', slots, []);
  var show = $$props.show,
    subcategory = $$props.subcategory,
    category_id = $$props.category_id;
  var l_submitting;
  var form;
  function close() {
    $$invalidate(0, show = false);
  }
  function submit() {
    return _submit.apply(this, arguments);
  }
  function _submit() {
    _submit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
      return _regeneratorRuntime().wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            $$invalidate(2, l_submitting = true);
            if (!subcategory) {
              _context.next = 6;
              break;
            }
            _context.next = 4;
            return edit_subcategory(subcategory.id, form);
          case 4:
            _context.next = 8;
            break;
          case 6:
            _context.next = 8;
            return create_subcategory(category_id, form);
          case 8:
            close();
          case 9:
          case "end":
            return _context.stop();
        }
      }, _callee);
    }));
    return _submit.apply(this, arguments);
  }
  function mount() {
    var _subcategory;
    $$invalidate(2, l_submitting = false);
    $$invalidate(3, form = {
      name: (_subcategory = subcategory) === null || _subcategory === void 0 ? void 0 : _subcategory.name
    });
  }
  $$self.$$.on_mount.push(function () {
    if (show === undefined && !('show' in $$props || $$self.$$.bound[$$self.$$.props['show']])) {
      console.warn("<SubcategoryModal> was created without expected prop 'show'");
    }
    if (subcategory === undefined && !('subcategory' in $$props || $$self.$$.bound[$$self.$$.props['subcategory']])) {
      console.warn("<SubcategoryModal> was created without expected prop 'subcategory'");
    }
    if (category_id === undefined && !('category_id' in $$props || $$self.$$.bound[$$self.$$.props['category_id']])) {
      console.warn("<SubcategoryModal> was created without expected prop 'category_id'");
    }
  });
  var writable_props = ['show', 'subcategory', 'category_id'];
  Object.keys($$props).forEach(function (key) {
    if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn("<SubcategoryModal> was created with unknown prop '".concat(key, "'"));
  });
  function input_input_handler() {
    form.name = this.value;
    $$invalidate(3, form);
  }
  $$self.$$set = function ($$props) {
    if ('show' in $$props) $$invalidate(0, show = $$props.show);
    if ('subcategory' in $$props) $$invalidate(1, subcategory = $$props.subcategory);
    if ('category_id' in $$props) $$invalidate(6, category_id = $$props.category_id);
  };
  $$self.$capture_state = function () {
    return {
      Modal: Modal,
      create_subcategory: create_subcategory,
      edit_subcategory: edit_subcategory,
      show: show,
      subcategory: subcategory,
      category_id: category_id,
      l_submitting: l_submitting,
      form: form,
      close: close,
      submit: submit,
      mount: mount
    };
  };
  $$self.$inject_state = function ($$props) {
    if ('show' in $$props) $$invalidate(0, show = $$props.show);
    if ('subcategory' in $$props) $$invalidate(1, subcategory = $$props.subcategory);
    if ('category_id' in $$props) $$invalidate(6, category_id = $$props.category_id);
    if ('l_submitting' in $$props) $$invalidate(2, l_submitting = $$props.l_submitting);
    if ('form' in $$props) $$invalidate(3, form = $$props.form);
  };
  if ($$props && "$$inject" in $$props) {
    $$self.$inject_state($$props.$$inject);
  }
  $$self.$$.update = function () {
    if ($$self.$$.dirty & /*show*/1) {
      if (show) mount();
    }
  };
  return [show, subcategory, l_submitting, form, close, submit, category_id, input_input_handler];
}
var SubcategoryModal = /*#__PURE__*/function (_SvelteComponentDev) {
  function SubcategoryModal(options) {
    var _this;
    _classCallCheck(this, SubcategoryModal);
    _this = _callSuper(this, SubcategoryModal, [options]);
    init(_this, options, instance$d, create_fragment$d, safe_not_equal, {
      show: 0,
      subcategory: 1,
      category_id: 6
    });
    dispatch_dev("SvelteRegisterComponent", {
      component: _this,
      tagName: "SubcategoryModal",
      options: options,
      id: create_fragment$d.name
    });
    return _this;
  }
  _inherits(SubcategoryModal, _SvelteComponentDev);
  return _createClass(SubcategoryModal, [{
    key: "show",
    get: function get() {
      throw new Error("<SubcategoryModal>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    },
    set: function set(value) {
      throw new Error("<SubcategoryModal>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    }
  }, {
    key: "subcategory",
    get: function get() {
      throw new Error("<SubcategoryModal>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    },
    set: function set(value) {
      throw new Error("<SubcategoryModal>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    }
  }, {
    key: "category_id",
    get: function get() {
      throw new Error("<SubcategoryModal>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    },
    set: function set(value) {
      throw new Error("<SubcategoryModal>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    }
  }]);
}(SvelteComponentDev);

var css_248z$9 = "li.svelte-huuhgf{padding:10px;margin-top:15px;background:var(--bg0_h);border-radius:10px}.special.svelte-huuhgf{margin:0 0 20px 0;text-align:center}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlN1YmNhdGVnb3J5Q2FyZC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsaUJBQWlCLFlBQVksQ0FBQyxlQUFlLENBQUMsdUJBQXVCLENBQUMsa0JBQWtCLENBQUMsdUJBQXVCLGlCQUFpQixDQUFDLGlCQUFpQiIsImZpbGUiOiJTdWJjYXRlZ29yeUNhcmQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibGkuc3ZlbHRlLWh1dWhnZntwYWRkaW5nOjEwcHg7bWFyZ2luLXRvcDoxNXB4O2JhY2tncm91bmQ6dmFyKC0tYmcwX2gpO2JvcmRlci1yYWRpdXM6MTBweH0uc3BlY2lhbC5zdmVsdGUtaHV1aGdme21hcmdpbjowIDAgMjBweCAwO3RleHQtYWxpZ246Y2VudGVyfSJdfQ== */";
styleInject(css_248z$9);

var file$c = "web/components/SubcategoryCard.svelte";

// (10:0) <Modal bind:show={m_options}>
function create_default_slot_2$1(ctx) {
  var p;
  var t0;
  var t1_value = /*subcategory*/ctx[0].name + "";
  var t1;
  var t2;
  var div;
  var button0;
  var t3;
  var button1;
  var t4;
  var button2;
  var current;
  button0 = new Button({
    props: {
      class: "blu",
      i: "edit",
      t: "Editar",
      action: /*edit*/ctx[8]
    },
    $$inline: true
  });
  button1 = new Button({
    props: {
      class: "red",
      i: "delete",
      t: "Excluir",
      action: /*_delete*/ctx[9]
    },
    $$inline: true
  });
  button2 = new Button({
    props: {
      i: "close",
      t: "Cancelar",
      action: /*func*/ctx[13]
    },
    $$inline: true
  });
  var block = {
    c: function create() {
      p = element("p");
      t0 = text("Subcategoria: ");
      t1 = text(t1_value);
      t2 = space();
      div = element("div");
      create_component(button0.$$.fragment);
      t3 = space();
      create_component(button1.$$.fragment);
      t4 = space();
      create_component(button2.$$.fragment);
      attr_dev(p, "class", "special svelte-huuhgf");
      add_location(p, file$c, 10, 2, 421);
      attr_dev(div, "class", "btn-col");
      add_location(div, file$c, 11, 2, 481);
    },
    m: function mount(target, anchor) {
      insert_dev(target, p, anchor);
      append_dev(p, t0);
      append_dev(p, t1);
      insert_dev(target, t2, anchor);
      insert_dev(target, div, anchor);
      mount_component(button0, div, null);
      append_dev(div, t3);
      mount_component(button1, div, null);
      append_dev(div, t4);
      mount_component(button2, div, null);
      current = true;
    },
    p: function update(ctx, dirty) {
      if ((!current || dirty & /*subcategory*/1) && t1_value !== (t1_value = /*subcategory*/ctx[0].name + "")) set_data_dev(t1, t1_value);
      var button2_changes = {};
      if (dirty & /*m_options*/4) button2_changes.action = /*func*/ctx[13];
      button2.$set(button2_changes);
    },
    i: function intro(local) {
      if (current) return;
      transition_in(button0.$$.fragment, local);
      transition_in(button1.$$.fragment, local);
      transition_in(button2.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(button0.$$.fragment, local);
      transition_out(button1.$$.fragment, local);
      transition_out(button2.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching) detach_dev(p);
      if (detaching) detach_dev(t2);
      if (detaching) detach_dev(div);
      destroy_component(button0);
      destroy_component(button1);
      destroy_component(button2);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_default_slot_2$1.name,
    type: "slot",
    source: "(10:0) <Modal bind:show={m_options}>",
    ctx: ctx
  });
  return block;
}

// (20:0) {#if l_deleting}
function create_if_block_1$5(ctx) {
  var modal;
  var current;
  modal = new Modal({
    props: {
      show: true,
      $$slots: {
        default: [create_default_slot_1$1]
      },
      $$scope: {
        ctx: ctx
      }
    },
    $$inline: true
  });
  var block = {
    c: function create() {
      create_component(modal.$$.fragment);
    },
    m: function mount(target, anchor) {
      mount_component(modal, target, anchor);
      current = true;
    },
    i: function intro(local) {
      if (current) return;
      transition_in(modal.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(modal.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      destroy_component(modal, detaching);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_if_block_1$5.name,
    type: "if",
    source: "(20:0) {#if l_deleting}",
    ctx: ctx
  });
  return block;
}

// (21:2) <Modal show={true}>
function create_default_slot_1$1(ctx) {
  var t;
  var block = {
    c: function create() {
      t = text("Excluindo...");
    },
    m: function mount(target, anchor) {
      insert_dev(target, t, anchor);
    },
    d: function destroy(detaching) {
      if (detaching) detach_dev(t);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_default_slot_1$1.name,
    type: "slot",
    source: "(21:2) <Modal show={true}>",
    ctx: ctx
  });
  return block;
}

// (24:0) {#if l_moving}
function create_if_block$8(ctx) {
  var modal;
  var current;
  modal = new Modal({
    props: {
      show: true,
      $$slots: {
        default: [create_default_slot$3]
      },
      $$scope: {
        ctx: ctx
      }
    },
    $$inline: true
  });
  var block = {
    c: function create() {
      create_component(modal.$$.fragment);
    },
    m: function mount(target, anchor) {
      mount_component(modal, target, anchor);
      current = true;
    },
    i: function intro(local) {
      if (current) return;
      transition_in(modal.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(modal.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      destroy_component(modal, detaching);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_if_block$8.name,
    type: "if",
    source: "(24:0) {#if l_moving}",
    ctx: ctx
  });
  return block;
}

// (25:2) <Modal show={true}>
function create_default_slot$3(ctx) {
  var t;
  var block = {
    c: function create() {
      t = text("Movendo...");
    },
    m: function mount(target, anchor) {
      insert_dev(target, t, anchor);
    },
    d: function destroy(detaching) {
      if (detaching) detach_dev(t);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_default_slot$3.name,
    type: "slot",
    source: "(25:2) <Modal show={true}>",
    ctx: ctx
  });
  return block;
}
function create_fragment$c(ctx) {
  var li;
  var p;
  var t0_value = ( /*subcategory*/ctx[0].name || 'Sem nome') + "";
  var t0;
  var t1;
  var button0;
  var t2;
  var button1;
  var t3;
  var button2;
  var t4;
  var modal;
  var updating_show;
  var t5;
  var subcategorymodal;
  var updating_show_1;
  var t6;
  var t7;
  var if_block1_anchor;
  var current;
  var mounted;
  var dispose;
  button0 = new Button({
    props: {
      i: "settings",
      action: /*show_options*/ctx[7]
    },
    $$inline: true
  });
  button1 = new Button({
    props: {
      i: "keyboard_arrow_up",
      action: /*move_up*/ctx[10],
      disabled: /*i*/ctx[4] == 0
    },
    $$inline: true
  });
  button2 = new Button({
    props: {
      i: "keyboard_arrow_down",
      action: /*move_down*/ctx[11],
      disabled: /*i*/ctx[4] == /*category*/ctx[3].subcategories.length - 1
    },
    $$inline: true
  });
  function modal_show_binding(value) {
    /*modal_show_binding*/ctx[14](value);
  }
  var modal_props = {
    $$slots: {
      default: [create_default_slot_2$1]
    },
    $$scope: {
      ctx: ctx
    }
  };
  if ( /*m_options*/ctx[2] !== void 0) {
    modal_props.show = /*m_options*/ctx[2];
  }
  modal = new Modal({
    props: modal_props,
    $$inline: true
  });
  binding_callbacks.push(function () {
    return bind(modal, 'show', modal_show_binding);
  });
  function subcategorymodal_show_binding(value) {
    /*subcategorymodal_show_binding*/ctx[15](value);
  }
  var subcategorymodal_props = {
    subcategory: /*subcategory*/ctx[0],
    category_id: /*subcategory*/ctx[0].category_id
  };
  if ( /*m_edit*/ctx[1] !== void 0) {
    subcategorymodal_props.show = /*m_edit*/ctx[1];
  }
  subcategorymodal = new SubcategoryModal({
    props: subcategorymodal_props,
    $$inline: true
  });
  binding_callbacks.push(function () {
    return bind(subcategorymodal, 'show', subcategorymodal_show_binding);
  });
  var if_block0 = /*l_deleting*/ctx[5] && create_if_block_1$5(ctx);
  var if_block1 = /*l_moving*/ctx[6] && create_if_block$8(ctx);
  var block = {
    c: function create() {
      li = element("li");
      p = element("p");
      t0 = text(t0_value);
      t1 = space();
      create_component(button0.$$.fragment);
      t2 = space();
      create_component(button1.$$.fragment);
      t3 = space();
      create_component(button2.$$.fragment);
      t4 = space();
      create_component(modal.$$.fragment);
      t5 = space();
      create_component(subcategorymodal.$$.fragment);
      t6 = space();
      if (if_block0) if_block0.c();
      t7 = space();
      if (if_block1) if_block1.c();
      if_block1_anchor = empty();
      attr_dev(p, "class", "cp fg");
      add_location(p, file$c, 2, 2, 76);
      attr_dev(li, "class", "row svelte-huuhgf");
      add_location(li, file$c, 1, 0, 57);
    },
    l: function claim(nodes) {
      throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    },
    m: function mount(target, anchor) {
      insert_dev(target, li, anchor);
      append_dev(li, p);
      append_dev(p, t0);
      append_dev(li, t1);
      mount_component(button0, li, null);
      append_dev(li, t2);
      mount_component(button1, li, null);
      append_dev(li, t3);
      mount_component(button2, li, null);
      insert_dev(target, t4, anchor);
      mount_component(modal, target, anchor);
      insert_dev(target, t5, anchor);
      mount_component(subcategorymodal, target, anchor);
      insert_dev(target, t6, anchor);
      if (if_block0) if_block0.m(target, anchor);
      insert_dev(target, t7, anchor);
      if (if_block1) if_block1.m(target, anchor);
      insert_dev(target, if_block1_anchor, anchor);
      current = true;
      if (!mounted) {
        dispose = listen_dev(p, "click", /*show_options*/ctx[7], false, false, false, false);
        mounted = true;
      }
    },
    p: function update(ctx, _ref) {
      var _ref2 = _slicedToArray(_ref, 1),
        dirty = _ref2[0];
      if ((!current || dirty & /*subcategory*/1) && t0_value !== (t0_value = ( /*subcategory*/ctx[0].name || 'Sem nome') + "")) set_data_dev(t0, t0_value);
      var button1_changes = {};
      if (dirty & /*i*/16) button1_changes.disabled = /*i*/ctx[4] == 0;
      button1.$set(button1_changes);
      var button2_changes = {};
      if (dirty & /*i, category*/24) button2_changes.disabled = /*i*/ctx[4] == /*category*/ctx[3].subcategories.length - 1;
      button2.$set(button2_changes);
      var modal_changes = {};
      if (dirty & /*$$scope, m_options, subcategory*/131077) {
        modal_changes.$$scope = {
          dirty: dirty,
          ctx: ctx
        };
      }
      if (!updating_show && dirty & /*m_options*/4) {
        updating_show = true;
        modal_changes.show = /*m_options*/ctx[2];
        add_flush_callback(function () {
          return updating_show = false;
        });
      }
      modal.$set(modal_changes);
      var subcategorymodal_changes = {};
      if (dirty & /*subcategory*/1) subcategorymodal_changes.subcategory = /*subcategory*/ctx[0];
      if (dirty & /*subcategory*/1) subcategorymodal_changes.category_id = /*subcategory*/ctx[0].category_id;
      if (!updating_show_1 && dirty & /*m_edit*/2) {
        updating_show_1 = true;
        subcategorymodal_changes.show = /*m_edit*/ctx[1];
        add_flush_callback(function () {
          return updating_show_1 = false;
        });
      }
      subcategorymodal.$set(subcategorymodal_changes);
      if ( /*l_deleting*/ctx[5]) {
        if (if_block0) {
          if (dirty & /*l_deleting*/32) {
            transition_in(if_block0, 1);
          }
        } else {
          if_block0 = create_if_block_1$5(ctx);
          if_block0.c();
          transition_in(if_block0, 1);
          if_block0.m(t7.parentNode, t7);
        }
      } else if (if_block0) {
        group_outros();
        transition_out(if_block0, 1, 1, function () {
          if_block0 = null;
        });
        check_outros();
      }
      if ( /*l_moving*/ctx[6]) {
        if (if_block1) {
          if (dirty & /*l_moving*/64) {
            transition_in(if_block1, 1);
          }
        } else {
          if_block1 = create_if_block$8(ctx);
          if_block1.c();
          transition_in(if_block1, 1);
          if_block1.m(if_block1_anchor.parentNode, if_block1_anchor);
        }
      } else if (if_block1) {
        group_outros();
        transition_out(if_block1, 1, 1, function () {
          if_block1 = null;
        });
        check_outros();
      }
    },
    i: function intro(local) {
      if (current) return;
      transition_in(button0.$$.fragment, local);
      transition_in(button1.$$.fragment, local);
      transition_in(button2.$$.fragment, local);
      transition_in(modal.$$.fragment, local);
      transition_in(subcategorymodal.$$.fragment, local);
      transition_in(if_block0);
      transition_in(if_block1);
      current = true;
    },
    o: function outro(local) {
      transition_out(button0.$$.fragment, local);
      transition_out(button1.$$.fragment, local);
      transition_out(button2.$$.fragment, local);
      transition_out(modal.$$.fragment, local);
      transition_out(subcategorymodal.$$.fragment, local);
      transition_out(if_block0);
      transition_out(if_block1);
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching) detach_dev(li);
      destroy_component(button0);
      destroy_component(button1);
      destroy_component(button2);
      if (detaching) detach_dev(t4);
      destroy_component(modal, detaching);
      if (detaching) detach_dev(t5);
      destroy_component(subcategorymodal, detaching);
      if (detaching) detach_dev(t6);
      if (if_block0) if_block0.d(detaching);
      if (detaching) detach_dev(t7);
      if (if_block1) if_block1.d(detaching);
      if (detaching) detach_dev(if_block1_anchor);
      mounted = false;
      dispose();
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_fragment$c.name,
    type: "component",
    source: "",
    ctx: ctx
  });
  return block;
}
function instance$c($$self, $$props, $$invalidate) {
  var $menu;
  validate_store(menu, 'menu');
  component_subscribe($$self, menu, function ($$value) {
    return $$invalidate(12, $menu = $$value);
  });
  var _$$props$$$slots = $$props.$$slots,
    slots = _$$props$$$slots === void 0 ? {} : _$$props$$$slots;
    $$props.$$scope;
  validate_slots('SubcategoryCard', slots, []);
  var subcategory = $$props.subcategory;
  var m_edit, m_options;
  var category, i;
  var l_deleting, l_moving;
  function show_options() {
    $$invalidate(2, m_options = 1);
  }
  function edit() {
    $$invalidate(2, m_options = 0);
    $$invalidate(1, m_edit = 1);
  }
  function _delete() {
    return _delete2.apply(this, arguments);
  }
  function _delete2() {
    _delete2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
      return _regeneratorRuntime().wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            $$invalidate(2, m_options = 0);
            if (confirm("Certeza que quer excluir a subcategoria ".concat(subcategory.name, "?"))) {
              _context.next = 3;
              break;
            }
            return _context.abrupt("return");
          case 3:
            $$invalidate(5, l_deleting = true);
            _context.next = 6;
            return delete_subcategory(subcategory.id);
          case 6:
            $$invalidate(5, l_deleting = false);
          case 7:
          case "end":
            return _context.stop();
        }
      }, _callee);
    }));
    return _delete2.apply(this, arguments);
  }
  function move_up() {
    return _move_up.apply(this, arguments);
  }
  function _move_up() {
    _move_up = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {
      return _regeneratorRuntime().wrap(function _callee2$(_context2) {
        while (1) switch (_context2.prev = _context2.next) {
          case 0:
            $$invalidate(6, l_moving = true);
            _context2.next = 3;
            return move_subcategory_up(subcategory.id);
          case 3:
            $$invalidate(6, l_moving = false);
          case 4:
          case "end":
            return _context2.stop();
        }
      }, _callee2);
    }));
    return _move_up.apply(this, arguments);
  }
  function move_down() {
    return _move_down.apply(this, arguments);
  }
  function _move_down() {
    _move_down = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {
      return _regeneratorRuntime().wrap(function _callee3$(_context3) {
        while (1) switch (_context3.prev = _context3.next) {
          case 0:
            $$invalidate(6, l_moving = true);
            _context3.next = 3;
            return move_subcategory_down(subcategory.id);
          case 3:
            $$invalidate(6, l_moving = false);
          case 4:
          case "end":
            return _context3.stop();
        }
      }, _callee3);
    }));
    return _move_down.apply(this, arguments);
  }
  function update_i() {
    $$invalidate(3, category = $menu.categories.find(function (c) {
      var _c$subcategories;
      return (_c$subcategories = c.subcategories) === null || _c$subcategories === void 0 ? void 0 : _c$subcategories.find(function (sc) {
        return sc.id == subcategory.id;
      });
    }));
    $$invalidate(4, i = category.subcategories.findIndex(function (sc) {
      return sc.id == subcategory.id;
    }));
  }
  $$self.$$.on_mount.push(function () {
    if (subcategory === undefined && !('subcategory' in $$props || $$self.$$.bound[$$self.$$.props['subcategory']])) {
      console.warn("<SubcategoryCard> was created without expected prop 'subcategory'");
    }
  });
  var writable_props = ['subcategory'];
  Object.keys($$props).forEach(function (key) {
    if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn("<SubcategoryCard> was created with unknown prop '".concat(key, "'"));
  });
  var func = function func(_) {
    return $$invalidate(2, m_options = false);
  };
  function modal_show_binding(value) {
    m_options = value;
    $$invalidate(2, m_options);
  }
  function subcategorymodal_show_binding(value) {
    m_edit = value;
    $$invalidate(1, m_edit);
  }
  $$self.$$set = function ($$props) {
    if ('subcategory' in $$props) $$invalidate(0, subcategory = $$props.subcategory);
  };
  $$self.$capture_state = function () {
    return {
      SubcategoryModal: SubcategoryModal,
      Button: Button,
      Modal: Modal,
      delete_subcategory: delete_subcategory,
      move_subcategory_up: move_subcategory_up,
      move_subcategory_down: move_subcategory_down,
      menu: menu,
      subcategory: subcategory,
      m_edit: m_edit,
      m_options: m_options,
      category: category,
      i: i,
      l_deleting: l_deleting,
      l_moving: l_moving,
      show_options: show_options,
      edit: edit,
      _delete: _delete,
      move_up: move_up,
      move_down: move_down,
      update_i: update_i,
      $menu: $menu
    };
  };
  $$self.$inject_state = function ($$props) {
    if ('subcategory' in $$props) $$invalidate(0, subcategory = $$props.subcategory);
    if ('m_edit' in $$props) $$invalidate(1, m_edit = $$props.m_edit);
    if ('m_options' in $$props) $$invalidate(2, m_options = $$props.m_options);
    if ('category' in $$props) $$invalidate(3, category = $$props.category);
    if ('i' in $$props) $$invalidate(4, i = $$props.i);
    if ('l_deleting' in $$props) $$invalidate(5, l_deleting = $$props.l_deleting);
    if ('l_moving' in $$props) $$invalidate(6, l_moving = $$props.l_moving);
  };
  if ($$props && "$$inject" in $$props) {
    $$self.$inject_state($$props.$$inject);
  }
  $$self.$$.update = function () {
    if ($$self.$$.dirty & /*$menu*/4096) {
      if ($menu) update_i();
    }
  };
  return [subcategory, m_edit, m_options, category, i, l_deleting, l_moving, show_options, edit, _delete, move_up, move_down, $menu, func, modal_show_binding, subcategorymodal_show_binding];
}
var SubcategoryCard = /*#__PURE__*/function (_SvelteComponentDev) {
  function SubcategoryCard(options) {
    var _this;
    _classCallCheck(this, SubcategoryCard);
    _this = _callSuper(this, SubcategoryCard, [options]);
    init(_this, options, instance$c, create_fragment$c, safe_not_equal, {
      subcategory: 0
    });
    dispatch_dev("SvelteRegisterComponent", {
      component: _this,
      tagName: "SubcategoryCard",
      options: options,
      id: create_fragment$c.name
    });
    return _this;
  }
  _inherits(SubcategoryCard, _SvelteComponentDev);
  return _createClass(SubcategoryCard, [{
    key: "subcategory",
    get: function get() {
      throw new Error("<SubcategoryCard>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    },
    set: function set(value) {
      throw new Error("<SubcategoryCard>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    }
  }]);
}(SvelteComponentDev);

var css_248z$8 = ".category.svelte-199o48f{padding:15px;border:3px solid var(--gray);margin-top:15px}.special.svelte-199o48f{margin:0 0 20px 0;text-align:center}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNhdGVnb3J5Q2FyZC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEseUJBQXlCLFlBQVksQ0FBQyw0QkFBNEIsQ0FBQyxlQUFlLENBQUMsd0JBQXdCLGlCQUFpQixDQUFDLGlCQUFpQiIsImZpbGUiOiJDYXRlZ29yeUNhcmQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNhdGVnb3J5LnN2ZWx0ZS0xOTlvNDhme3BhZGRpbmc6MTVweDtib3JkZXI6M3B4IHNvbGlkIHZhcigtLWdyYXkpO21hcmdpbi10b3A6MTVweH0uc3BlY2lhbC5zdmVsdGUtMTk5bzQ4ZnttYXJnaW46MCAwIDIwcHggMDt0ZXh0LWFsaWduOmNlbnRlcn0iXX0= */";
styleInject(css_248z$8);

var file$b = "web/components/CategoryCard.svelte";
function get_each_context$4(ctx, list, i) {
  var child_ctx = ctx.slice();
  child_ctx[18] = list[i];
  return child_ctx;
}

// (13:4) {#each category.subcategories || [] as subcategory}
function create_each_block$4(ctx) {
  var subcategorycard;
  var current;
  subcategorycard = new SubcategoryCard({
    props: {
      subcategory: /*subcategory*/ctx[18]
    },
    $$inline: true
  });
  var block = {
    c: function create() {
      create_component(subcategorycard.$$.fragment);
    },
    m: function mount(target, anchor) {
      mount_component(subcategorycard, target, anchor);
      current = true;
    },
    p: function update(ctx, dirty) {
      var subcategorycard_changes = {};
      if (dirty & /*category*/1) subcategorycard_changes.subcategory = /*subcategory*/ctx[18];
      subcategorycard.$set(subcategorycard_changes);
    },
    i: function intro(local) {
      if (current) return;
      transition_in(subcategorycard.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(subcategorycard.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      destroy_component(subcategorycard, detaching);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_each_block$4.name,
    type: "each",
    source: "(13:4) {#each category.subcategories || [] as subcategory}",
    ctx: ctx
  });
  return block;
}

// (19:0) <Modal bind:show={m_options}>
function create_default_slot_2(ctx) {
  var p;
  var t0;
  var t1_value = /*category*/ctx[0].name + "";
  var t1;
  var t2;
  var div;
  var button0;
  var t3;
  var button1;
  var t4;
  var button2;
  var t5;
  var button3;
  var current;
  button0 = new Button({
    props: {
      class: "grn",
      i: "add",
      t: "Subcategoria",
      action: /*create_sub*/ctx[8]
    },
    $$inline: true
  });
  button1 = new Button({
    props: {
      class: "blu",
      i: "edit",
      t: "Editar",
      action: /*edit*/ctx[9]
    },
    $$inline: true
  });
  button2 = new Button({
    props: {
      class: "red",
      i: "delete",
      t: "Excluir",
      action: /*_delete*/ctx[11]
    },
    $$inline: true
  });
  button3 = new Button({
    props: {
      i: "close",
      t: "Cancelar",
      action: /*func*/ctx[14]
    },
    $$inline: true
  });
  var block = {
    c: function create() {
      p = element("p");
      t0 = text("Categoria: ");
      t1 = text(t1_value);
      t2 = space();
      div = element("div");
      create_component(button0.$$.fragment);
      t3 = space();
      create_component(button1.$$.fragment);
      t4 = space();
      create_component(button2.$$.fragment);
      t5 = space();
      create_component(button3.$$.fragment);
      attr_dev(p, "class", "special svelte-199o48f");
      add_location(p, file$b, 19, 2, 527);
      attr_dev(div, "class", "btn-col");
      add_location(div, file$b, 20, 2, 581);
    },
    m: function mount(target, anchor) {
      insert_dev(target, p, anchor);
      append_dev(p, t0);
      append_dev(p, t1);
      insert_dev(target, t2, anchor);
      insert_dev(target, div, anchor);
      mount_component(button0, div, null);
      append_dev(div, t3);
      mount_component(button1, div, null);
      append_dev(div, t4);
      mount_component(button2, div, null);
      append_dev(div, t5);
      mount_component(button3, div, null);
      current = true;
    },
    p: function update(ctx, dirty) {
      if ((!current || dirty & /*category*/1) && t1_value !== (t1_value = /*category*/ctx[0].name + "")) set_data_dev(t1, t1_value);
      var button3_changes = {};
      if (dirty & /*m_options*/16) button3_changes.action = /*func*/ctx[14];
      button3.$set(button3_changes);
    },
    i: function intro(local) {
      if (current) return;
      transition_in(button0.$$.fragment, local);
      transition_in(button1.$$.fragment, local);
      transition_in(button2.$$.fragment, local);
      transition_in(button3.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(button0.$$.fragment, local);
      transition_out(button1.$$.fragment, local);
      transition_out(button2.$$.fragment, local);
      transition_out(button3.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching) detach_dev(p);
      if (detaching) detach_dev(t2);
      if (detaching) detach_dev(div);
      destroy_component(button0);
      destroy_component(button1);
      destroy_component(button2);
      destroy_component(button3);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_default_slot_2.name,
    type: "slot",
    source: "(19:0) <Modal bind:show={m_options}>",
    ctx: ctx
  });
  return block;
}

// (31:0) {#if l_deleting}
function create_if_block_1$4(ctx) {
  var modal;
  var current;
  modal = new Modal({
    props: {
      show: true,
      $$slots: {
        default: [create_default_slot_1]
      },
      $$scope: {
        ctx: ctx
      }
    },
    $$inline: true
  });
  var block = {
    c: function create() {
      create_component(modal.$$.fragment);
    },
    m: function mount(target, anchor) {
      mount_component(modal, target, anchor);
      current = true;
    },
    i: function intro(local) {
      if (current) return;
      transition_in(modal.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(modal.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      destroy_component(modal, detaching);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_if_block_1$4.name,
    type: "if",
    source: "(31:0) {#if l_deleting}",
    ctx: ctx
  });
  return block;
}

// (32:2) <Modal show={true}>
function create_default_slot_1(ctx) {
  var t;
  var block = {
    c: function create() {
      t = text("Excluindo...");
    },
    m: function mount(target, anchor) {
      insert_dev(target, t, anchor);
    },
    d: function destroy(detaching) {
      if (detaching) detach_dev(t);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_default_slot_1.name,
    type: "slot",
    source: "(32:2) <Modal show={true}>",
    ctx: ctx
  });
  return block;
}

// (35:0) {#if l_moving}
function create_if_block$7(ctx) {
  var modal;
  var current;
  modal = new Modal({
    props: {
      show: true,
      $$slots: {
        default: [create_default_slot$2]
      },
      $$scope: {
        ctx: ctx
      }
    },
    $$inline: true
  });
  var block = {
    c: function create() {
      create_component(modal.$$.fragment);
    },
    m: function mount(target, anchor) {
      mount_component(modal, target, anchor);
      current = true;
    },
    i: function intro(local) {
      if (current) return;
      transition_in(modal.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(modal.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      destroy_component(modal, detaching);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_if_block$7.name,
    type: "if",
    source: "(35:0) {#if l_moving}",
    ctx: ctx
  });
  return block;
}

// (36:2) <Modal show={true}>
function create_default_slot$2(ctx) {
  var t;
  var block = {
    c: function create() {
      t = text("Movendo...");
    },
    m: function mount(target, anchor) {
      insert_dev(target, t, anchor);
    },
    d: function destroy(detaching) {
      if (detaching) detach_dev(t);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_default_slot$2.name,
    type: "slot",
    source: "(36:2) <Modal show={true}>",
    ctx: ctx
  });
  return block;
}
function create_fragment$b(ctx) {
  var div2;
  var div1;
  var h2;
  var t0_value = /*category*/ctx[0].name + "";
  var t0;
  var t1;
  var div0;
  var button0;
  var t2;
  var button1;
  var t3;
  var button2;
  var t4;
  var ul;
  var t5;
  var modal;
  var updating_show;
  var t6;
  var categorymodal;
  var updating_show_1;
  var t7;
  var subcategorymodal;
  var updating_show_2;
  var t8;
  var t9;
  var if_block1_anchor;
  var current;
  button0 = new Button({
    props: {
      i: "settings",
      action: /*show_options*/ctx[10]
    },
    $$inline: true
  });
  button1 = new Button({
    props: {
      i: "keyboard_arrow_up",
      action: /*move_up*/ctx[12],
      disabled: /*i*/ctx[7] == 0
    },
    $$inline: true
  });
  button2 = new Button({
    props: {
      i: "keyboard_arrow_down",
      action: /*move_down*/ctx[13],
      disabled: /*i*/ctx[7] == /*$menu*/ctx[1].categories.length - 1
    },
    $$inline: true
  });
  var each_value = /*category*/ctx[0].subcategories || [];
  validate_each_argument(each_value);
  var each_blocks = [];
  for (var i = 0; i < each_value.length; i += 1) {
    each_blocks[i] = create_each_block$4(get_each_context$4(ctx, each_value, i));
  }
  var out = function out(i) {
    return transition_out(each_blocks[i], 1, 1, function () {
      each_blocks[i] = null;
    });
  };
  function modal_show_binding(value) {
    /*modal_show_binding*/ctx[15](value);
  }
  var modal_props = {
    $$slots: {
      default: [create_default_slot_2]
    },
    $$scope: {
      ctx: ctx
    }
  };
  if ( /*m_options*/ctx[4] !== void 0) {
    modal_props.show = /*m_options*/ctx[4];
  }
  modal = new Modal({
    props: modal_props,
    $$inline: true
  });
  binding_callbacks.push(function () {
    return bind(modal, 'show', modal_show_binding);
  });
  function categorymodal_show_binding(value) {
    /*categorymodal_show_binding*/ctx[16](value);
  }
  var categorymodal_props = {
    category: /*category*/ctx[0]
  };
  if ( /*m_edit*/ctx[2] !== void 0) {
    categorymodal_props.show = /*m_edit*/ctx[2];
  }
  categorymodal = new CategoryModal({
    props: categorymodal_props,
    $$inline: true
  });
  binding_callbacks.push(function () {
    return bind(categorymodal, 'show', categorymodal_show_binding);
  });
  function subcategorymodal_show_binding(value) {
    /*subcategorymodal_show_binding*/ctx[17](value);
  }
  var subcategorymodal_props = {
    category_id: /*category*/ctx[0].id
  };
  if ( /*m_subcategory*/ctx[3] !== void 0) {
    subcategorymodal_props.show = /*m_subcategory*/ctx[3];
  }
  subcategorymodal = new SubcategoryModal({
    props: subcategorymodal_props,
    $$inline: true
  });
  binding_callbacks.push(function () {
    return bind(subcategorymodal, 'show', subcategorymodal_show_binding);
  });
  var if_block0 = /*l_deleting*/ctx[5] && create_if_block_1$4(ctx);
  var if_block1 = /*l_moving*/ctx[6] && create_if_block$7(ctx);
  var block = {
    c: function create() {
      div2 = element("div");
      div1 = element("div");
      h2 = element("h2");
      t0 = text(t0_value);
      t1 = space();
      div0 = element("div");
      create_component(button0.$$.fragment);
      t2 = space();
      create_component(button1.$$.fragment);
      t3 = space();
      create_component(button2.$$.fragment);
      t4 = space();
      ul = element("ul");
      for (var _i = 0; _i < each_blocks.length; _i += 1) {
        each_blocks[_i].c();
      }
      t5 = space();
      create_component(modal.$$.fragment);
      t6 = space();
      create_component(categorymodal.$$.fragment);
      t7 = space();
      create_component(subcategorymodal.$$.fragment);
      t8 = space();
      if (if_block0) if_block0.c();
      t9 = space();
      if (if_block1) if_block1.c();
      if_block1_anchor = empty();
      add_location(h2, file$b, 2, 4, 59);
      attr_dev(div0, "class", "row jce");
      add_location(div0, file$b, 4, 4, 91);
      attr_dev(div1, "class", "row toprow jcsb");
      add_location(div1, file$b, 1, 2, 25);
      add_location(ul, file$b, 11, 2, 366);
      attr_dev(div2, "class", "category svelte-199o48f");
      add_location(div2, file$b, 0, 0, 0);
    },
    l: function claim(nodes) {
      throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    },
    m: function mount(target, anchor) {
      insert_dev(target, div2, anchor);
      append_dev(div2, div1);
      append_dev(div1, h2);
      append_dev(h2, t0);
      append_dev(div1, t1);
      append_dev(div1, div0);
      mount_component(button0, div0, null);
      append_dev(div0, t2);
      mount_component(button1, div0, null);
      append_dev(div0, t3);
      mount_component(button2, div0, null);
      append_dev(div2, t4);
      append_dev(div2, ul);
      for (var _i2 = 0; _i2 < each_blocks.length; _i2 += 1) {
        if (each_blocks[_i2]) {
          each_blocks[_i2].m(ul, null);
        }
      }
      insert_dev(target, t5, anchor);
      mount_component(modal, target, anchor);
      insert_dev(target, t6, anchor);
      mount_component(categorymodal, target, anchor);
      insert_dev(target, t7, anchor);
      mount_component(subcategorymodal, target, anchor);
      insert_dev(target, t8, anchor);
      if (if_block0) if_block0.m(target, anchor);
      insert_dev(target, t9, anchor);
      if (if_block1) if_block1.m(target, anchor);
      insert_dev(target, if_block1_anchor, anchor);
      current = true;
    },
    p: function update(ctx, _ref) {
      var _ref2 = _slicedToArray(_ref, 1),
        dirty = _ref2[0];
      if ((!current || dirty & /*category*/1) && t0_value !== (t0_value = /*category*/ctx[0].name + "")) set_data_dev(t0, t0_value);
      var button1_changes = {};
      if (dirty & /*i*/128) button1_changes.disabled = /*i*/ctx[7] == 0;
      button1.$set(button1_changes);
      var button2_changes = {};
      if (dirty & /*i, $menu*/130) button2_changes.disabled = /*i*/ctx[7] == /*$menu*/ctx[1].categories.length - 1;
      button2.$set(button2_changes);
      if (dirty & /*category*/1) {
        each_value = /*category*/ctx[0].subcategories || [];
        validate_each_argument(each_value);
        var _i3;
        for (_i3 = 0; _i3 < each_value.length; _i3 += 1) {
          var child_ctx = get_each_context$4(ctx, each_value, _i3);
          if (each_blocks[_i3]) {
            each_blocks[_i3].p(child_ctx, dirty);
            transition_in(each_blocks[_i3], 1);
          } else {
            each_blocks[_i3] = create_each_block$4(child_ctx);
            each_blocks[_i3].c();
            transition_in(each_blocks[_i3], 1);
            each_blocks[_i3].m(ul, null);
          }
        }
        group_outros();
        for (_i3 = each_value.length; _i3 < each_blocks.length; _i3 += 1) {
          out(_i3);
        }
        check_outros();
      }
      var modal_changes = {};
      if (dirty & /*$$scope, m_options, category*/2097169) {
        modal_changes.$$scope = {
          dirty: dirty,
          ctx: ctx
        };
      }
      if (!updating_show && dirty & /*m_options*/16) {
        updating_show = true;
        modal_changes.show = /*m_options*/ctx[4];
        add_flush_callback(function () {
          return updating_show = false;
        });
      }
      modal.$set(modal_changes);
      var categorymodal_changes = {};
      if (dirty & /*category*/1) categorymodal_changes.category = /*category*/ctx[0];
      if (!updating_show_1 && dirty & /*m_edit*/4) {
        updating_show_1 = true;
        categorymodal_changes.show = /*m_edit*/ctx[2];
        add_flush_callback(function () {
          return updating_show_1 = false;
        });
      }
      categorymodal.$set(categorymodal_changes);
      var subcategorymodal_changes = {};
      if (dirty & /*category*/1) subcategorymodal_changes.category_id = /*category*/ctx[0].id;
      if (!updating_show_2 && dirty & /*m_subcategory*/8) {
        updating_show_2 = true;
        subcategorymodal_changes.show = /*m_subcategory*/ctx[3];
        add_flush_callback(function () {
          return updating_show_2 = false;
        });
      }
      subcategorymodal.$set(subcategorymodal_changes);
      if ( /*l_deleting*/ctx[5]) {
        if (if_block0) {
          if (dirty & /*l_deleting*/32) {
            transition_in(if_block0, 1);
          }
        } else {
          if_block0 = create_if_block_1$4(ctx);
          if_block0.c();
          transition_in(if_block0, 1);
          if_block0.m(t9.parentNode, t9);
        }
      } else if (if_block0) {
        group_outros();
        transition_out(if_block0, 1, 1, function () {
          if_block0 = null;
        });
        check_outros();
      }
      if ( /*l_moving*/ctx[6]) {
        if (if_block1) {
          if (dirty & /*l_moving*/64) {
            transition_in(if_block1, 1);
          }
        } else {
          if_block1 = create_if_block$7(ctx);
          if_block1.c();
          transition_in(if_block1, 1);
          if_block1.m(if_block1_anchor.parentNode, if_block1_anchor);
        }
      } else if (if_block1) {
        group_outros();
        transition_out(if_block1, 1, 1, function () {
          if_block1 = null;
        });
        check_outros();
      }
    },
    i: function intro(local) {
      if (current) return;
      transition_in(button0.$$.fragment, local);
      transition_in(button1.$$.fragment, local);
      transition_in(button2.$$.fragment, local);
      for (var _i4 = 0; _i4 < each_value.length; _i4 += 1) {
        transition_in(each_blocks[_i4]);
      }
      transition_in(modal.$$.fragment, local);
      transition_in(categorymodal.$$.fragment, local);
      transition_in(subcategorymodal.$$.fragment, local);
      transition_in(if_block0);
      transition_in(if_block1);
      current = true;
    },
    o: function outro(local) {
      transition_out(button0.$$.fragment, local);
      transition_out(button1.$$.fragment, local);
      transition_out(button2.$$.fragment, local);
      each_blocks = each_blocks.filter(Boolean);
      for (var _i5 = 0; _i5 < each_blocks.length; _i5 += 1) {
        transition_out(each_blocks[_i5]);
      }
      transition_out(modal.$$.fragment, local);
      transition_out(categorymodal.$$.fragment, local);
      transition_out(subcategorymodal.$$.fragment, local);
      transition_out(if_block0);
      transition_out(if_block1);
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching) detach_dev(div2);
      destroy_component(button0);
      destroy_component(button1);
      destroy_component(button2);
      destroy_each(each_blocks, detaching);
      if (detaching) detach_dev(t5);
      destroy_component(modal, detaching);
      if (detaching) detach_dev(t6);
      destroy_component(categorymodal, detaching);
      if (detaching) detach_dev(t7);
      destroy_component(subcategorymodal, detaching);
      if (detaching) detach_dev(t8);
      if (if_block0) if_block0.d(detaching);
      if (detaching) detach_dev(t9);
      if (if_block1) if_block1.d(detaching);
      if (detaching) detach_dev(if_block1_anchor);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_fragment$b.name,
    type: "component",
    source: "",
    ctx: ctx
  });
  return block;
}
function instance$b($$self, $$props, $$invalidate) {
  var $menu;
  validate_store(menu, 'menu');
  component_subscribe($$self, menu, function ($$value) {
    return $$invalidate(1, $menu = $$value);
  });
  var _$$props$$$slots = $$props.$$slots,
    slots = _$$props$$$slots === void 0 ? {} : _$$props$$$slots;
    $$props.$$scope;
  validate_slots('CategoryCard', slots, []);
  var category = $$props.category;
  var m_edit, m_subcategory, m_options;
  var l_deleting, l_moving;
  var i;
  function create_sub() {
    $$invalidate(4, m_options = 0);
    $$invalidate(3, m_subcategory = 1);
  }
  function edit() {
    $$invalidate(4, m_options = 0);
    $$invalidate(2, m_edit = 1);
  }
  function show_options() {
    $$invalidate(4, m_options = 1);
  }
  function _delete() {
    return _delete2.apply(this, arguments);
  }
  function _delete2() {
    _delete2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
      return _regeneratorRuntime().wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            $$invalidate(4, m_options = 0);
            if (confirm("Certeza que quer excluir a categoria ".concat(category.name, "?"))) {
              _context.next = 3;
              break;
            }
            return _context.abrupt("return");
          case 3:
            $$invalidate(5, l_deleting = true);
            _context.next = 6;
            return delete_category(category.id);
          case 6:
            $$invalidate(5, l_deleting = false);
          case 7:
          case "end":
            return _context.stop();
        }
      }, _callee);
    }));
    return _delete2.apply(this, arguments);
  }
  function move_up() {
    return _move_up.apply(this, arguments);
  }
  function _move_up() {
    _move_up = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {
      return _regeneratorRuntime().wrap(function _callee2$(_context2) {
        while (1) switch (_context2.prev = _context2.next) {
          case 0:
            $$invalidate(6, l_moving = true);
            _context2.next = 3;
            return move_category_up(category.id);
          case 3:
            $$invalidate(6, l_moving = false);
          case 4:
          case "end":
            return _context2.stop();
        }
      }, _callee2);
    }));
    return _move_up.apply(this, arguments);
  }
  function move_down() {
    return _move_down.apply(this, arguments);
  }
  function _move_down() {
    _move_down = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {
      return _regeneratorRuntime().wrap(function _callee3$(_context3) {
        while (1) switch (_context3.prev = _context3.next) {
          case 0:
            $$invalidate(6, l_moving = true);
            _context3.next = 3;
            return move_category_down(category.id);
          case 3:
            $$invalidate(6, l_moving = false);
          case 4:
          case "end":
            return _context3.stop();
        }
      }, _callee3);
    }));
    return _move_down.apply(this, arguments);
  }
  $$self.$$.on_mount.push(function () {
    if (category === undefined && !('category' in $$props || $$self.$$.bound[$$self.$$.props['category']])) {
      console.warn("<CategoryCard> was created without expected prop 'category'");
    }
  });
  var writable_props = ['category'];
  Object.keys($$props).forEach(function (key) {
    if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn("<CategoryCard> was created with unknown prop '".concat(key, "'"));
  });
  var func = function func(_) {
    return $$invalidate(4, m_options = false);
  };
  function modal_show_binding(value) {
    m_options = value;
    $$invalidate(4, m_options);
  }
  function categorymodal_show_binding(value) {
    m_edit = value;
    $$invalidate(2, m_edit);
  }
  function subcategorymodal_show_binding(value) {
    m_subcategory = value;
    $$invalidate(3, m_subcategory);
  }
  $$self.$$set = function ($$props) {
    if ('category' in $$props) $$invalidate(0, category = $$props.category);
  };
  $$self.$capture_state = function () {
    return {
      SubcategoryModal: SubcategoryModal,
      SubcategoryCard: SubcategoryCard,
      CategoryModal: CategoryModal,
      Button: Button,
      Modal: Modal,
      delete_category: delete_category,
      move_category_up: move_category_up,
      move_category_down: move_category_down,
      menu: menu,
      category: category,
      m_edit: m_edit,
      m_subcategory: m_subcategory,
      m_options: m_options,
      l_deleting: l_deleting,
      l_moving: l_moving,
      i: i,
      create_sub: create_sub,
      edit: edit,
      show_options: show_options,
      _delete: _delete,
      move_up: move_up,
      move_down: move_down,
      $menu: $menu
    };
  };
  $$self.$inject_state = function ($$props) {
    if ('category' in $$props) $$invalidate(0, category = $$props.category);
    if ('m_edit' in $$props) $$invalidate(2, m_edit = $$props.m_edit);
    if ('m_subcategory' in $$props) $$invalidate(3, m_subcategory = $$props.m_subcategory);
    if ('m_options' in $$props) $$invalidate(4, m_options = $$props.m_options);
    if ('l_deleting' in $$props) $$invalidate(5, l_deleting = $$props.l_deleting);
    if ('l_moving' in $$props) $$invalidate(6, l_moving = $$props.l_moving);
    if ('i' in $$props) $$invalidate(7, i = $$props.i);
  };
  if ($$props && "$$inject" in $$props) {
    $$self.$inject_state($$props.$$inject);
  }
  $$self.$$.update = function () {
    if ($$self.$$.dirty & /*$menu, category*/3) {
      var _$menu;
      $$invalidate(7, i = (_$menu = $menu) === null || _$menu === void 0 ? void 0 : _$menu.categories.findIndex(function (c) {
        return c.id == category.id;
      }));
    }
  };
  return [category, $menu, m_edit, m_subcategory, m_options, l_deleting, l_moving, i, create_sub, edit, show_options, _delete, move_up, move_down, func, modal_show_binding, categorymodal_show_binding, subcategorymodal_show_binding];
}
var CategoryCard = /*#__PURE__*/function (_SvelteComponentDev) {
  function CategoryCard(options) {
    var _this;
    _classCallCheck(this, CategoryCard);
    _this = _callSuper(this, CategoryCard, [options]);
    init(_this, options, instance$b, create_fragment$b, safe_not_equal, {
      category: 0
    });
    dispatch_dev("SvelteRegisterComponent", {
      component: _this,
      tagName: "CategoryCard",
      options: options,
      id: create_fragment$b.name
    });
    return _this;
  }
  _inherits(CategoryCard, _SvelteComponentDev);
  return _createClass(CategoryCard, [{
    key: "category",
    get: function get() {
      throw new Error("<CategoryCard>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    },
    set: function set(value) {
      throw new Error("<CategoryCard>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    }
  }]);
}(SvelteComponentDev);

var css_248z$7 = "label.svelte-1mya8io{margin:20px 0;text-align:start}label.svelte-1mya8io:not(.row){display:flex;flex-direction:column;gap:10px}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIk1lbnVNb2RhbC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEscUJBQXFCLGFBQWEsQ0FBQyxnQkFBZ0IsQ0FBQywrQkFBK0IsWUFBWSxDQUFDLHFCQUFxQixDQUFDLFFBQVEiLCJmaWxlIjoiTWVudU1vZGFsLmNzcyIsInNvdXJjZXNDb250ZW50IjpbImxhYmVsLnN2ZWx0ZS0xbXlhOGlve21hcmdpbjoyMHB4IDA7dGV4dC1hbGlnbjpzdGFydH1sYWJlbC5zdmVsdGUtMW15YThpbzpub3QoLnJvdyl7ZGlzcGxheTpmbGV4O2ZsZXgtZGlyZWN0aW9uOmNvbHVtbjtnYXA6MTBweH0iXX0= */";
styleInject(css_248z$7);

var file$a = "web/components/MenuModal.svelte";

// (1:0) {#if show}
function create_if_block$6(ctx) {
  var modal;
  var current;
  modal = new Modal({
    props: {
      show: /*show*/ctx[0],
      $$slots: {
        default: [create_default_slot$1]
      },
      $$scope: {
        ctx: ctx
      }
    },
    $$inline: true
  });
  modal.$on("close", /*close*/ctx[3]);
  var block = {
    c: function create() {
      create_component(modal.$$.fragment);
    },
    m: function mount(target, anchor) {
      mount_component(modal, target, anchor);
      current = true;
    },
    p: function update(ctx, dirty) {
      var modal_changes = {};
      if (dirty & /*show*/1) modal_changes.show = /*show*/ctx[0];
      if (dirty & /*$$scope, l_submitting, form*/2054) {
        modal_changes.$$scope = {
          dirty: dirty,
          ctx: ctx
        };
      }
      modal.$set(modal_changes);
    },
    i: function intro(local) {
      if (current) return;
      transition_in(modal.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(modal.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      destroy_component(modal, detaching);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_if_block$6.name,
    type: "if",
    source: "(1:0) {#if show}",
    ctx: ctx
  });
  return block;
}

// (2:2) <Modal {show} on:close={close}>
function create_default_slot$1(ctx) {
  var h2;
  var t1;
  var form_1;
  var label0;
  var t2;
  var input0;
  var t3;
  var label1;
  var t4;
  var input1;
  var t5;
  var label2;
  var t6;
  var input2;
  var t7;
  var label3;
  var t8;
  var input3;
  var t9;
  var button0;
  var t10_value = ( /*l_submitting*/ctx[1] ? '...' : 'Editar') + "";
  var t10;
  var t11;
  var button1;
  var t12;
  var mounted;
  var dispose;
  var block = {
    c: function create() {
      h2 = element("h2");
      h2.textContent = "Editando";
      t1 = space();
      form_1 = element("form");
      label0 = element("label");
      t2 = text("Nome:     ");
      input0 = element("input");
      t3 = space();
      label1 = element("label");
      t4 = text("Telefone: ");
      input1 = element("input");
      t5 = space();
      label2 = element("label");
      t6 = text("Whatsapp: ");
      input2 = element("input");
      t7 = space();
      label3 = element("label");
      t8 = text("Endereço: ");
      input3 = element("input");
      t9 = space();
      button0 = element("button");
      t10 = text(t10_value);
      t11 = space();
      button1 = element("button");
      t12 = text("Cancelar");
      add_location(h2, file$a, 2, 4, 49);
      input0.required = true;
      add_location(input0, file$a, 5, 24, 105);
      attr_dev(label0, "class", "svelte-1mya8io");
      add_location(label0, file$a, 5, 6, 87);
      add_location(input1, file$a, 6, 24, 184);
      attr_dev(label1, "class", "svelte-1mya8io");
      add_location(label1, file$a, 6, 6, 166);
      add_location(input2, file$a, 7, 24, 254);
      attr_dev(label2, "class", "svelte-1mya8io");
      add_location(label2, file$a, 7, 6, 236);
      add_location(input3, file$a, 8, 24, 324);
      attr_dev(label3, "class", "svelte-1mya8io");
      add_location(label3, file$a, 8, 6, 306);
      attr_dev(button0, "class", "grn");
      button0.disabled = /*l_submitting*/ctx[1];
      add_location(button0, file$a, 10, 6, 377);
      attr_dev(button1, "class", "red");
      set_style(button1, "margin-top", "10px");
      button1.disabled = /*l_submitting*/ctx[1];
      add_location(button1, file$a, 11, 6, 490);
      add_location(form_1, file$a, 4, 4, 74);
    },
    m: function mount(target, anchor) {
      insert_dev(target, h2, anchor);
      insert_dev(target, t1, anchor);
      insert_dev(target, form_1, anchor);
      append_dev(form_1, label0);
      append_dev(label0, t2);
      append_dev(label0, input0);
      set_input_value(input0, /*form*/ctx[2].name);
      append_dev(form_1, t3);
      append_dev(form_1, label1);
      append_dev(label1, t4);
      append_dev(label1, input1);
      set_input_value(input1, /*form*/ctx[2].phone);
      append_dev(form_1, t5);
      append_dev(form_1, label2);
      append_dev(label2, t6);
      append_dev(label2, input2);
      set_input_value(input2, /*form*/ctx[2].whatsapp);
      append_dev(form_1, t7);
      append_dev(form_1, label3);
      append_dev(label3, t8);
      append_dev(label3, input3);
      set_input_value(input3, /*form*/ctx[2].address);
      append_dev(form_1, t9);
      append_dev(form_1, button0);
      append_dev(button0, t10);
      append_dev(form_1, t11);
      append_dev(form_1, button1);
      append_dev(button1, t12);
      if (!mounted) {
        dispose = [listen_dev(input0, "input", /*input0_input_handler*/ctx[5]), listen_dev(input1, "input", /*input1_input_handler*/ctx[6]), listen_dev(input2, "input", /*input2_input_handler*/ctx[7]), listen_dev(input3, "input", /*input3_input_handler*/ctx[8]), listen_dev(button0, "click", /*submit*/ctx[4], false, false, false, false), listen_dev(button1, "click", /*close*/ctx[3], false, false, false, false)];
        mounted = true;
      }
    },
    p: function update(ctx, dirty) {
      if (dirty & /*form*/4 && input0.value !== /*form*/ctx[2].name) {
        set_input_value(input0, /*form*/ctx[2].name);
      }
      if (dirty & /*form*/4 && input1.value !== /*form*/ctx[2].phone) {
        set_input_value(input1, /*form*/ctx[2].phone);
      }
      if (dirty & /*form*/4 && input2.value !== /*form*/ctx[2].whatsapp) {
        set_input_value(input2, /*form*/ctx[2].whatsapp);
      }
      if (dirty & /*form*/4 && input3.value !== /*form*/ctx[2].address) {
        set_input_value(input3, /*form*/ctx[2].address);
      }
      if (dirty & /*l_submitting*/2 && t10_value !== (t10_value = ( /*l_submitting*/ctx[1] ? '...' : 'Editar') + "")) set_data_dev(t10, t10_value);
      if (dirty & /*l_submitting*/2) {
        prop_dev(button0, "disabled", /*l_submitting*/ctx[1]);
      }
      if (dirty & /*l_submitting*/2) {
        prop_dev(button1, "disabled", /*l_submitting*/ctx[1]);
      }
    },
    d: function destroy(detaching) {
      if (detaching) detach_dev(h2);
      if (detaching) detach_dev(t1);
      if (detaching) detach_dev(form_1);
      mounted = false;
      run_all(dispose);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_default_slot$1.name,
    type: "slot",
    source: "(2:2) <Modal {show} on:close={close}>",
    ctx: ctx
  });
  return block;
}
function create_fragment$a(ctx) {
  var if_block_anchor;
  var current;
  var if_block = /*show*/ctx[0] && create_if_block$6(ctx);
  var block = {
    c: function create() {
      if (if_block) if_block.c();
      if_block_anchor = empty();
    },
    l: function claim(nodes) {
      throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    },
    m: function mount(target, anchor) {
      if (if_block) if_block.m(target, anchor);
      insert_dev(target, if_block_anchor, anchor);
      current = true;
    },
    p: function update(ctx, _ref) {
      var _ref2 = _slicedToArray(_ref, 1),
        dirty = _ref2[0];
      if ( /*show*/ctx[0]) {
        if (if_block) {
          if_block.p(ctx, dirty);
          if (dirty & /*show*/1) {
            transition_in(if_block, 1);
          }
        } else {
          if_block = create_if_block$6(ctx);
          if_block.c();
          transition_in(if_block, 1);
          if_block.m(if_block_anchor.parentNode, if_block_anchor);
        }
      } else if (if_block) {
        group_outros();
        transition_out(if_block, 1, 1, function () {
          if_block = null;
        });
        check_outros();
      }
    },
    i: function intro(local) {
      if (current) return;
      transition_in(if_block);
      current = true;
    },
    o: function outro(local) {
      transition_out(if_block);
      current = false;
    },
    d: function destroy(detaching) {
      if (if_block) if_block.d(detaching);
      if (detaching) detach_dev(if_block_anchor);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_fragment$a.name,
    type: "component",
    source: "",
    ctx: ctx
  });
  return block;
}
function instance$a($$self, $$props, $$invalidate) {
  var $menu;
  validate_store(menu, 'menu');
  component_subscribe($$self, menu, function ($$value) {
    return $$invalidate(9, $menu = $$value);
  });
  var _$$props$$$slots = $$props.$$slots,
    slots = _$$props$$$slots === void 0 ? {} : _$$props$$$slots;
    $$props.$$scope;
  validate_slots('MenuModal', slots, []);
  var show = $$props.show;
  var l_submitting;
  var form;
  function close() {
    $$invalidate(0, show = false);
  }
  function submit() {
    return _submit.apply(this, arguments);
  }
  function _submit() {
    _submit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
      return _regeneratorRuntime().wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            $$invalidate(1, l_submitting = true);
            _context.next = 3;
            return edit_menu(form);
          case 3:
            close();
          case 4:
          case "end":
            return _context.stop();
        }
      }, _callee);
    }));
    return _submit.apply(this, arguments);
  }
  function mount() {
    $$invalidate(1, l_submitting = false);
    $$invalidate(2, form = {
      name: $menu.name,
      phone: $menu.phone,
      whatsapp: $menu.whatsapp,
      address: $menu.address
    });
  }
  $$self.$$.on_mount.push(function () {
    if (show === undefined && !('show' in $$props || $$self.$$.bound[$$self.$$.props['show']])) {
      console.warn("<MenuModal> was created without expected prop 'show'");
    }
  });
  var writable_props = ['show'];
  Object.keys($$props).forEach(function (key) {
    if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn("<MenuModal> was created with unknown prop '".concat(key, "'"));
  });
  function input0_input_handler() {
    form.name = this.value;
    $$invalidate(2, form);
  }
  function input1_input_handler() {
    form.phone = this.value;
    $$invalidate(2, form);
  }
  function input2_input_handler() {
    form.whatsapp = this.value;
    $$invalidate(2, form);
  }
  function input3_input_handler() {
    form.address = this.value;
    $$invalidate(2, form);
  }
  $$self.$$set = function ($$props) {
    if ('show' in $$props) $$invalidate(0, show = $$props.show);
  };
  $$self.$capture_state = function () {
    return {
      Modal: Modal,
      edit_menu: edit_menu,
      menu: menu,
      show: show,
      l_submitting: l_submitting,
      form: form,
      close: close,
      submit: submit,
      mount: mount,
      $menu: $menu
    };
  };
  $$self.$inject_state = function ($$props) {
    if ('show' in $$props) $$invalidate(0, show = $$props.show);
    if ('l_submitting' in $$props) $$invalidate(1, l_submitting = $$props.l_submitting);
    if ('form' in $$props) $$invalidate(2, form = $$props.form);
  };
  if ($$props && "$$inject" in $$props) {
    $$self.$inject_state($$props.$$inject);
  }
  $$self.$$.update = function () {
    if ($$self.$$.dirty & /*show*/1) {
      if (show) mount();
    }
  };
  return [show, l_submitting, form, close, submit, input0_input_handler, input1_input_handler, input2_input_handler, input3_input_handler];
}
var MenuModal = /*#__PURE__*/function (_SvelteComponentDev) {
  function MenuModal(options) {
    var _this;
    _classCallCheck(this, MenuModal);
    _this = _callSuper(this, MenuModal, [options]);
    init(_this, options, instance$a, create_fragment$a, safe_not_equal, {
      show: 0
    });
    dispatch_dev("SvelteRegisterComponent", {
      component: _this,
      tagName: "MenuModal",
      options: options,
      id: create_fragment$a.name
    });
    return _this;
  }
  _inherits(MenuModal, _SvelteComponentDev);
  return _createClass(MenuModal, [{
    key: "show",
    get: function get() {
      throw new Error("<MenuModal>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    },
    set: function set(value) {
      throw new Error("<MenuModal>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    }
  }]);
}(SvelteComponentDev);

var browser = {};

// can-promise has a crash in some versions of react native that dont have
// standard global objects
// https://github.com/soldair/node-qrcode/issues/157

var canPromise$1 = function canPromise() {
  return typeof Promise === 'function' && Promise.prototype && Promise.prototype.then;
};

var qrcode = {};

var utils$1 = {};

var toSJISFunction;
var CODEWORDS_COUNT = [0,
// Not used
26, 44, 70, 100, 134, 172, 196, 242, 292, 346, 404, 466, 532, 581, 655, 733, 815, 901, 991, 1085, 1156, 1258, 1364, 1474, 1588, 1706, 1828, 1921, 2051, 2185, 2323, 2465, 2611, 2761, 2876, 3034, 3196, 3362, 3532, 3706];

/**
 * Returns the QR Code size for the specified version
 *
 * @param  {Number} version QR Code version
 * @return {Number}         size of QR code
 */
utils$1.getSymbolSize = function getSymbolSize(version) {
  if (!version) throw new Error('"version" cannot be null or undefined');
  if (version < 1 || version > 40) throw new Error('"version" should be in range from 1 to 40');
  return version * 4 + 17;
};

/**
 * Returns the total number of codewords used to store data and EC information.
 *
 * @param  {Number} version QR Code version
 * @return {Number}         Data length in bits
 */
utils$1.getSymbolTotalCodewords = function getSymbolTotalCodewords(version) {
  return CODEWORDS_COUNT[version];
};

/**
 * Encode data with Bose-Chaudhuri-Hocquenghem
 *
 * @param  {Number} data Value to encode
 * @return {Number}      Encoded value
 */
utils$1.getBCHDigit = function (data) {
  var digit = 0;
  while (data !== 0) {
    digit++;
    data >>>= 1;
  }
  return digit;
};
utils$1.setToSJISFunction = function setToSJISFunction(f) {
  if (typeof f !== 'function') {
    throw new Error('"toSJISFunc" is not a valid function.');
  }
  toSJISFunction = f;
};
utils$1.isKanjiModeEnabled = function () {
  return typeof toSJISFunction !== 'undefined';
};
utils$1.toSJIS = function toSJIS(kanji) {
  return toSJISFunction(kanji);
};

var errorCorrectionLevel = {};

(function (exports) {
  exports.L = {
    bit: 1
  };
  exports.M = {
    bit: 0
  };
  exports.Q = {
    bit: 3
  };
  exports.H = {
    bit: 2
  };
  function fromString(string) {
    if (typeof string !== 'string') {
      throw new Error('Param is not a string');
    }
    var lcStr = string.toLowerCase();
    switch (lcStr) {
      case 'l':
      case 'low':
        return exports.L;
      case 'm':
      case 'medium':
        return exports.M;
      case 'q':
      case 'quartile':
        return exports.Q;
      case 'h':
      case 'high':
        return exports.H;
      default:
        throw new Error('Unknown EC Level: ' + string);
    }
  }
  exports.isValid = function isValid(level) {
    return level && typeof level.bit !== 'undefined' && level.bit >= 0 && level.bit < 4;
  };
  exports.from = function from(value, defaultValue) {
    if (exports.isValid(value)) {
      return value;
    }
    try {
      return fromString(value);
    } catch (e) {
      return defaultValue;
    }
  };
})(errorCorrectionLevel);

function BitBuffer$1() {
  this.buffer = [];
  this.length = 0;
}
BitBuffer$1.prototype = {
  get: function get(index) {
    var bufIndex = Math.floor(index / 8);
    return (this.buffer[bufIndex] >>> 7 - index % 8 & 1) === 1;
  },
  put: function put(num, length) {
    for (var i = 0; i < length; i++) {
      this.putBit((num >>> length - i - 1 & 1) === 1);
    }
  },
  getLengthInBits: function getLengthInBits() {
    return this.length;
  },
  putBit: function putBit(bit) {
    var bufIndex = Math.floor(this.length / 8);
    if (this.buffer.length <= bufIndex) {
      this.buffer.push(0);
    }
    if (bit) {
      this.buffer[bufIndex] |= 0x80 >>> this.length % 8;
    }
    this.length++;
  }
};
var bitBuffer = BitBuffer$1;

/**
 * Helper class to handle QR Code symbol modules
 *
 * @param {Number} size Symbol size
 */
function BitMatrix$1(size) {
  if (!size || size < 1) {
    throw new Error('BitMatrix size must be defined and greater than 0');
  }
  this.size = size;
  this.data = new Uint8Array(size * size);
  this.reservedBit = new Uint8Array(size * size);
}

/**
 * Set bit value at specified location
 * If reserved flag is set, this bit will be ignored during masking process
 *
 * @param {Number}  row
 * @param {Number}  col
 * @param {Boolean} value
 * @param {Boolean} reserved
 */
BitMatrix$1.prototype.set = function (row, col, value, reserved) {
  var index = row * this.size + col;
  this.data[index] = value;
  if (reserved) this.reservedBit[index] = true;
};

/**
 * Returns bit value at specified location
 *
 * @param  {Number}  row
 * @param  {Number}  col
 * @return {Boolean}
 */
BitMatrix$1.prototype.get = function (row, col) {
  return this.data[row * this.size + col];
};

/**
 * Applies xor operator at specified location
 * (used during masking process)
 *
 * @param {Number}  row
 * @param {Number}  col
 * @param {Boolean} value
 */
BitMatrix$1.prototype.xor = function (row, col, value) {
  this.data[row * this.size + col] ^= value;
};

/**
 * Check if bit at specified location is reserved
 *
 * @param {Number}   row
 * @param {Number}   col
 * @return {Boolean}
 */
BitMatrix$1.prototype.isReserved = function (row, col) {
  return this.reservedBit[row * this.size + col];
};
var bitMatrix = BitMatrix$1;

var alignmentPattern = {};

/**
 * Alignment pattern are fixed reference pattern in defined positions
 * in a matrix symbology, which enables the decode software to re-synchronise
 * the coordinate mapping of the image modules in the event of moderate amounts
 * of distortion of the image.
 *
 * Alignment patterns are present only in QR Code symbols of version 2 or larger
 * and their number depends on the symbol version.
 */
(function (exports) {
  var getSymbolSize = utils$1.getSymbolSize;

  /**
   * Calculate the row/column coordinates of the center module of each alignment pattern
   * for the specified QR Code version.
   *
   * The alignment patterns are positioned symmetrically on either side of the diagonal
   * running from the top left corner of the symbol to the bottom right corner.
   *
   * Since positions are simmetrical only half of the coordinates are returned.
   * Each item of the array will represent in turn the x and y coordinate.
   * @see {@link getPositions}
   *
   * @param  {Number} version QR Code version
   * @return {Array}          Array of coordinate
   */
  exports.getRowColCoords = function getRowColCoords(version) {
    if (version === 1) return [];
    var posCount = Math.floor(version / 7) + 2;
    var size = getSymbolSize(version);
    var intervals = size === 145 ? 26 : Math.ceil((size - 13) / (2 * posCount - 2)) * 2;
    var positions = [size - 7]; // Last coord is always (size - 7)

    for (var i = 1; i < posCount - 1; i++) {
      positions[i] = positions[i - 1] - intervals;
    }
    positions.push(6); // First coord is always 6

    return positions.reverse();
  };

  /**
   * Returns an array containing the positions of each alignment pattern.
   * Each array's element represent the center point of the pattern as (x, y) coordinates
   *
   * Coordinates are calculated expanding the row/column coordinates returned by {@link getRowColCoords}
   * and filtering out the items that overlaps with finder pattern
   *
   * @example
   * For a Version 7 symbol {@link getRowColCoords} returns values 6, 22 and 38.
   * The alignment patterns, therefore, are to be centered on (row, column)
   * positions (6,22), (22,6), (22,22), (22,38), (38,22), (38,38).
   * Note that the coordinates (6,6), (6,38), (38,6) are occupied by finder patterns
   * and are not therefore used for alignment patterns.
   *
   * let pos = getPositions(7)
   * // [[6,22], [22,6], [22,22], [22,38], [38,22], [38,38]]
   *
   * @param  {Number} version QR Code version
   * @return {Array}          Array of coordinates
   */
  exports.getPositions = function getPositions(version) {
    var coords = [];
    var pos = exports.getRowColCoords(version);
    var posLength = pos.length;
    for (var i = 0; i < posLength; i++) {
      for (var j = 0; j < posLength; j++) {
        // Skip if position is occupied by finder patterns
        if (i === 0 && j === 0 ||
        // top-left
        i === 0 && j === posLength - 1 ||
        // bottom-left
        i === posLength - 1 && j === 0) {
          // top-right
          continue;
        }
        coords.push([pos[i], pos[j]]);
      }
    }
    return coords;
  };
})(alignmentPattern);

var finderPattern = {};

var getSymbolSize = utils$1.getSymbolSize;
var FINDER_PATTERN_SIZE = 7;

/**
 * Returns an array containing the positions of each finder pattern.
 * Each array's element represent the top-left point of the pattern as (x, y) coordinates
 *
 * @param  {Number} version QR Code version
 * @return {Array}          Array of coordinates
 */
finderPattern.getPositions = function getPositions(version) {
  var size = getSymbolSize(version);
  return [
  // top-left
  [0, 0],
  // top-right
  [size - FINDER_PATTERN_SIZE, 0],
  // bottom-left
  [0, size - FINDER_PATTERN_SIZE]];
};

var maskPattern = {};

/**
 * Data mask pattern reference
 * @type {Object}
 */
(function (exports) {
  exports.Patterns = {
    PATTERN000: 0,
    PATTERN001: 1,
    PATTERN010: 2,
    PATTERN011: 3,
    PATTERN100: 4,
    PATTERN101: 5,
    PATTERN110: 6,
    PATTERN111: 7
  };

  /**
   * Weighted penalty scores for the undesirable features
   * @type {Object}
   */
  var PenaltyScores = {
    N1: 3,
    N2: 3,
    N3: 40,
    N4: 10
  };

  /**
   * Check if mask pattern value is valid
   *
   * @param  {Number}  mask    Mask pattern
   * @return {Boolean}         true if valid, false otherwise
   */
  exports.isValid = function isValid(mask) {
    return mask != null && mask !== '' && !isNaN(mask) && mask >= 0 && mask <= 7;
  };

  /**
   * Returns mask pattern from a value.
   * If value is not valid, returns undefined
   *
   * @param  {Number|String} value        Mask pattern value
   * @return {Number}                     Valid mask pattern or undefined
   */
  exports.from = function from(value) {
    return exports.isValid(value) ? parseInt(value, 10) : undefined;
  };

  /**
  * Find adjacent modules in row/column with the same color
  * and assign a penalty value.
  *
  * Points: N1 + i
  * i is the amount by which the number of adjacent modules of the same color exceeds 5
  */
  exports.getPenaltyN1 = function getPenaltyN1(data) {
    var size = data.size;
    var points = 0;
    var sameCountCol = 0;
    var sameCountRow = 0;
    var lastCol = null;
    var lastRow = null;
    for (var row = 0; row < size; row++) {
      sameCountCol = sameCountRow = 0;
      lastCol = lastRow = null;
      for (var col = 0; col < size; col++) {
        var module = data.get(row, col);
        if (module === lastCol) {
          sameCountCol++;
        } else {
          if (sameCountCol >= 5) points += PenaltyScores.N1 + (sameCountCol - 5);
          lastCol = module;
          sameCountCol = 1;
        }
        module = data.get(col, row);
        if (module === lastRow) {
          sameCountRow++;
        } else {
          if (sameCountRow >= 5) points += PenaltyScores.N1 + (sameCountRow - 5);
          lastRow = module;
          sameCountRow = 1;
        }
      }
      if (sameCountCol >= 5) points += PenaltyScores.N1 + (sameCountCol - 5);
      if (sameCountRow >= 5) points += PenaltyScores.N1 + (sameCountRow - 5);
    }
    return points;
  };

  /**
   * Find 2x2 blocks with the same color and assign a penalty value
   *
   * Points: N2 * (m - 1) * (n - 1)
   */
  exports.getPenaltyN2 = function getPenaltyN2(data) {
    var size = data.size;
    var points = 0;
    for (var row = 0; row < size - 1; row++) {
      for (var col = 0; col < size - 1; col++) {
        var last = data.get(row, col) + data.get(row, col + 1) + data.get(row + 1, col) + data.get(row + 1, col + 1);
        if (last === 4 || last === 0) points++;
      }
    }
    return points * PenaltyScores.N2;
  };

  /**
   * Find 1:1:3:1:1 ratio (dark:light:dark:light:dark) pattern in row/column,
   * preceded or followed by light area 4 modules wide
   *
   * Points: N3 * number of pattern found
   */
  exports.getPenaltyN3 = function getPenaltyN3(data) {
    var size = data.size;
    var points = 0;
    var bitsCol = 0;
    var bitsRow = 0;
    for (var row = 0; row < size; row++) {
      bitsCol = bitsRow = 0;
      for (var col = 0; col < size; col++) {
        bitsCol = bitsCol << 1 & 0x7FF | data.get(row, col);
        if (col >= 10 && (bitsCol === 0x5D0 || bitsCol === 0x05D)) points++;
        bitsRow = bitsRow << 1 & 0x7FF | data.get(col, row);
        if (col >= 10 && (bitsRow === 0x5D0 || bitsRow === 0x05D)) points++;
      }
    }
    return points * PenaltyScores.N3;
  };

  /**
   * Calculate proportion of dark modules in entire symbol
   *
   * Points: N4 * k
   *
   * k is the rating of the deviation of the proportion of dark modules
   * in the symbol from 50% in steps of 5%
   */
  exports.getPenaltyN4 = function getPenaltyN4(data) {
    var darkCount = 0;
    var modulesCount = data.data.length;
    for (var i = 0; i < modulesCount; i++) darkCount += data.data[i];
    var k = Math.abs(Math.ceil(darkCount * 100 / modulesCount / 5) - 10);
    return k * PenaltyScores.N4;
  };

  /**
   * Return mask value at given position
   *
   * @param  {Number} maskPattern Pattern reference value
   * @param  {Number} i           Row
   * @param  {Number} j           Column
   * @return {Boolean}            Mask value
   */
  function getMaskAt(maskPattern, i, j) {
    switch (maskPattern) {
      case exports.Patterns.PATTERN000:
        return (i + j) % 2 === 0;
      case exports.Patterns.PATTERN001:
        return i % 2 === 0;
      case exports.Patterns.PATTERN010:
        return j % 3 === 0;
      case exports.Patterns.PATTERN011:
        return (i + j) % 3 === 0;
      case exports.Patterns.PATTERN100:
        return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 === 0;
      case exports.Patterns.PATTERN101:
        return i * j % 2 + i * j % 3 === 0;
      case exports.Patterns.PATTERN110:
        return (i * j % 2 + i * j % 3) % 2 === 0;
      case exports.Patterns.PATTERN111:
        return (i * j % 3 + (i + j) % 2) % 2 === 0;
      default:
        throw new Error('bad maskPattern:' + maskPattern);
    }
  }

  /**
   * Apply a mask pattern to a BitMatrix
   *
   * @param  {Number}    pattern Pattern reference number
   * @param  {BitMatrix} data    BitMatrix data
   */
  exports.applyMask = function applyMask(pattern, data) {
    var size = data.size;
    for (var col = 0; col < size; col++) {
      for (var row = 0; row < size; row++) {
        if (data.isReserved(row, col)) continue;
        data.xor(row, col, getMaskAt(pattern, row, col));
      }
    }
  };

  /**
   * Returns the best mask pattern for data
   *
   * @param  {BitMatrix} data
   * @return {Number} Mask pattern reference number
   */
  exports.getBestMask = function getBestMask(data, setupFormatFunc) {
    var numPatterns = Object.keys(exports.Patterns).length;
    var bestPattern = 0;
    var lowerPenalty = Infinity;
    for (var p = 0; p < numPatterns; p++) {
      setupFormatFunc(p);
      exports.applyMask(p, data);

      // Calculate penalty
      var penalty = exports.getPenaltyN1(data) + exports.getPenaltyN2(data) + exports.getPenaltyN3(data) + exports.getPenaltyN4(data);

      // Undo previously applied mask
      exports.applyMask(p, data);
      if (penalty < lowerPenalty) {
        lowerPenalty = penalty;
        bestPattern = p;
      }
    }
    return bestPattern;
  };
})(maskPattern);

var errorCorrectionCode = {};

var ECLevel$1 = errorCorrectionLevel;
var EC_BLOCKS_TABLE = [
// L  M  Q  H
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 4, 1, 2, 4, 4, 2, 4, 4, 4, 2, 4, 6, 5, 2, 4, 6, 6, 2, 5, 8, 8, 4, 5, 8, 8, 4, 5, 8, 11, 4, 8, 10, 11, 4, 9, 12, 16, 4, 9, 16, 16, 6, 10, 12, 18, 6, 10, 17, 16, 6, 11, 16, 19, 6, 13, 18, 21, 7, 14, 21, 25, 8, 16, 20, 25, 8, 17, 23, 25, 9, 17, 23, 34, 9, 18, 25, 30, 10, 20, 27, 32, 12, 21, 29, 35, 12, 23, 34, 37, 12, 25, 34, 40, 13, 26, 35, 42, 14, 28, 38, 45, 15, 29, 40, 48, 16, 31, 43, 51, 17, 33, 45, 54, 18, 35, 48, 57, 19, 37, 51, 60, 19, 38, 53, 63, 20, 40, 56, 66, 21, 43, 59, 70, 22, 45, 62, 74, 24, 47, 65, 77, 25, 49, 68, 81];
var EC_CODEWORDS_TABLE = [
// L  M  Q  H
7, 10, 13, 17, 10, 16, 22, 28, 15, 26, 36, 44, 20, 36, 52, 64, 26, 48, 72, 88, 36, 64, 96, 112, 40, 72, 108, 130, 48, 88, 132, 156, 60, 110, 160, 192, 72, 130, 192, 224, 80, 150, 224, 264, 96, 176, 260, 308, 104, 198, 288, 352, 120, 216, 320, 384, 132, 240, 360, 432, 144, 280, 408, 480, 168, 308, 448, 532, 180, 338, 504, 588, 196, 364, 546, 650, 224, 416, 600, 700, 224, 442, 644, 750, 252, 476, 690, 816, 270, 504, 750, 900, 300, 560, 810, 960, 312, 588, 870, 1050, 336, 644, 952, 1110, 360, 700, 1020, 1200, 390, 728, 1050, 1260, 420, 784, 1140, 1350, 450, 812, 1200, 1440, 480, 868, 1290, 1530, 510, 924, 1350, 1620, 540, 980, 1440, 1710, 570, 1036, 1530, 1800, 570, 1064, 1590, 1890, 600, 1120, 1680, 1980, 630, 1204, 1770, 2100, 660, 1260, 1860, 2220, 720, 1316, 1950, 2310, 750, 1372, 2040, 2430];

/**
 * Returns the number of error correction block that the QR Code should contain
 * for the specified version and error correction level.
 *
 * @param  {Number} version              QR Code version
 * @param  {Number} errorCorrectionLevel Error correction level
 * @return {Number}                      Number of error correction blocks
 */
errorCorrectionCode.getBlocksCount = function getBlocksCount(version, errorCorrectionLevel) {
  switch (errorCorrectionLevel) {
    case ECLevel$1.L:
      return EC_BLOCKS_TABLE[(version - 1) * 4 + 0];
    case ECLevel$1.M:
      return EC_BLOCKS_TABLE[(version - 1) * 4 + 1];
    case ECLevel$1.Q:
      return EC_BLOCKS_TABLE[(version - 1) * 4 + 2];
    case ECLevel$1.H:
      return EC_BLOCKS_TABLE[(version - 1) * 4 + 3];
    default:
      return undefined;
  }
};

/**
 * Returns the number of error correction codewords to use for the specified
 * version and error correction level.
 *
 * @param  {Number} version              QR Code version
 * @param  {Number} errorCorrectionLevel Error correction level
 * @return {Number}                      Number of error correction codewords
 */
errorCorrectionCode.getTotalCodewordsCount = function getTotalCodewordsCount(version, errorCorrectionLevel) {
  switch (errorCorrectionLevel) {
    case ECLevel$1.L:
      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 0];
    case ECLevel$1.M:
      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 1];
    case ECLevel$1.Q:
      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 2];
    case ECLevel$1.H:
      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 3];
    default:
      return undefined;
  }
};

var polynomial = {};

var galoisField = {};

var EXP_TABLE = new Uint8Array(512);
var LOG_TABLE = new Uint8Array(256)
/**
 * Precompute the log and anti-log tables for faster computation later
 *
 * For each possible value in the galois field 2^8, we will pre-compute
 * the logarithm and anti-logarithm (exponential) of this value
 *
 * ref {@link https://en.wikiversity.org/wiki/Reed%E2%80%93Solomon_codes_for_coders#Introduction_to_mathematical_fields}
 */;
(function initTables() {
  var x = 1;
  for (var i = 0; i < 255; i++) {
    EXP_TABLE[i] = x;
    LOG_TABLE[x] = i;
    x <<= 1; // multiply by 2

    // The QR code specification says to use byte-wise modulo 100011101 arithmetic.
    // This means that when a number is 256 or larger, it should be XORed with 0x11D.
    if (x & 0x100) {
      // similar to x >= 256, but a lot faster (because 0x100 == 256)
      x ^= 0x11D;
    }
  }

  // Optimization: double the size of the anti-log table so that we don't need to mod 255 to
  // stay inside the bounds (because we will mainly use this table for the multiplication of
  // two GF numbers, no more).
  // @see {@link mul}
  for (var _i = 255; _i < 512; _i++) {
    EXP_TABLE[_i] = EXP_TABLE[_i - 255];
  }
})();

/**
 * Returns log value of n inside Galois Field
 *
 * @param  {Number} n
 * @return {Number}
 */
galoisField.log = function log(n) {
  if (n < 1) throw new Error('log(' + n + ')');
  return LOG_TABLE[n];
};

/**
 * Returns anti-log value of n inside Galois Field
 *
 * @param  {Number} n
 * @return {Number}
 */
galoisField.exp = function exp(n) {
  return EXP_TABLE[n];
};

/**
 * Multiplies two number inside Galois Field
 *
 * @param  {Number} x
 * @param  {Number} y
 * @return {Number}
 */
galoisField.mul = function mul(x, y) {
  if (x === 0 || y === 0) return 0;

  // should be EXP_TABLE[(LOG_TABLE[x] + LOG_TABLE[y]) % 255] if EXP_TABLE wasn't oversized
  // @see {@link initTables}
  return EXP_TABLE[LOG_TABLE[x] + LOG_TABLE[y]];
};

(function (exports) {
  var GF = galoisField;

  /**
   * Multiplies two polynomials inside Galois Field
   *
   * @param  {Uint8Array} p1 Polynomial
   * @param  {Uint8Array} p2 Polynomial
   * @return {Uint8Array}    Product of p1 and p2
   */
  exports.mul = function mul(p1, p2) {
    var coeff = new Uint8Array(p1.length + p2.length - 1);
    for (var i = 0; i < p1.length; i++) {
      for (var j = 0; j < p2.length; j++) {
        coeff[i + j] ^= GF.mul(p1[i], p2[j]);
      }
    }
    return coeff;
  };

  /**
   * Calculate the remainder of polynomials division
   *
   * @param  {Uint8Array} divident Polynomial
   * @param  {Uint8Array} divisor  Polynomial
   * @return {Uint8Array}          Remainder
   */
  exports.mod = function mod(divident, divisor) {
    var result = new Uint8Array(divident);
    while (result.length - divisor.length >= 0) {
      var coeff = result[0];
      for (var i = 0; i < divisor.length; i++) {
        result[i] ^= GF.mul(divisor[i], coeff);
      }

      // remove all zeros from buffer head
      var offset = 0;
      while (offset < result.length && result[offset] === 0) offset++;
      result = result.slice(offset);
    }
    return result;
  };

  /**
   * Generate an irreducible generator polynomial of specified degree
   * (used by Reed-Solomon encoder)
   *
   * @param  {Number} degree Degree of the generator polynomial
   * @return {Uint8Array}    Buffer containing polynomial coefficients
   */
  exports.generateECPolynomial = function generateECPolynomial(degree) {
    var poly = new Uint8Array([1]);
    for (var i = 0; i < degree; i++) {
      poly = exports.mul(poly, new Uint8Array([1, GF.exp(i)]));
    }
    return poly;
  };
})(polynomial);

var Polynomial = polynomial;
function ReedSolomonEncoder$1(degree) {
  this.genPoly = undefined;
  this.degree = degree;
  if (this.degree) this.initialize(this.degree);
}

/**
 * Initialize the encoder.
 * The input param should correspond to the number of error correction codewords.
 *
 * @param  {Number} degree
 */
ReedSolomonEncoder$1.prototype.initialize = function initialize(degree) {
  // create an irreducible generator polynomial
  this.degree = degree;
  this.genPoly = Polynomial.generateECPolynomial(this.degree);
};

/**
 * Encodes a chunk of data
 *
 * @param  {Uint8Array} data Buffer containing input data
 * @return {Uint8Array}      Buffer containing encoded data
 */
ReedSolomonEncoder$1.prototype.encode = function encode(data) {
  if (!this.genPoly) {
    throw new Error('Encoder not initialized');
  }

  // Calculate EC for this data block
  // extends data size to data+genPoly size
  var paddedData = new Uint8Array(data.length + this.degree);
  paddedData.set(data);

  // The error correction codewords are the remainder after dividing the data codewords
  // by a generator polynomial
  var remainder = Polynomial.mod(paddedData, this.genPoly);

  // return EC data blocks (last n byte, where n is the degree of genPoly)
  // If coefficients number in remainder are less than genPoly degree,
  // pad with 0s to the left to reach the needed number of coefficients
  var start = this.degree - remainder.length;
  if (start > 0) {
    var buff = new Uint8Array(this.degree);
    buff.set(remainder, start);
    return buff;
  }
  return remainder;
};
var reedSolomonEncoder = ReedSolomonEncoder$1;

var version = {};

var mode = {};

var versionCheck = {};

/**
 * Check if QR Code version is valid
 *
 * @param  {Number}  version QR Code version
 * @return {Boolean}         true if valid version, false otherwise
 */
versionCheck.isValid = function isValid(version) {
  return !isNaN(version) && version >= 1 && version <= 40;
};

var regex = {};

var numeric = '[0-9]+';
var alphanumeric = '[A-Z $%*+\\-./:]+';
var kanji = '(?:[u3000-u303F]|[u3040-u309F]|[u30A0-u30FF]|' + '[uFF00-uFFEF]|[u4E00-u9FAF]|[u2605-u2606]|[u2190-u2195]|u203B|' + '[u2010u2015u2018u2019u2025u2026u201Cu201Du2225u2260]|' + '[u0391-u0451]|[u00A7u00A8u00B1u00B4u00D7u00F7])+';
kanji = kanji.replace(/u/g, "\\u");
var byte = '(?:(?![A-Z0-9 $%*+\\-./:]|' + kanji + ')(?:.|[\r\n]))+';
regex.KANJI = new RegExp(kanji, 'g');
regex.BYTE_KANJI = new RegExp('[^A-Z0-9 $%*+\\-./:]+', 'g');
regex.BYTE = new RegExp(byte, 'g');
regex.NUMERIC = new RegExp(numeric, 'g');
regex.ALPHANUMERIC = new RegExp(alphanumeric, 'g');
var TEST_KANJI = new RegExp('^' + kanji + '$');
var TEST_NUMERIC = new RegExp('^' + numeric + '$');
var TEST_ALPHANUMERIC = new RegExp('^[A-Z0-9 $%*+\\-./:]+$');
regex.testKanji = function testKanji(str) {
  return TEST_KANJI.test(str);
};
regex.testNumeric = function testNumeric(str) {
  return TEST_NUMERIC.test(str);
};
regex.testAlphanumeric = function testAlphanumeric(str) {
  return TEST_ALPHANUMERIC.test(str);
};

(function (exports) {
  var VersionCheck = versionCheck;
  var Regex = regex;

  /**
   * Numeric mode encodes data from the decimal digit set (0 - 9)
   * (byte values 30HEX to 39HEX).
   * Normally, 3 data characters are represented by 10 bits.
   *
   * @type {Object}
   */
  exports.NUMERIC = {
    id: 'Numeric',
    bit: 1 << 0,
    ccBits: [10, 12, 14]
  };

  /**
   * Alphanumeric mode encodes data from a set of 45 characters,
   * i.e. 10 numeric digits (0 - 9),
   *      26 alphabetic characters (A - Z),
   *   and 9 symbols (SP, $, %, *, +, -, ., /, :).
   * Normally, two input characters are represented by 11 bits.
   *
   * @type {Object}
   */
  exports.ALPHANUMERIC = {
    id: 'Alphanumeric',
    bit: 1 << 1,
    ccBits: [9, 11, 13]
  };

  /**
   * In byte mode, data is encoded at 8 bits per character.
   *
   * @type {Object}
   */
  exports.BYTE = {
    id: 'Byte',
    bit: 1 << 2,
    ccBits: [8, 16, 16]
  };

  /**
   * The Kanji mode efficiently encodes Kanji characters in accordance with
   * the Shift JIS system based on JIS X 0208.
   * The Shift JIS values are shifted from the JIS X 0208 values.
   * JIS X 0208 gives details of the shift coded representation.
   * Each two-byte character value is compacted to a 13-bit binary codeword.
   *
   * @type {Object}
   */
  exports.KANJI = {
    id: 'Kanji',
    bit: 1 << 3,
    ccBits: [8, 10, 12]
  };

  /**
   * Mixed mode will contain a sequences of data in a combination of any of
   * the modes described above
   *
   * @type {Object}
   */
  exports.MIXED = {
    bit: -1
  };

  /**
   * Returns the number of bits needed to store the data length
   * according to QR Code specifications.
   *
   * @param  {Mode}   mode    Data mode
   * @param  {Number} version QR Code version
   * @return {Number}         Number of bits
   */
  exports.getCharCountIndicator = function getCharCountIndicator(mode, version) {
    if (!mode.ccBits) throw new Error('Invalid mode: ' + mode);
    if (!VersionCheck.isValid(version)) {
      throw new Error('Invalid version: ' + version);
    }
    if (version >= 1 && version < 10) return mode.ccBits[0];else if (version < 27) return mode.ccBits[1];
    return mode.ccBits[2];
  };

  /**
   * Returns the most efficient mode to store the specified data
   *
   * @param  {String} dataStr Input data string
   * @return {Mode}           Best mode
   */
  exports.getBestModeForData = function getBestModeForData(dataStr) {
    if (Regex.testNumeric(dataStr)) return exports.NUMERIC;else if (Regex.testAlphanumeric(dataStr)) return exports.ALPHANUMERIC;else if (Regex.testKanji(dataStr)) return exports.KANJI;else return exports.BYTE;
  };

  /**
   * Return mode name as string
   *
   * @param {Mode} mode Mode object
   * @returns {String}  Mode name
   */
  exports.toString = function toString(mode) {
    if (mode && mode.id) return mode.id;
    throw new Error('Invalid mode');
  };

  /**
   * Check if input param is a valid mode object
   *
   * @param   {Mode}    mode Mode object
   * @returns {Boolean} True if valid mode, false otherwise
   */
  exports.isValid = function isValid(mode) {
    return mode && mode.bit && mode.ccBits;
  };

  /**
   * Get mode object from its name
   *
   * @param   {String} string Mode name
   * @returns {Mode}          Mode object
   */
  function fromString(string) {
    if (typeof string !== 'string') {
      throw new Error('Param is not a string');
    }
    var lcStr = string.toLowerCase();
    switch (lcStr) {
      case 'numeric':
        return exports.NUMERIC;
      case 'alphanumeric':
        return exports.ALPHANUMERIC;
      case 'kanji':
        return exports.KANJI;
      case 'byte':
        return exports.BYTE;
      default:
        throw new Error('Unknown mode: ' + string);
    }
  }

  /**
   * Returns mode from a value.
   * If value is not a valid mode, returns defaultValue
   *
   * @param  {Mode|String} value        Encoding mode
   * @param  {Mode}        defaultValue Fallback value
   * @return {Mode}                     Encoding mode
   */
  exports.from = function from(value, defaultValue) {
    if (exports.isValid(value)) {
      return value;
    }
    try {
      return fromString(value);
    } catch (e) {
      return defaultValue;
    }
  };
})(mode);

(function (exports) {
  var Utils = utils$1;
  var ECCode = errorCorrectionCode;
  var ECLevel = errorCorrectionLevel;
  var Mode = mode;
  var VersionCheck = versionCheck;

  // Generator polynomial used to encode version information
  var G18 = 1 << 12 | 1 << 11 | 1 << 10 | 1 << 9 | 1 << 8 | 1 << 5 | 1 << 2 | 1 << 0;
  var G18_BCH = Utils.getBCHDigit(G18);
  function getBestVersionForDataLength(mode, length, errorCorrectionLevel) {
    for (var currentVersion = 1; currentVersion <= 40; currentVersion++) {
      if (length <= exports.getCapacity(currentVersion, errorCorrectionLevel, mode)) {
        return currentVersion;
      }
    }
    return undefined;
  }
  function getReservedBitsCount(mode, version) {
    // Character count indicator + mode indicator bits
    return Mode.getCharCountIndicator(mode, version) + 4;
  }
  function getTotalBitsFromDataArray(segments, version) {
    var totalBits = 0;
    segments.forEach(function (data) {
      var reservedBits = getReservedBitsCount(data.mode, version);
      totalBits += reservedBits + data.getBitsLength();
    });
    return totalBits;
  }
  function getBestVersionForMixedData(segments, errorCorrectionLevel) {
    for (var currentVersion = 1; currentVersion <= 40; currentVersion++) {
      var length = getTotalBitsFromDataArray(segments, currentVersion);
      if (length <= exports.getCapacity(currentVersion, errorCorrectionLevel, Mode.MIXED)) {
        return currentVersion;
      }
    }
    return undefined;
  }

  /**
   * Returns version number from a value.
   * If value is not a valid version, returns defaultValue
   *
   * @param  {Number|String} value        QR Code version
   * @param  {Number}        defaultValue Fallback value
   * @return {Number}                     QR Code version number
   */
  exports.from = function from(value, defaultValue) {
    if (VersionCheck.isValid(value)) {
      return parseInt(value, 10);
    }
    return defaultValue;
  };

  /**
   * Returns how much data can be stored with the specified QR code version
   * and error correction level
   *
   * @param  {Number} version              QR Code version (1-40)
   * @param  {Number} errorCorrectionLevel Error correction level
   * @param  {Mode}   mode                 Data mode
   * @return {Number}                      Quantity of storable data
   */
  exports.getCapacity = function getCapacity(version, errorCorrectionLevel, mode) {
    if (!VersionCheck.isValid(version)) {
      throw new Error('Invalid QR Code version');
    }

    // Use Byte mode as default
    if (typeof mode === 'undefined') mode = Mode.BYTE;

    // Total codewords for this QR code version (Data + Error correction)
    var totalCodewords = Utils.getSymbolTotalCodewords(version);

    // Total number of error correction codewords
    var ecTotalCodewords = ECCode.getTotalCodewordsCount(version, errorCorrectionLevel);

    // Total number of data codewords
    var dataTotalCodewordsBits = (totalCodewords - ecTotalCodewords) * 8;
    if (mode === Mode.MIXED) return dataTotalCodewordsBits;
    var usableBits = dataTotalCodewordsBits - getReservedBitsCount(mode, version);

    // Return max number of storable codewords
    switch (mode) {
      case Mode.NUMERIC:
        return Math.floor(usableBits / 10 * 3);
      case Mode.ALPHANUMERIC:
        return Math.floor(usableBits / 11 * 2);
      case Mode.KANJI:
        return Math.floor(usableBits / 13);
      case Mode.BYTE:
      default:
        return Math.floor(usableBits / 8);
    }
  };

  /**
   * Returns the minimum version needed to contain the amount of data
   *
   * @param  {Segment} data                    Segment of data
   * @param  {Number} [errorCorrectionLevel=H] Error correction level
   * @param  {Mode} mode                       Data mode
   * @return {Number}                          QR Code version
   */
  exports.getBestVersionForData = function getBestVersionForData(data, errorCorrectionLevel) {
    var seg;
    var ecl = ECLevel.from(errorCorrectionLevel, ECLevel.M);
    if (Array.isArray(data)) {
      if (data.length > 1) {
        return getBestVersionForMixedData(data, ecl);
      }
      if (data.length === 0) {
        return 1;
      }
      seg = data[0];
    } else {
      seg = data;
    }
    return getBestVersionForDataLength(seg.mode, seg.getLength(), ecl);
  };

  /**
   * Returns version information with relative error correction bits
   *
   * The version information is included in QR Code symbols of version 7 or larger.
   * It consists of an 18-bit sequence containing 6 data bits,
   * with 12 error correction bits calculated using the (18, 6) Golay code.
   *
   * @param  {Number} version QR Code version
   * @return {Number}         Encoded version info bits
   */
  exports.getEncodedBits = function getEncodedBits(version) {
    if (!VersionCheck.isValid(version) || version < 7) {
      throw new Error('Invalid QR Code version');
    }
    var d = version << 12;
    while (Utils.getBCHDigit(d) - G18_BCH >= 0) {
      d ^= G18 << Utils.getBCHDigit(d) - G18_BCH;
    }
    return version << 12 | d;
  };
})(version);

var formatInfo = {};

var Utils$3 = utils$1;
var G15 = 1 << 10 | 1 << 8 | 1 << 5 | 1 << 4 | 1 << 2 | 1 << 1 | 1 << 0;
var G15_MASK = 1 << 14 | 1 << 12 | 1 << 10 | 1 << 4 | 1 << 1;
var G15_BCH = Utils$3.getBCHDigit(G15);

/**
 * Returns format information with relative error correction bits
 *
 * The format information is a 15-bit sequence containing 5 data bits,
 * with 10 error correction bits calculated using the (15, 5) BCH code.
 *
 * @param  {Number} errorCorrectionLevel Error correction level
 * @param  {Number} mask                 Mask pattern
 * @return {Number}                      Encoded format information bits
 */
formatInfo.getEncodedBits = function getEncodedBits(errorCorrectionLevel, mask) {
  var data = errorCorrectionLevel.bit << 3 | mask;
  var d = data << 10;
  while (Utils$3.getBCHDigit(d) - G15_BCH >= 0) {
    d ^= G15 << Utils$3.getBCHDigit(d) - G15_BCH;
  }

  // xor final data with mask pattern in order to ensure that
  // no combination of Error Correction Level and data mask pattern
  // will result in an all-zero data string
  return (data << 10 | d) ^ G15_MASK;
};

var segments = {};

var Mode$4 = mode;
function NumericData(data) {
  this.mode = Mode$4.NUMERIC;
  this.data = data.toString();
}
NumericData.getBitsLength = function getBitsLength(length) {
  return 10 * Math.floor(length / 3) + (length % 3 ? length % 3 * 3 + 1 : 0);
};
NumericData.prototype.getLength = function getLength() {
  return this.data.length;
};
NumericData.prototype.getBitsLength = function getBitsLength() {
  return NumericData.getBitsLength(this.data.length);
};
NumericData.prototype.write = function write(bitBuffer) {
  var i, group, value;

  // The input data string is divided into groups of three digits,
  // and each group is converted to its 10-bit binary equivalent.
  for (i = 0; i + 3 <= this.data.length; i += 3) {
    group = this.data.substr(i, 3);
    value = parseInt(group, 10);
    bitBuffer.put(value, 10);
  }

  // If the number of input digits is not an exact multiple of three,
  // the final one or two digits are converted to 4 or 7 bits respectively.
  var remainingNum = this.data.length - i;
  if (remainingNum > 0) {
    group = this.data.substr(i);
    value = parseInt(group, 10);
    bitBuffer.put(value, remainingNum * 3 + 1);
  }
};
var numericData = NumericData;

var Mode$3 = mode;

/**
 * Array of characters available in alphanumeric mode
 *
 * As per QR Code specification, to each character
 * is assigned a value from 0 to 44 which in this case coincides
 * with the array index
 *
 * @type {Array}
 */
var ALPHA_NUM_CHARS = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', ' ', '$', '%', '*', '+', '-', '.', '/', ':'];
function AlphanumericData(data) {
  this.mode = Mode$3.ALPHANUMERIC;
  this.data = data;
}
AlphanumericData.getBitsLength = function getBitsLength(length) {
  return 11 * Math.floor(length / 2) + 6 * (length % 2);
};
AlphanumericData.prototype.getLength = function getLength() {
  return this.data.length;
};
AlphanumericData.prototype.getBitsLength = function getBitsLength() {
  return AlphanumericData.getBitsLength(this.data.length);
};
AlphanumericData.prototype.write = function write(bitBuffer) {
  var i;

  // Input data characters are divided into groups of two characters
  // and encoded as 11-bit binary codes.
  for (i = 0; i + 2 <= this.data.length; i += 2) {
    // The character value of the first character is multiplied by 45
    var value = ALPHA_NUM_CHARS.indexOf(this.data[i]) * 45;

    // The character value of the second digit is added to the product
    value += ALPHA_NUM_CHARS.indexOf(this.data[i + 1]);

    // The sum is then stored as 11-bit binary number
    bitBuffer.put(value, 11);
  }

  // If the number of input data characters is not a multiple of two,
  // the character value of the final character is encoded as a 6-bit binary number.
  if (this.data.length % 2) {
    bitBuffer.put(ALPHA_NUM_CHARS.indexOf(this.data[i]), 6);
  }
};
var alphanumericData = AlphanumericData;

var encodeUtf8$1 = function encodeUtf8(input) {
  var result = [];
  var size = input.length;
  for (var index = 0; index < size; index++) {
    var point = input.charCodeAt(index);
    if (point >= 0xD800 && point <= 0xDBFF && size > index + 1) {
      var second = input.charCodeAt(index + 1);
      if (second >= 0xDC00 && second <= 0xDFFF) {
        // https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae
        point = (point - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;
        index += 1;
      }
    }

    // US-ASCII
    if (point < 0x80) {
      result.push(point);
      continue;
    }

    // 2-byte UTF-8
    if (point < 0x800) {
      result.push(point >> 6 | 192);
      result.push(point & 63 | 128);
      continue;
    }

    // 3-byte UTF-8
    if (point < 0xD800 || point >= 0xE000 && point < 0x10000) {
      result.push(point >> 12 | 224);
      result.push(point >> 6 & 63 | 128);
      result.push(point & 63 | 128);
      continue;
    }

    // 4-byte UTF-8
    if (point >= 0x10000 && point <= 0x10FFFF) {
      result.push(point >> 18 | 240);
      result.push(point >> 12 & 63 | 128);
      result.push(point >> 6 & 63 | 128);
      result.push(point & 63 | 128);
      continue;
    }

    // Invalid character
    result.push(0xEF, 0xBF, 0xBD);
  }
  return new Uint8Array(result).buffer;
};

var encodeUtf8 = encodeUtf8$1;
var Mode$2 = mode;
function ByteData(data) {
  this.mode = Mode$2.BYTE;
  if (typeof data === 'string') {
    data = encodeUtf8(data);
  }
  this.data = new Uint8Array(data);
}
ByteData.getBitsLength = function getBitsLength(length) {
  return length * 8;
};
ByteData.prototype.getLength = function getLength() {
  return this.data.length;
};
ByteData.prototype.getBitsLength = function getBitsLength() {
  return ByteData.getBitsLength(this.data.length);
};
ByteData.prototype.write = function (bitBuffer) {
  for (var i = 0, l = this.data.length; i < l; i++) {
    bitBuffer.put(this.data[i], 8);
  }
};
var byteData = ByteData;

var Mode$1 = mode;
var Utils$2 = utils$1;
function KanjiData(data) {
  this.mode = Mode$1.KANJI;
  this.data = data;
}
KanjiData.getBitsLength = function getBitsLength(length) {
  return length * 13;
};
KanjiData.prototype.getLength = function getLength() {
  return this.data.length;
};
KanjiData.prototype.getBitsLength = function getBitsLength() {
  return KanjiData.getBitsLength(this.data.length);
};
KanjiData.prototype.write = function (bitBuffer) {
  var i;

  // In the Shift JIS system, Kanji characters are represented by a two byte combination.
  // These byte values are shifted from the JIS X 0208 values.
  // JIS X 0208 gives details of the shift coded representation.
  for (i = 0; i < this.data.length; i++) {
    var value = Utils$2.toSJIS(this.data[i]);

    // For characters with Shift JIS values from 0x8140 to 0x9FFC:
    if (value >= 0x8140 && value <= 0x9FFC) {
      // Subtract 0x8140 from Shift JIS value
      value -= 0x8140;

      // For characters with Shift JIS values from 0xE040 to 0xEBBF
    } else if (value >= 0xE040 && value <= 0xEBBF) {
      // Subtract 0xC140 from Shift JIS value
      value -= 0xC140;
    } else {
      throw new Error('Invalid SJIS character: ' + this.data[i] + '\n' + 'Make sure your charset is UTF-8');
    }

    // Multiply most significant byte of result by 0xC0
    // and add least significant byte to product
    value = (value >>> 8 & 0xff) * 0xC0 + (value & 0xff);

    // Convert result to a 13-bit binary string
    bitBuffer.put(value, 13);
  }
};
var kanjiData = KanjiData;

var dijkstra = {exports: {}};

(function (module) {

  /******************************************************************************
   * Created 2008-08-19.
   *
   * Dijkstra path-finding functions. Adapted from the Dijkstar Python project.
   *
   * Copyright (C) 2008
   *   Wyatt Baldwin <self@wyattbaldwin.com>
   *   All rights reserved
   *
   * Licensed under the MIT license.
   *
   *   http://www.opensource.org/licenses/mit-license.php
   *
   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   * THE SOFTWARE.
   *****************************************************************************/
  var dijkstra = {
    single_source_shortest_paths: function single_source_shortest_paths(graph, s, d) {
      // Predecessor map for each node that has been encountered.
      // node ID => predecessor node ID
      var predecessors = {};

      // Costs of shortest paths from s to all nodes encountered.
      // node ID => cost
      var costs = {};
      costs[s] = 0;

      // Costs of shortest paths from s to all nodes encountered; differs from
      // `costs` in that it provides easy access to the node that currently has
      // the known shortest path from s.
      // XXX: Do we actually need both `costs` and `open`?
      var open = dijkstra.PriorityQueue.make();
      open.push(s, 0);
      var closest, u, v, cost_of_s_to_u, adjacent_nodes, cost_of_e, cost_of_s_to_u_plus_cost_of_e, cost_of_s_to_v, first_visit;
      while (!open.empty()) {
        // In the nodes remaining in graph that have a known cost from s,
        // find the node, u, that currently has the shortest path from s.
        closest = open.pop();
        u = closest.value;
        cost_of_s_to_u = closest.cost;

        // Get nodes adjacent to u...
        adjacent_nodes = graph[u] || {};

        // ...and explore the edges that connect u to those nodes, updating
        // the cost of the shortest paths to any or all of those nodes as
        // necessary. v is the node across the current edge from u.
        for (v in adjacent_nodes) {
          if (adjacent_nodes.hasOwnProperty(v)) {
            // Get the cost of the edge running from u to v.
            cost_of_e = adjacent_nodes[v];

            // Cost of s to u plus the cost of u to v across e--this is *a*
            // cost from s to v that may or may not be less than the current
            // known cost to v.
            cost_of_s_to_u_plus_cost_of_e = cost_of_s_to_u + cost_of_e;

            // If we haven't visited v yet OR if the current known cost from s to
            // v is greater than the new cost we just found (cost of s to u plus
            // cost of u to v across e), update v's cost in the cost list and
            // update v's predecessor in the predecessor list (it's now u).
            cost_of_s_to_v = costs[v];
            first_visit = typeof costs[v] === 'undefined';
            if (first_visit || cost_of_s_to_v > cost_of_s_to_u_plus_cost_of_e) {
              costs[v] = cost_of_s_to_u_plus_cost_of_e;
              open.push(v, cost_of_s_to_u_plus_cost_of_e);
              predecessors[v] = u;
            }
          }
        }
      }
      if (typeof d !== 'undefined' && typeof costs[d] === 'undefined') {
        var msg = ['Could not find a path from ', s, ' to ', d, '.'].join('');
        throw new Error(msg);
      }
      return predecessors;
    },
    extract_shortest_path_from_predecessor_list: function extract_shortest_path_from_predecessor_list(predecessors, d) {
      var nodes = [];
      var u = d;
      while (u) {
        nodes.push(u);
        predecessors[u];
        u = predecessors[u];
      }
      nodes.reverse();
      return nodes;
    },
    find_path: function find_path(graph, s, d) {
      var predecessors = dijkstra.single_source_shortest_paths(graph, s, d);
      return dijkstra.extract_shortest_path_from_predecessor_list(predecessors, d);
    },
    /**
     * A very naive priority queue implementation.
     */
    PriorityQueue: {
      make: function make(opts) {
        var T = dijkstra.PriorityQueue,
          t = {},
          key;
        opts = opts || {};
        for (key in T) {
          if (T.hasOwnProperty(key)) {
            t[key] = T[key];
          }
        }
        t.queue = [];
        t.sorter = opts.sorter || T.default_sorter;
        return t;
      },
      default_sorter: function default_sorter(a, b) {
        return a.cost - b.cost;
      },
      /**
       * Add a new item to the queue and ensure the highest priority element
       * is at the front of the queue.
       */
      push: function push(value, cost) {
        var item = {
          value: value,
          cost: cost
        };
        this.queue.push(item);
        this.queue.sort(this.sorter);
      },
      /**
       * Return the highest priority element in the queue.
       */
      pop: function pop() {
        return this.queue.shift();
      },
      empty: function empty() {
        return this.queue.length === 0;
      }
    }
  };

  // node.js module exports
  {
    module.exports = dijkstra;
  }
})(dijkstra);
var dijkstraExports = dijkstra.exports;

(function (exports) {
  var Mode = mode;
  var NumericData = numericData;
  var AlphanumericData = alphanumericData;
  var ByteData = byteData;
  var KanjiData = kanjiData;
  var Regex = regex;
  var Utils = utils$1;
  var dijkstra = dijkstraExports;

  /**
   * Returns UTF8 byte length
   *
   * @param  {String} str Input string
   * @return {Number}     Number of byte
   */
  function getStringByteLength(str) {
    return unescape(encodeURIComponent(str)).length;
  }

  /**
   * Get a list of segments of the specified mode
   * from a string
   *
   * @param  {Mode}   mode Segment mode
   * @param  {String} str  String to process
   * @return {Array}       Array of object with segments data
   */
  function getSegments(regex, mode, str) {
    var segments = [];
    var result;
    while ((result = regex.exec(str)) !== null) {
      segments.push({
        data: result[0],
        index: result.index,
        mode: mode,
        length: result[0].length
      });
    }
    return segments;
  }

  /**
   * Extracts a series of segments with the appropriate
   * modes from a string
   *
   * @param  {String} dataStr Input string
   * @return {Array}          Array of object with segments data
   */
  function getSegmentsFromString(dataStr) {
    var numSegs = getSegments(Regex.NUMERIC, Mode.NUMERIC, dataStr);
    var alphaNumSegs = getSegments(Regex.ALPHANUMERIC, Mode.ALPHANUMERIC, dataStr);
    var byteSegs;
    var kanjiSegs;
    if (Utils.isKanjiModeEnabled()) {
      byteSegs = getSegments(Regex.BYTE, Mode.BYTE, dataStr);
      kanjiSegs = getSegments(Regex.KANJI, Mode.KANJI, dataStr);
    } else {
      byteSegs = getSegments(Regex.BYTE_KANJI, Mode.BYTE, dataStr);
      kanjiSegs = [];
    }
    var segs = numSegs.concat(alphaNumSegs, byteSegs, kanjiSegs);
    return segs.sort(function (s1, s2) {
      return s1.index - s2.index;
    }).map(function (obj) {
      return {
        data: obj.data,
        mode: obj.mode,
        length: obj.length
      };
    });
  }

  /**
   * Returns how many bits are needed to encode a string of
   * specified length with the specified mode
   *
   * @param  {Number} length String length
   * @param  {Mode} mode     Segment mode
   * @return {Number}        Bit length
   */
  function getSegmentBitsLength(length, mode) {
    switch (mode) {
      case Mode.NUMERIC:
        return NumericData.getBitsLength(length);
      case Mode.ALPHANUMERIC:
        return AlphanumericData.getBitsLength(length);
      case Mode.KANJI:
        return KanjiData.getBitsLength(length);
      case Mode.BYTE:
        return ByteData.getBitsLength(length);
    }
  }

  /**
   * Merges adjacent segments which have the same mode
   *
   * @param  {Array} segs Array of object with segments data
   * @return {Array}      Array of object with segments data
   */
  function mergeSegments(segs) {
    return segs.reduce(function (acc, curr) {
      var prevSeg = acc.length - 1 >= 0 ? acc[acc.length - 1] : null;
      if (prevSeg && prevSeg.mode === curr.mode) {
        acc[acc.length - 1].data += curr.data;
        return acc;
      }
      acc.push(curr);
      return acc;
    }, []);
  }

  /**
   * Generates a list of all possible nodes combination which
   * will be used to build a segments graph.
   *
   * Nodes are divided by groups. Each group will contain a list of all the modes
   * in which is possible to encode the given text.
   *
   * For example the text '12345' can be encoded as Numeric, Alphanumeric or Byte.
   * The group for '12345' will contain then 3 objects, one for each
   * possible encoding mode.
   *
   * Each node represents a possible segment.
   *
   * @param  {Array} segs Array of object with segments data
   * @return {Array}      Array of object with segments data
   */
  function buildNodes(segs) {
    var nodes = [];
    for (var i = 0; i < segs.length; i++) {
      var seg = segs[i];
      switch (seg.mode) {
        case Mode.NUMERIC:
          nodes.push([seg, {
            data: seg.data,
            mode: Mode.ALPHANUMERIC,
            length: seg.length
          }, {
            data: seg.data,
            mode: Mode.BYTE,
            length: seg.length
          }]);
          break;
        case Mode.ALPHANUMERIC:
          nodes.push([seg, {
            data: seg.data,
            mode: Mode.BYTE,
            length: seg.length
          }]);
          break;
        case Mode.KANJI:
          nodes.push([seg, {
            data: seg.data,
            mode: Mode.BYTE,
            length: getStringByteLength(seg.data)
          }]);
          break;
        case Mode.BYTE:
          nodes.push([{
            data: seg.data,
            mode: Mode.BYTE,
            length: getStringByteLength(seg.data)
          }]);
      }
    }
    return nodes;
  }

  /**
   * Builds a graph from a list of nodes.
   * All segments in each node group will be connected with all the segments of
   * the next group and so on.
   *
   * At each connection will be assigned a weight depending on the
   * segment's byte length.
   *
   * @param  {Array} nodes    Array of object with segments data
   * @param  {Number} version QR Code version
   * @return {Object}         Graph of all possible segments
   */
  function buildGraph(nodes, version) {
    var table = {};
    var graph = {
      start: {}
    };
    var prevNodeIds = ['start'];
    for (var i = 0; i < nodes.length; i++) {
      var nodeGroup = nodes[i];
      var currentNodeIds = [];
      for (var j = 0; j < nodeGroup.length; j++) {
        var node = nodeGroup[j];
        var key = '' + i + j;
        currentNodeIds.push(key);
        table[key] = {
          node: node,
          lastCount: 0
        };
        graph[key] = {};
        for (var n = 0; n < prevNodeIds.length; n++) {
          var prevNodeId = prevNodeIds[n];
          if (table[prevNodeId] && table[prevNodeId].node.mode === node.mode) {
            graph[prevNodeId][key] = getSegmentBitsLength(table[prevNodeId].lastCount + node.length, node.mode) - getSegmentBitsLength(table[prevNodeId].lastCount, node.mode);
            table[prevNodeId].lastCount += node.length;
          } else {
            if (table[prevNodeId]) table[prevNodeId].lastCount = node.length;
            graph[prevNodeId][key] = getSegmentBitsLength(node.length, node.mode) + 4 + Mode.getCharCountIndicator(node.mode, version); // switch cost
          }
        }
      }
      prevNodeIds = currentNodeIds;
    }
    for (var _n = 0; _n < prevNodeIds.length; _n++) {
      graph[prevNodeIds[_n]].end = 0;
    }
    return {
      map: graph,
      table: table
    };
  }

  /**
   * Builds a segment from a specified data and mode.
   * If a mode is not specified, the more suitable will be used.
   *
   * @param  {String} data             Input data
   * @param  {Mode | String} modesHint Data mode
   * @return {Segment}                 Segment
   */
  function buildSingleSegment(data, modesHint) {
    var mode;
    var bestMode = Mode.getBestModeForData(data);
    mode = Mode.from(modesHint, bestMode);

    // Make sure data can be encoded
    if (mode !== Mode.BYTE && mode.bit < bestMode.bit) {
      throw new Error('"' + data + '"' + ' cannot be encoded with mode ' + Mode.toString(mode) + '.\n Suggested mode is: ' + Mode.toString(bestMode));
    }

    // Use Mode.BYTE if Kanji support is disabled
    if (mode === Mode.KANJI && !Utils.isKanjiModeEnabled()) {
      mode = Mode.BYTE;
    }
    switch (mode) {
      case Mode.NUMERIC:
        return new NumericData(data);
      case Mode.ALPHANUMERIC:
        return new AlphanumericData(data);
      case Mode.KANJI:
        return new KanjiData(data);
      case Mode.BYTE:
        return new ByteData(data);
    }
  }

  /**
   * Builds a list of segments from an array.
   * Array can contain Strings or Objects with segment's info.
   *
   * For each item which is a string, will be generated a segment with the given
   * string and the more appropriate encoding mode.
   *
   * For each item which is an object, will be generated a segment with the given
   * data and mode.
   * Objects must contain at least the property "data".
   * If property "mode" is not present, the more suitable mode will be used.
   *
   * @param  {Array} array Array of objects with segments data
   * @return {Array}       Array of Segments
   */
  exports.fromArray = function fromArray(array) {
    return array.reduce(function (acc, seg) {
      if (typeof seg === 'string') {
        acc.push(buildSingleSegment(seg, null));
      } else if (seg.data) {
        acc.push(buildSingleSegment(seg.data, seg.mode));
      }
      return acc;
    }, []);
  };

  /**
   * Builds an optimized sequence of segments from a string,
   * which will produce the shortest possible bitstream.
   *
   * @param  {String} data    Input string
   * @param  {Number} version QR Code version
   * @return {Array}          Array of segments
   */
  exports.fromString = function fromString(data, version) {
    var segs = getSegmentsFromString(data, Utils.isKanjiModeEnabled());
    var nodes = buildNodes(segs);
    var graph = buildGraph(nodes, version);
    var path = dijkstra.find_path(graph.map, 'start', 'end');
    var optimizedSegs = [];
    for (var i = 1; i < path.length - 1; i++) {
      optimizedSegs.push(graph.table[path[i]].node);
    }
    return exports.fromArray(mergeSegments(optimizedSegs));
  };

  /**
   * Splits a string in various segments with the modes which
   * best represent their content.
   * The produced segments are far from being optimized.
   * The output of this function is only used to estimate a QR Code version
   * which may contain the data.
   *
   * @param  {string} data Input string
   * @return {Array}       Array of segments
   */
  exports.rawSplit = function rawSplit(data) {
    return exports.fromArray(getSegmentsFromString(data, Utils.isKanjiModeEnabled()));
  };
})(segments);

var Utils$1 = utils$1;
var ECLevel = errorCorrectionLevel;
var BitBuffer = bitBuffer;
var BitMatrix = bitMatrix;
var AlignmentPattern = alignmentPattern;
var FinderPattern = finderPattern;
var MaskPattern = maskPattern;
var ECCode = errorCorrectionCode;
var ReedSolomonEncoder = reedSolomonEncoder;
var Version = version;
var FormatInfo = formatInfo;
var Mode = mode;
var Segments = segments;

/**
 * QRCode for JavaScript
 *
 * modified by Ryan Day for nodejs support
 * Copyright (c) 2011 Ryan Day
 *
 * Licensed under the MIT license:
 *   http://www.opensource.org/licenses/mit-license.php
 *
//---------------------------------------------------------------------
// QRCode for JavaScript
//
// Copyright (c) 2009 Kazuhiko Arase
//
// URL: http://www.d-project.com/
//
// Licensed under the MIT license:
//   http://www.opensource.org/licenses/mit-license.php
//
// The word "QR Code" is registered trademark of
// DENSO WAVE INCORPORATED
//   http://www.denso-wave.com/qrcode/faqpatent-e.html
//
//---------------------------------------------------------------------
*/

/**
 * Add finder patterns bits to matrix
 *
 * @param  {BitMatrix} matrix  Modules matrix
 * @param  {Number}    version QR Code version
 */
function setupFinderPattern(matrix, version) {
  var size = matrix.size;
  var pos = FinderPattern.getPositions(version);
  for (var i = 0; i < pos.length; i++) {
    var row = pos[i][0];
    var col = pos[i][1];
    for (var r = -1; r <= 7; r++) {
      if (row + r <= -1 || size <= row + r) continue;
      for (var c = -1; c <= 7; c++) {
        if (col + c <= -1 || size <= col + c) continue;
        if (r >= 0 && r <= 6 && (c === 0 || c === 6) || c >= 0 && c <= 6 && (r === 0 || r === 6) || r >= 2 && r <= 4 && c >= 2 && c <= 4) {
          matrix.set(row + r, col + c, true, true);
        } else {
          matrix.set(row + r, col + c, false, true);
        }
      }
    }
  }
}

/**
 * Add timing pattern bits to matrix
 *
 * Note: this function must be called before {@link setupAlignmentPattern}
 *
 * @param  {BitMatrix} matrix Modules matrix
 */
function setupTimingPattern(matrix) {
  var size = matrix.size;
  for (var r = 8; r < size - 8; r++) {
    var value = r % 2 === 0;
    matrix.set(r, 6, value, true);
    matrix.set(6, r, value, true);
  }
}

/**
 * Add alignment patterns bits to matrix
 *
 * Note: this function must be called after {@link setupTimingPattern}
 *
 * @param  {BitMatrix} matrix  Modules matrix
 * @param  {Number}    version QR Code version
 */
function setupAlignmentPattern(matrix, version) {
  var pos = AlignmentPattern.getPositions(version);
  for (var i = 0; i < pos.length; i++) {
    var row = pos[i][0];
    var col = pos[i][1];
    for (var r = -2; r <= 2; r++) {
      for (var c = -2; c <= 2; c++) {
        if (r === -2 || r === 2 || c === -2 || c === 2 || r === 0 && c === 0) {
          matrix.set(row + r, col + c, true, true);
        } else {
          matrix.set(row + r, col + c, false, true);
        }
      }
    }
  }
}

/**
 * Add version info bits to matrix
 *
 * @param  {BitMatrix} matrix  Modules matrix
 * @param  {Number}    version QR Code version
 */
function setupVersionInfo(matrix, version) {
  var size = matrix.size;
  var bits = Version.getEncodedBits(version);
  var row, col, mod;
  for (var i = 0; i < 18; i++) {
    row = Math.floor(i / 3);
    col = i % 3 + size - 8 - 3;
    mod = (bits >> i & 1) === 1;
    matrix.set(row, col, mod, true);
    matrix.set(col, row, mod, true);
  }
}

/**
 * Add format info bits to matrix
 *
 * @param  {BitMatrix} matrix               Modules matrix
 * @param  {ErrorCorrectionLevel}    errorCorrectionLevel Error correction level
 * @param  {Number}    maskPattern          Mask pattern reference value
 */
function setupFormatInfo(matrix, errorCorrectionLevel, maskPattern) {
  var size = matrix.size;
  var bits = FormatInfo.getEncodedBits(errorCorrectionLevel, maskPattern);
  var i, mod;
  for (i = 0; i < 15; i++) {
    mod = (bits >> i & 1) === 1;

    // vertical
    if (i < 6) {
      matrix.set(i, 8, mod, true);
    } else if (i < 8) {
      matrix.set(i + 1, 8, mod, true);
    } else {
      matrix.set(size - 15 + i, 8, mod, true);
    }

    // horizontal
    if (i < 8) {
      matrix.set(8, size - i - 1, mod, true);
    } else if (i < 9) {
      matrix.set(8, 15 - i - 1 + 1, mod, true);
    } else {
      matrix.set(8, 15 - i - 1, mod, true);
    }
  }

  // fixed module
  matrix.set(size - 8, 8, 1, true);
}

/**
 * Add encoded data bits to matrix
 *
 * @param  {BitMatrix}  matrix Modules matrix
 * @param  {Uint8Array} data   Data codewords
 */
function setupData(matrix, data) {
  var size = matrix.size;
  var inc = -1;
  var row = size - 1;
  var bitIndex = 7;
  var byteIndex = 0;
  for (var col = size - 1; col > 0; col -= 2) {
    if (col === 6) col--;
    while (true) {
      for (var c = 0; c < 2; c++) {
        if (!matrix.isReserved(row, col - c)) {
          var dark = false;
          if (byteIndex < data.length) {
            dark = (data[byteIndex] >>> bitIndex & 1) === 1;
          }
          matrix.set(row, col - c, dark);
          bitIndex--;
          if (bitIndex === -1) {
            byteIndex++;
            bitIndex = 7;
          }
        }
      }
      row += inc;
      if (row < 0 || size <= row) {
        row -= inc;
        inc = -inc;
        break;
      }
    }
  }
}

/**
 * Create encoded codewords from data input
 *
 * @param  {Number}   version              QR Code version
 * @param  {ErrorCorrectionLevel}   errorCorrectionLevel Error correction level
 * @param  {ByteData} data                 Data input
 * @return {Uint8Array}                    Buffer containing encoded codewords
 */
function createData(version, errorCorrectionLevel, segments) {
  // Prepare data buffer
  var buffer = new BitBuffer();
  segments.forEach(function (data) {
    // prefix data with mode indicator (4 bits)
    buffer.put(data.mode.bit, 4);

    // Prefix data with character count indicator.
    // The character count indicator is a string of bits that represents the
    // number of characters that are being encoded.
    // The character count indicator must be placed after the mode indicator
    // and must be a certain number of bits long, depending on the QR version
    // and data mode
    // @see {@link Mode.getCharCountIndicator}.
    buffer.put(data.getLength(), Mode.getCharCountIndicator(data.mode, version));

    // add binary data sequence to buffer
    data.write(buffer);
  });

  // Calculate required number of bits
  var totalCodewords = Utils$1.getSymbolTotalCodewords(version);
  var ecTotalCodewords = ECCode.getTotalCodewordsCount(version, errorCorrectionLevel);
  var dataTotalCodewordsBits = (totalCodewords - ecTotalCodewords) * 8;

  // Add a terminator.
  // If the bit string is shorter than the total number of required bits,
  // a terminator of up to four 0s must be added to the right side of the string.
  // If the bit string is more than four bits shorter than the required number of bits,
  // add four 0s to the end.
  if (buffer.getLengthInBits() + 4 <= dataTotalCodewordsBits) {
    buffer.put(0, 4);
  }

  // If the bit string is fewer than four bits shorter, add only the number of 0s that
  // are needed to reach the required number of bits.

  // After adding the terminator, if the number of bits in the string is not a multiple of 8,
  // pad the string on the right with 0s to make the string's length a multiple of 8.
  while (buffer.getLengthInBits() % 8 !== 0) {
    buffer.putBit(0);
  }

  // Add pad bytes if the string is still shorter than the total number of required bits.
  // Extend the buffer to fill the data capacity of the symbol corresponding to
  // the Version and Error Correction Level by adding the Pad Codewords 11101100 (0xEC)
  // and 00010001 (0x11) alternately.
  var remainingByte = (dataTotalCodewordsBits - buffer.getLengthInBits()) / 8;
  for (var i = 0; i < remainingByte; i++) {
    buffer.put(i % 2 ? 0x11 : 0xEC, 8);
  }
  return createCodewords(buffer, version, errorCorrectionLevel);
}

/**
 * Encode input data with Reed-Solomon and return codewords with
 * relative error correction bits
 *
 * @param  {BitBuffer} bitBuffer            Data to encode
 * @param  {Number}    version              QR Code version
 * @param  {ErrorCorrectionLevel} errorCorrectionLevel Error correction level
 * @return {Uint8Array}                     Buffer containing encoded codewords
 */
function createCodewords(bitBuffer, version, errorCorrectionLevel) {
  // Total codewords for this QR code version (Data + Error correction)
  var totalCodewords = Utils$1.getSymbolTotalCodewords(version);

  // Total number of error correction codewords
  var ecTotalCodewords = ECCode.getTotalCodewordsCount(version, errorCorrectionLevel);

  // Total number of data codewords
  var dataTotalCodewords = totalCodewords - ecTotalCodewords;

  // Total number of blocks
  var ecTotalBlocks = ECCode.getBlocksCount(version, errorCorrectionLevel);

  // Calculate how many blocks each group should contain
  var blocksInGroup2 = totalCodewords % ecTotalBlocks;
  var blocksInGroup1 = ecTotalBlocks - blocksInGroup2;
  var totalCodewordsInGroup1 = Math.floor(totalCodewords / ecTotalBlocks);
  var dataCodewordsInGroup1 = Math.floor(dataTotalCodewords / ecTotalBlocks);
  var dataCodewordsInGroup2 = dataCodewordsInGroup1 + 1;

  // Number of EC codewords is the same for both groups
  var ecCount = totalCodewordsInGroup1 - dataCodewordsInGroup1;

  // Initialize a Reed-Solomon encoder with a generator polynomial of degree ecCount
  var rs = new ReedSolomonEncoder(ecCount);
  var offset = 0;
  var dcData = new Array(ecTotalBlocks);
  var ecData = new Array(ecTotalBlocks);
  var maxDataSize = 0;
  var buffer = new Uint8Array(bitBuffer.buffer);

  // Divide the buffer into the required number of blocks
  for (var b = 0; b < ecTotalBlocks; b++) {
    var dataSize = b < blocksInGroup1 ? dataCodewordsInGroup1 : dataCodewordsInGroup2;

    // extract a block of data from buffer
    dcData[b] = buffer.slice(offset, offset + dataSize);

    // Calculate EC codewords for this data block
    ecData[b] = rs.encode(dcData[b]);
    offset += dataSize;
    maxDataSize = Math.max(maxDataSize, dataSize);
  }

  // Create final data
  // Interleave the data and error correction codewords from each block
  var data = new Uint8Array(totalCodewords);
  var index = 0;
  var i, r;

  // Add data codewords
  for (i = 0; i < maxDataSize; i++) {
    for (r = 0; r < ecTotalBlocks; r++) {
      if (i < dcData[r].length) {
        data[index++] = dcData[r][i];
      }
    }
  }

  // Apped EC codewords
  for (i = 0; i < ecCount; i++) {
    for (r = 0; r < ecTotalBlocks; r++) {
      data[index++] = ecData[r][i];
    }
  }
  return data;
}

/**
 * Build QR Code symbol
 *
 * @param  {String} data                 Input string
 * @param  {Number} version              QR Code version
 * @param  {ErrorCorretionLevel} errorCorrectionLevel Error level
 * @param  {MaskPattern} maskPattern     Mask pattern
 * @return {Object}                      Object containing symbol data
 */
function createSymbol(data, version, errorCorrectionLevel, maskPattern) {
  var segments;
  if (Array.isArray(data)) {
    segments = Segments.fromArray(data);
  } else if (typeof data === 'string') {
    var estimatedVersion = version;
    if (!estimatedVersion) {
      var rawSegments = Segments.rawSplit(data);

      // Estimate best version that can contain raw splitted segments
      estimatedVersion = Version.getBestVersionForData(rawSegments, errorCorrectionLevel);
    }

    // Build optimized segments
    // If estimated version is undefined, try with the highest version
    segments = Segments.fromString(data, estimatedVersion || 40);
  } else {
    throw new Error('Invalid data');
  }

  // Get the min version that can contain data
  var bestVersion = Version.getBestVersionForData(segments, errorCorrectionLevel);

  // If no version is found, data cannot be stored
  if (!bestVersion) {
    throw new Error('The amount of data is too big to be stored in a QR Code');
  }

  // If not specified, use min version as default
  if (!version) {
    version = bestVersion;

    // Check if the specified version can contain the data
  } else if (version < bestVersion) {
    throw new Error('\n' + 'The chosen QR Code version cannot contain this amount of data.\n' + 'Minimum version required to store current data is: ' + bestVersion + '.\n');
  }
  var dataBits = createData(version, errorCorrectionLevel, segments);

  // Allocate matrix buffer
  var moduleCount = Utils$1.getSymbolSize(version);
  var modules = new BitMatrix(moduleCount);

  // Add function modules
  setupFinderPattern(modules, version);
  setupTimingPattern(modules);
  setupAlignmentPattern(modules, version);

  // Add temporary dummy bits for format info just to set them as reserved.
  // This is needed to prevent these bits from being masked by {@link MaskPattern.applyMask}
  // since the masking operation must be performed only on the encoding region.
  // These blocks will be replaced with correct values later in code.
  setupFormatInfo(modules, errorCorrectionLevel, 0);
  if (version >= 7) {
    setupVersionInfo(modules, version);
  }

  // Add data codewords
  setupData(modules, dataBits);
  if (isNaN(maskPattern)) {
    // Find best mask pattern
    maskPattern = MaskPattern.getBestMask(modules, setupFormatInfo.bind(null, modules, errorCorrectionLevel));
  }

  // Apply mask pattern
  MaskPattern.applyMask(maskPattern, modules);

  // Replace format info bits with correct values
  setupFormatInfo(modules, errorCorrectionLevel, maskPattern);
  return {
    modules: modules,
    version: version,
    errorCorrectionLevel: errorCorrectionLevel,
    maskPattern: maskPattern,
    segments: segments
  };
}

/**
 * QR Code
 *
 * @param {String | Array} data                 Input data
 * @param {Object} options                      Optional configurations
 * @param {Number} options.version              QR Code version
 * @param {String} options.errorCorrectionLevel Error correction level
 * @param {Function} options.toSJISFunc         Helper func to convert utf8 to sjis
 */
qrcode.create = function create(data, options) {
  if (typeof data === 'undefined' || data === '') {
    throw new Error('No input text');
  }
  var errorCorrectionLevel = ECLevel.M;
  var version;
  var mask;
  if (typeof options !== 'undefined') {
    // Use higher error correction level as default
    errorCorrectionLevel = ECLevel.from(options.errorCorrectionLevel, ECLevel.M);
    version = Version.from(options.version);
    mask = MaskPattern.from(options.maskPattern);
    if (options.toSJISFunc) {
      Utils$1.setToSJISFunction(options.toSJISFunc);
    }
  }
  return createSymbol(data, version, errorCorrectionLevel, mask);
};

var canvas = {};

var utils = {};

(function (exports) {
  function hex2rgba(hex) {
    if (typeof hex === 'number') {
      hex = hex.toString();
    }
    if (typeof hex !== 'string') {
      throw new Error('Color should be defined as hex string');
    }
    var hexCode = hex.slice().replace('#', '').split('');
    if (hexCode.length < 3 || hexCode.length === 5 || hexCode.length > 8) {
      throw new Error('Invalid hex color: ' + hex);
    }

    // Convert from short to long form (fff -> ffffff)
    if (hexCode.length === 3 || hexCode.length === 4) {
      hexCode = Array.prototype.concat.apply([], hexCode.map(function (c) {
        return [c, c];
      }));
    }

    // Add default alpha value
    if (hexCode.length === 6) hexCode.push('F', 'F');
    var hexValue = parseInt(hexCode.join(''), 16);
    return {
      r: hexValue >> 24 & 255,
      g: hexValue >> 16 & 255,
      b: hexValue >> 8 & 255,
      a: hexValue & 255,
      hex: '#' + hexCode.slice(0, 6).join('')
    };
  }
  exports.getOptions = function getOptions(options) {
    if (!options) options = {};
    if (!options.color) options.color = {};
    var margin = typeof options.margin === 'undefined' || options.margin === null || options.margin < 0 ? 4 : options.margin;
    var width = options.width && options.width >= 21 ? options.width : undefined;
    var scale = options.scale || 4;
    return {
      width: width,
      scale: width ? 4 : scale,
      margin: margin,
      color: {
        dark: hex2rgba(options.color.dark || '#000000ff'),
        light: hex2rgba(options.color.light || '#ffffffff')
      },
      type: options.type,
      rendererOpts: options.rendererOpts || {}
    };
  };
  exports.getScale = function getScale(qrSize, opts) {
    return opts.width && opts.width >= qrSize + opts.margin * 2 ? opts.width / (qrSize + opts.margin * 2) : opts.scale;
  };
  exports.getImageWidth = function getImageWidth(qrSize, opts) {
    var scale = exports.getScale(qrSize, opts);
    return Math.floor((qrSize + opts.margin * 2) * scale);
  };
  exports.qrToImageData = function qrToImageData(imgData, qr, opts) {
    var size = qr.modules.size;
    var data = qr.modules.data;
    var scale = exports.getScale(size, opts);
    var symbolSize = Math.floor((size + opts.margin * 2) * scale);
    var scaledMargin = opts.margin * scale;
    var palette = [opts.color.light, opts.color.dark];
    for (var i = 0; i < symbolSize; i++) {
      for (var j = 0; j < symbolSize; j++) {
        var posDst = (i * symbolSize + j) * 4;
        var pxColor = opts.color.light;
        if (i >= scaledMargin && j >= scaledMargin && i < symbolSize - scaledMargin && j < symbolSize - scaledMargin) {
          var iSrc = Math.floor((i - scaledMargin) / scale);
          var jSrc = Math.floor((j - scaledMargin) / scale);
          pxColor = palette[data[iSrc * size + jSrc] ? 1 : 0];
        }
        imgData[posDst++] = pxColor.r;
        imgData[posDst++] = pxColor.g;
        imgData[posDst++] = pxColor.b;
        imgData[posDst] = pxColor.a;
      }
    }
  };
})(utils);

(function (exports) {
  var Utils = utils;
  function clearCanvas(ctx, canvas, size) {
    ctx.clearRect(0, 0, canvas.width, canvas.height);
    if (!canvas.style) canvas.style = {};
    canvas.height = size;
    canvas.width = size;
    canvas.style.height = size + 'px';
    canvas.style.width = size + 'px';
  }
  function getCanvasElement() {
    try {
      return document.createElement('canvas');
    } catch (e) {
      throw new Error('You need to specify a canvas element');
    }
  }
  exports.render = function render(qrData, canvas, options) {
    var opts = options;
    var canvasEl = canvas;
    if (typeof opts === 'undefined' && (!canvas || !canvas.getContext)) {
      opts = canvas;
      canvas = undefined;
    }
    if (!canvas) {
      canvasEl = getCanvasElement();
    }
    opts = Utils.getOptions(opts);
    var size = Utils.getImageWidth(qrData.modules.size, opts);
    var ctx = canvasEl.getContext('2d');
    var image = ctx.createImageData(size, size);
    Utils.qrToImageData(image.data, qrData, opts);
    clearCanvas(ctx, canvasEl, size);
    ctx.putImageData(image, 0, 0);
    return canvasEl;
  };
  exports.renderToDataURL = function renderToDataURL(qrData, canvas, options) {
    var opts = options;
    if (typeof opts === 'undefined' && (!canvas || !canvas.getContext)) {
      opts = canvas;
      canvas = undefined;
    }
    if (!opts) opts = {};
    var canvasEl = exports.render(qrData, canvas, opts);
    var type = opts.type || 'image/png';
    var rendererOpts = opts.rendererOpts || {};
    return canvasEl.toDataURL(type, rendererOpts.quality);
  };
})(canvas);

var svgTag = {};

var Utils = utils;
function getColorAttrib(color, attrib) {
  var alpha = color.a / 255;
  var str = attrib + '="' + color.hex + '"';
  return alpha < 1 ? str + ' ' + attrib + '-opacity="' + alpha.toFixed(2).slice(1) + '"' : str;
}
function svgCmd(cmd, x, y) {
  var str = cmd + x;
  if (typeof y !== 'undefined') str += ' ' + y;
  return str;
}
function qrToPath(data, size, margin) {
  var path = '';
  var moveBy = 0;
  var newRow = false;
  var lineLength = 0;
  for (var i = 0; i < data.length; i++) {
    var col = Math.floor(i % size);
    var row = Math.floor(i / size);
    if (!col && !newRow) newRow = true;
    if (data[i]) {
      lineLength++;
      if (!(i > 0 && col > 0 && data[i - 1])) {
        path += newRow ? svgCmd('M', col + margin, 0.5 + row + margin) : svgCmd('m', moveBy, 0);
        moveBy = 0;
        newRow = false;
      }
      if (!(col + 1 < size && data[i + 1])) {
        path += svgCmd('h', lineLength);
        lineLength = 0;
      }
    } else {
      moveBy++;
    }
  }
  return path;
}
svgTag.render = function render(qrData, options, cb) {
  var opts = Utils.getOptions(options);
  var size = qrData.modules.size;
  var data = qrData.modules.data;
  var qrcodesize = size + opts.margin * 2;
  var bg = !opts.color.light.a ? '' : '<path ' + getColorAttrib(opts.color.light, 'fill') + ' d="M0 0h' + qrcodesize + 'v' + qrcodesize + 'H0z"/>';
  var path = '<path ' + getColorAttrib(opts.color.dark, 'stroke') + ' d="' + qrToPath(data, size, opts.margin) + '"/>';
  var viewBox = 'viewBox="' + '0 0 ' + qrcodesize + ' ' + qrcodesize + '"';
  var width = !opts.width ? '' : 'width="' + opts.width + '" height="' + opts.width + '" ';
  var svgTag = '<svg xmlns="http://www.w3.org/2000/svg" ' + width + viewBox + ' shape-rendering="crispEdges">' + bg + path + '</svg>\n';
  if (typeof cb === 'function') {
    cb(null, svgTag);
  }
  return svgTag;
};

var canPromise = canPromise$1;
var QRCode = qrcode;
var CanvasRenderer = canvas;
var SvgRenderer = svgTag;
function renderCanvas(renderFunc, canvas, text, opts, cb) {
  var args = [].slice.call(arguments, 1);
  var argsNum = args.length;
  var isLastArgCb = typeof args[argsNum - 1] === 'function';
  if (!isLastArgCb && !canPromise()) {
    throw new Error('Callback required as last argument');
  }
  if (isLastArgCb) {
    if (argsNum < 2) {
      throw new Error('Too few arguments provided');
    }
    if (argsNum === 2) {
      cb = text;
      text = canvas;
      canvas = opts = undefined;
    } else if (argsNum === 3) {
      if (canvas.getContext && typeof cb === 'undefined') {
        cb = opts;
        opts = undefined;
      } else {
        cb = opts;
        opts = text;
        text = canvas;
        canvas = undefined;
      }
    }
  } else {
    if (argsNum < 1) {
      throw new Error('Too few arguments provided');
    }
    if (argsNum === 1) {
      text = canvas;
      canvas = opts = undefined;
    } else if (argsNum === 2 && !canvas.getContext) {
      opts = text;
      text = canvas;
      canvas = undefined;
    }
    return new Promise(function (resolve, reject) {
      try {
        var data = QRCode.create(text, opts);
        resolve(renderFunc(data, canvas, opts));
      } catch (e) {
        reject(e);
      }
    });
  }
  try {
    var data = QRCode.create(text, opts);
    cb(null, renderFunc(data, canvas, opts));
  } catch (e) {
    cb(e);
  }
}
browser.create = QRCode.create;
browser.toCanvas = renderCanvas.bind(null, CanvasRenderer.render);
browser.toDataURL = renderCanvas.bind(null, CanvasRenderer.renderToDataURL);

// only svg for now.
browser.toString = renderCanvas.bind(null, function (data, _, opts) {
  return SvgRenderer.render(data, opts);
});

var css_248z$6 = "img.svelte-djbe8d{-ms-interpolation-mode:nearest-neighbor;image-rendering:pixelated}a.svelte-djbe8d{text-decoration:none}div.svelte-djbe8d button{width:100%;margin-top:10px}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlFSTW9kYWwuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGtCQUFrQix1Q0FBd0IsQ0FBeEIseUJBQXlCLENBQUMsZ0JBQWdCLG9CQUFvQixDQUFDLHlCQUF5QixVQUFVLENBQUMsZUFBZSIsImZpbGUiOiJRUk1vZGFsLmNzcyIsInNvdXJjZXNDb250ZW50IjpbImltZy5zdmVsdGUtZGpiZThke2ltYWdlLXJlbmRlcmluZzpwaXhlbGF0ZWR9YS5zdmVsdGUtZGpiZThke3RleHQtZGVjb3JhdGlvbjpub25lfWRpdi5zdmVsdGUtZGpiZThkIGJ1dHRvbnt3aWR0aDoxMDAlO21hcmdpbi10b3A6MTBweH0iXX0= */";
styleInject(css_248z$6);

var file$9 = "web/components/QRModal.svelte";

// (2:0) {#if show}
function create_if_block$5(ctx) {
  var modal;
  var current;
  modal = new Modal({
    props: {
      show: /*show*/ctx[0],
      $$slots: {
        default: [create_default_slot]
      },
      $$scope: {
        ctx: ctx
      }
    },
    $$inline: true
  });
  modal.$on("close", /*close*/ctx[3]);
  var block = {
    c: function create() {
      create_component(modal.$$.fragment);
    },
    m: function mount(target, anchor) {
      mount_component(modal, target, anchor);
      current = true;
    },
    p: function update(ctx, dirty) {
      var modal_changes = {};
      if (dirty & /*show*/1) modal_changes.show = /*show*/ctx[0];
      if (dirty & /*$$scope, qr, $menu*/38) {
        modal_changes.$$scope = {
          dirty: dirty,
          ctx: ctx
        };
      }
      modal.$set(modal_changes);
    },
    i: function intro(local) {
      if (current) return;
      transition_in(modal.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(modal.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      destroy_component(modal, detaching);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_if_block$5.name,
    type: "if",
    source: "(2:0) {#if show}",
    ctx: ctx
  });
  return block;
}

// (4:4) {#if qr}
function create_if_block_1$3(ctx) {
  var img;
  var img_src_value;
  var t0;
  var a;
  var button0;
  var a_download_value;
  var t1;
  var button1;
  var current;
  button0 = new Button({
    props: {
      class: "grn",
      t: "Baixar Imagem",
      i: "download"
    },
    $$inline: true
  });
  button1 = new Button({
    props: {
      i: "close",
      t: "Fechar",
      action: /*close*/ctx[3]
    },
    $$inline: true
  });
  var block = {
    c: function create() {
      img = element("img");
      t0 = space();
      a = element("a");
      create_component(button0.$$.fragment);
      t1 = space();
      create_component(button1.$$.fragment);
      if (!src_url_equal(img.src, img_src_value = /*qr*/ctx[1])) attr_dev(img, "src", img_src_value);
      attr_dev(img, "alt", "QR Code");
      attr_dev(img, "class", "svelte-djbe8d");
      add_location(img, file$9, 4, 6, 70);
      attr_dev(a, "href", /*qr*/ctx[1]);
      attr_dev(a, "download", a_download_value = "qr-".concat(format_name( /*$menu*/ctx[2].name)));
      attr_dev(a, "class", "svelte-djbe8d");
      add_location(a, file$9, 6, 6, 108);
    },
    m: function mount(target, anchor) {
      insert_dev(target, img, anchor);
      insert_dev(target, t0, anchor);
      insert_dev(target, a, anchor);
      mount_component(button0, a, null);
      insert_dev(target, t1, anchor);
      mount_component(button1, target, anchor);
      current = true;
    },
    p: function update(ctx, dirty) {
      if (!current || dirty & /*qr*/2 && !src_url_equal(img.src, img_src_value = /*qr*/ctx[1])) {
        attr_dev(img, "src", img_src_value);
      }
      if (!current || dirty & /*qr*/2) {
        attr_dev(a, "href", /*qr*/ctx[1]);
      }
      if (!current || dirty & /*$menu*/4 && a_download_value !== (a_download_value = "qr-".concat(format_name( /*$menu*/ctx[2].name)))) {
        attr_dev(a, "download", a_download_value);
      }
    },
    i: function intro(local) {
      if (current) return;
      transition_in(button0.$$.fragment, local);
      transition_in(button1.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(button0.$$.fragment, local);
      transition_out(button1.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching) detach_dev(img);
      if (detaching) detach_dev(t0);
      if (detaching) detach_dev(a);
      destroy_component(button0);
      if (detaching) detach_dev(t1);
      destroy_component(button1, detaching);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_if_block_1$3.name,
    type: "if",
    source: "(4:4) {#if qr}",
    ctx: ctx
  });
  return block;
}

// (3:2) <Modal {show} on:close={close}>
function create_default_slot(ctx) {
  var if_block_anchor;
  var current;
  var if_block = /*qr*/ctx[1] && create_if_block_1$3(ctx);
  var block = {
    c: function create() {
      if (if_block) if_block.c();
      if_block_anchor = empty();
    },
    m: function mount(target, anchor) {
      if (if_block) if_block.m(target, anchor);
      insert_dev(target, if_block_anchor, anchor);
      current = true;
    },
    p: function update(ctx, dirty) {
      if ( /*qr*/ctx[1]) {
        if (if_block) {
          if_block.p(ctx, dirty);
          if (dirty & /*qr*/2) {
            transition_in(if_block, 1);
          }
        } else {
          if_block = create_if_block_1$3(ctx);
          if_block.c();
          transition_in(if_block, 1);
          if_block.m(if_block_anchor.parentNode, if_block_anchor);
        }
      } else if (if_block) {
        group_outros();
        transition_out(if_block, 1, 1, function () {
          if_block = null;
        });
        check_outros();
      }
    },
    i: function intro(local) {
      if (current) return;
      transition_in(if_block);
      current = true;
    },
    o: function outro(local) {
      transition_out(if_block);
      current = false;
    },
    d: function destroy(detaching) {
      if (if_block) if_block.d(detaching);
      if (detaching) detach_dev(if_block_anchor);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_default_slot.name,
    type: "slot",
    source: "(3:2) <Modal {show} on:close={close}>",
    ctx: ctx
  });
  return block;
}
function create_fragment$9(ctx) {
  var div;
  var current;
  var if_block = /*show*/ctx[0] && create_if_block$5(ctx);
  var block = {
    c: function create() {
      div = element("div");
      if (if_block) if_block.c();
      attr_dev(div, "class", "svelte-djbe8d");
      add_location(div, file$9, 0, 0, 0);
    },
    l: function claim(nodes) {
      throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    },
    m: function mount(target, anchor) {
      insert_dev(target, div, anchor);
      if (if_block) if_block.m(div, null);
      current = true;
    },
    p: function update(ctx, _ref) {
      var _ref2 = _slicedToArray(_ref, 1),
        dirty = _ref2[0];
      if ( /*show*/ctx[0]) {
        if (if_block) {
          if_block.p(ctx, dirty);
          if (dirty & /*show*/1) {
            transition_in(if_block, 1);
          }
        } else {
          if_block = create_if_block$5(ctx);
          if_block.c();
          transition_in(if_block, 1);
          if_block.m(div, null);
        }
      } else if (if_block) {
        group_outros();
        transition_out(if_block, 1, 1, function () {
          if_block = null;
        });
        check_outros();
      }
    },
    i: function intro(local) {
      if (current) return;
      transition_in(if_block);
      current = true;
    },
    o: function outro(local) {
      transition_out(if_block);
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching) detach_dev(div);
      if (if_block) if_block.d();
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_fragment$9.name,
    type: "component",
    source: "",
    ctx: ctx
  });
  return block;
}
function format_name(name) {
  return name.toLowerCase().normalize('NFD').replace(/[\u0300-\u036f]/g, '').replaceAll(' ', '-');
}
function instance$9($$self, $$props, $$invalidate) {
  var $menu;
  validate_store(menu, 'menu');
  component_subscribe($$self, menu, function ($$value) {
    return $$invalidate(2, $menu = $$value);
  });
  var _$$props$$$slots = $$props.$$slots,
    slots = _$$props$$$slots === void 0 ? {} : _$$props$$$slots;
    $$props.$$scope;
  validate_slots('QRModal', slots, []);
  var show = $$props.show;
  var qr;
  var menu_names = {
    'clyp7z8db0000cxl6arjgaa23': 'adeildo-lanches'
  };
  function close() {
    $$invalidate(0, show = false);
  }
  onMount( /*#__PURE__*/function () {
    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(_) {
      return _regeneratorRuntime().wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            _context.t0 = $$invalidate;
            _context.next = 3;
            return browser.toDataURL("".concat(window.location, "m/").concat(menu_names[$menu.id] || $menu.id));
          case 3:
            _context.t1 = qr = _context.sent;
            (0, _context.t0)(1, _context.t1);
          case 5:
          case "end":
            return _context.stop();
        }
      }, _callee);
    }));
    return function (_x) {
      return _ref3.apply(this, arguments);
    };
  }());
  $$self.$$.on_mount.push(function () {
    if (show === undefined && !('show' in $$props || $$self.$$.bound[$$self.$$.props['show']])) {
      console.warn("<QRModal> was created without expected prop 'show'");
    }
  });
  var writable_props = ['show'];
  Object.keys($$props).forEach(function (key) {
    if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn("<QRModal> was created with unknown prop '".concat(key, "'"));
  });
  $$self.$$set = function ($$props) {
    if ('show' in $$props) $$invalidate(0, show = $$props.show);
  };
  $$self.$capture_state = function () {
    return {
      Button: Button,
      Modal: Modal,
      onMount: onMount,
      menu: menu,
      QRCode: browser,
      show: show,
      qr: qr,
      menu_names: menu_names,
      close: close,
      format_name: format_name,
      $menu: $menu
    };
  };
  $$self.$inject_state = function ($$props) {
    if ('show' in $$props) $$invalidate(0, show = $$props.show);
    if ('qr' in $$props) $$invalidate(1, qr = $$props.qr);
    if ('menu_names' in $$props) menu_names = $$props.menu_names;
  };
  if ($$props && "$$inject" in $$props) {
    $$self.$inject_state($$props.$$inject);
  }
  return [show, qr, $menu, close];
}
var QRModal = /*#__PURE__*/function (_SvelteComponentDev) {
  function QRModal(options) {
    var _this;
    _classCallCheck(this, QRModal);
    _this = _callSuper(this, QRModal, [options]);
    init(_this, options, instance$9, create_fragment$9, safe_not_equal, {
      show: 0
    });
    dispatch_dev("SvelteRegisterComponent", {
      component: _this,
      tagName: "QRModal",
      options: options,
      id: create_fragment$9.name
    });
    return _this;
  }
  _inherits(QRModal, _SvelteComponentDev);
  return _createClass(QRModal, [{
    key: "show",
    get: function get() {
      throw new Error("<QRModal>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    },
    set: function set(value) {
      throw new Error("<QRModal>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    }
  }]);
}(SvelteComponentDev);

var css_248z$5 = "td.svelte-i7doj6{padding:10px 10px 0 0}td.svelte-i7doj6:nth-child(1){display:flex;align-items:center;gap:5px;font-weight:bold}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIk1lbnVFZGl0LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxpQkFBaUIscUJBQXFCLENBQUMsOEJBQThCLFlBQVksQ0FBQyxrQkFBa0IsQ0FBQyxPQUFPLENBQUMsZ0JBQWdCIiwiZmlsZSI6Ik1lbnVFZGl0LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRkLnN2ZWx0ZS1pN2RvajZ7cGFkZGluZzoxMHB4IDEwcHggMCAwfXRkLnN2ZWx0ZS1pN2RvajY6bnRoLWNoaWxkKDEpe2Rpc3BsYXk6ZmxleDthbGlnbi1pdGVtczpjZW50ZXI7Z2FwOjVweDtmb250LXdlaWdodDpib2xkfSJdfQ== */";
styleInject(css_248z$5);

var file$8 = "web/routes/MenuEdit.svelte";
function get_each_context$3(ctx, list, i) {
  var child_ctx = ctx.slice();
  child_ctx[12] = list[i];
  return child_ctx;
}

// (28:0) {#each $menu.categories || [] as category}
function create_each_block$3(ctx) {
  var categorycard;
  var current;
  categorycard = new CategoryCard({
    props: {
      category: /*category*/ctx[12]
    },
    $$inline: true
  });
  var block = {
    c: function create() {
      create_component(categorycard.$$.fragment);
    },
    m: function mount(target, anchor) {
      mount_component(categorycard, target, anchor);
      current = true;
    },
    p: function update(ctx, dirty) {
      var categorycard_changes = {};
      if (dirty & /*$menu*/8) categorycard_changes.category = /*category*/ctx[12];
      categorycard.$set(categorycard_changes);
    },
    i: function intro(local) {
      if (current) return;
      transition_in(categorycard.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(categorycard.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      destroy_component(categorycard, detaching);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_each_block$3.name,
    type: "each",
    source: "(28:0) {#each $menu.categories || [] as category}",
    ctx: ctx
  });
  return block;
}
function create_fragment$8(ctx) {
  var div0;
  var h1;
  var t0_value = /*$menu*/ctx[3].name + "";
  var t0;
  var t1;
  var a;
  var button0;
  var a_href_value;
  var t2;
  var button1;
  var t3;
  var button2;
  var t4;
  var button3;
  var t5;
  var table;
  var tr0;
  var td0;
  var icon0;
  var t6;
  var t7;
  var td1;
  var t8_value = ( /*$menu*/ctx[3].phone || 'Não informado.') + "";
  var t8;
  var t9;
  var tr1;
  var td2;
  var icon1;
  var t10;
  var t11;
  var td3;
  var t12_value = ( /*$menu*/ctx[3].whatsapp || 'Não informado.') + "";
  var t12;
  var t13;
  var tr2;
  var td4;
  var icon2;
  var t14;
  var t15;
  var td5;
  var t16_value = ( /*$menu*/ctx[3].address || 'Não informado.') + "";
  var t16;
  var t17;
  var div1;
  var t18;
  var button4;
  var t19;
  var t20;
  var menumodal;
  var updating_show;
  var t21;
  var categorymodal;
  var updating_show_1;
  var t22;
  var qrmodal;
  var updating_show_2;
  var current;
  button0 = new Button({
    props: {
      i: "menu_book"
    },
    $$inline: true
  });
  button1 = new Button({
    props: {
      i: "qr_code",
      action: /*create_qr*/ctx[6]
    },
    $$inline: true
  });
  button2 = new Button({
    props: {
      class: "blu",
      i: "edit",
      t: "",
      action: /*edit*/ctx[5]
    },
    $$inline: true
  });
  button3 = new Button({
    props: {
      class: "red",
      i: "logout",
      action: /*logout*/ctx[8]
    },
    $$inline: true
  });
  icon0 = new Icon({
    props: {
      i: "phone"
    },
    $$inline: true
  });
  icon1 = new Icon({
    props: {
      i: "phone"
    },
    $$inline: true
  });
  icon2 = new Icon({
    props: {
      i: "place"
    },
    $$inline: true
  });
  button4 = new Button({
    props: {
      class: "grn",
      i: "add",
      t: "Categoria",
      action: /*create_category*/ctx[7]
    },
    $$inline: true
  });
  var each_value = /*$menu*/ctx[3].categories || [];
  validate_each_argument(each_value);
  var each_blocks = [];
  for (var i = 0; i < each_value.length; i += 1) {
    each_blocks[i] = create_each_block$3(get_each_context$3(ctx, each_value, i));
  }
  var out = function out(i) {
    return transition_out(each_blocks[i], 1, 1, function () {
      each_blocks[i] = null;
    });
  };
  function menumodal_show_binding(value) {
    /*menumodal_show_binding*/ctx[9](value);
  }
  var menumodal_props = {};
  if ( /*m_edit*/ctx[0] !== void 0) {
    menumodal_props.show = /*m_edit*/ctx[0];
  }
  menumodal = new MenuModal({
    props: menumodal_props,
    $$inline: true
  });
  binding_callbacks.push(function () {
    return bind(menumodal, 'show', menumodal_show_binding);
  });
  function categorymodal_show_binding(value) {
    /*categorymodal_show_binding*/ctx[10](value);
  }
  var categorymodal_props = {};
  if ( /*m_create_category*/ctx[1] !== void 0) {
    categorymodal_props.show = /*m_create_category*/ctx[1];
  }
  categorymodal = new CategoryModal({
    props: categorymodal_props,
    $$inline: true
  });
  binding_callbacks.push(function () {
    return bind(categorymodal, 'show', categorymodal_show_binding);
  });
  function qrmodal_show_binding(value) {
    /*qrmodal_show_binding*/ctx[11](value);
  }
  var qrmodal_props = {};
  if ( /*m_qr*/ctx[2] !== void 0) {
    qrmodal_props.show = /*m_qr*/ctx[2];
  }
  qrmodal = new QRModal({
    props: qrmodal_props,
    $$inline: true
  });
  binding_callbacks.push(function () {
    return bind(qrmodal, 'show', qrmodal_show_binding);
  });
  var block = {
    c: function create() {
      div0 = element("div");
      h1 = element("h1");
      t0 = text(t0_value);
      t1 = space();
      a = element("a");
      create_component(button0.$$.fragment);
      t2 = space();
      create_component(button1.$$.fragment);
      t3 = space();
      create_component(button2.$$.fragment);
      t4 = space();
      create_component(button3.$$.fragment);
      t5 = space();
      table = element("table");
      tr0 = element("tr");
      td0 = element("td");
      create_component(icon0.$$.fragment);
      t6 = text(" Telefone:");
      t7 = space();
      td1 = element("td");
      t8 = text(t8_value);
      t9 = space();
      tr1 = element("tr");
      td2 = element("td");
      create_component(icon1.$$.fragment);
      t10 = text(" Whatsapp:");
      t11 = space();
      td3 = element("td");
      t12 = text(t12_value);
      t13 = space();
      tr2 = element("tr");
      td4 = element("td");
      create_component(icon2.$$.fragment);
      t14 = text(" Endereço:");
      t15 = space();
      td5 = element("td");
      t16 = text(t16_value);
      t17 = space();
      div1 = element("div");
      t18 = space();
      create_component(button4.$$.fragment);
      t19 = space();
      for (var _i = 0; _i < each_blocks.length; _i += 1) {
        each_blocks[_i].c();
      }
      t20 = space();
      create_component(menumodal.$$.fragment);
      t21 = space();
      create_component(categorymodal.$$.fragment);
      t22 = space();
      create_component(qrmodal.$$.fragment);
      add_location(h1, file$8, 1, 2, 20);
      attr_dev(a, "class", "right");
      attr_dev(a, "href", a_href_value = "/m/".concat( /*menu_names*/ctx[4][/*$menu*/ctx[3].id] || /*$menu*/ctx[3].id));
      attr_dev(a, "target", "_blank");
      add_location(a, file$8, 2, 2, 46);
      attr_dev(div0, "class", "row");
      add_location(div0, file$8, 0, 0, 0);
      attr_dev(td0, "class", "svelte-i7doj6");
      add_location(td0, file$8, 10, 4, 337);
      attr_dev(td1, "class", "svelte-i7doj6");
      add_location(td1, file$8, 11, 4, 381);
      add_location(tr0, file$8, 9, 2, 328);
      attr_dev(td2, "class", "svelte-i7doj6");
      add_location(td2, file$8, 14, 4, 445);
      attr_dev(td3, "class", "svelte-i7doj6");
      add_location(td3, file$8, 15, 4, 489);
      add_location(tr1, file$8, 13, 2, 436);
      attr_dev(td4, "class", "svelte-i7doj6");
      add_location(td4, file$8, 18, 4, 556);
      attr_dev(td5, "class", "svelte-i7doj6");
      add_location(td5, file$8, 19, 4, 600);
      add_location(tr2, file$8, 17, 2, 547);
      add_location(table, file$8, 8, 0, 318);
      attr_dev(div1, "class", "hr");
      add_location(div1, file$8, 23, 0, 665);
    },
    l: function claim(nodes) {
      throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    },
    m: function mount(target, anchor) {
      insert_dev(target, div0, anchor);
      append_dev(div0, h1);
      append_dev(h1, t0);
      append_dev(div0, t1);
      append_dev(div0, a);
      mount_component(button0, a, null);
      append_dev(div0, t2);
      mount_component(button1, div0, null);
      append_dev(div0, t3);
      mount_component(button2, div0, null);
      append_dev(div0, t4);
      mount_component(button3, div0, null);
      insert_dev(target, t5, anchor);
      insert_dev(target, table, anchor);
      append_dev(table, tr0);
      append_dev(tr0, td0);
      mount_component(icon0, td0, null);
      append_dev(td0, t6);
      append_dev(tr0, t7);
      append_dev(tr0, td1);
      append_dev(td1, t8);
      append_dev(table, t9);
      append_dev(table, tr1);
      append_dev(tr1, td2);
      mount_component(icon1, td2, null);
      append_dev(td2, t10);
      append_dev(tr1, t11);
      append_dev(tr1, td3);
      append_dev(td3, t12);
      append_dev(table, t13);
      append_dev(table, tr2);
      append_dev(tr2, td4);
      mount_component(icon2, td4, null);
      append_dev(td4, t14);
      append_dev(tr2, t15);
      append_dev(tr2, td5);
      append_dev(td5, t16);
      insert_dev(target, t17, anchor);
      insert_dev(target, div1, anchor);
      insert_dev(target, t18, anchor);
      mount_component(button4, target, anchor);
      insert_dev(target, t19, anchor);
      for (var _i2 = 0; _i2 < each_blocks.length; _i2 += 1) {
        if (each_blocks[_i2]) {
          each_blocks[_i2].m(target, anchor);
        }
      }
      insert_dev(target, t20, anchor);
      mount_component(menumodal, target, anchor);
      insert_dev(target, t21, anchor);
      mount_component(categorymodal, target, anchor);
      insert_dev(target, t22, anchor);
      mount_component(qrmodal, target, anchor);
      current = true;
    },
    p: function update(ctx, _ref) {
      var _ref2 = _slicedToArray(_ref, 1),
        dirty = _ref2[0];
      if ((!current || dirty & /*$menu*/8) && t0_value !== (t0_value = /*$menu*/ctx[3].name + "")) set_data_dev(t0, t0_value);
      if (!current || dirty & /*$menu*/8 && a_href_value !== (a_href_value = "/m/".concat( /*menu_names*/ctx[4][/*$menu*/ctx[3].id] || /*$menu*/ctx[3].id))) {
        attr_dev(a, "href", a_href_value);
      }
      if ((!current || dirty & /*$menu*/8) && t8_value !== (t8_value = ( /*$menu*/ctx[3].phone || 'Não informado.') + "")) set_data_dev(t8, t8_value);
      if ((!current || dirty & /*$menu*/8) && t12_value !== (t12_value = ( /*$menu*/ctx[3].whatsapp || 'Não informado.') + "")) set_data_dev(t12, t12_value);
      if ((!current || dirty & /*$menu*/8) && t16_value !== (t16_value = ( /*$menu*/ctx[3].address || 'Não informado.') + "")) set_data_dev(t16, t16_value);
      if (dirty & /*$menu*/8) {
        each_value = /*$menu*/ctx[3].categories || [];
        validate_each_argument(each_value);
        var _i3;
        for (_i3 = 0; _i3 < each_value.length; _i3 += 1) {
          var child_ctx = get_each_context$3(ctx, each_value, _i3);
          if (each_blocks[_i3]) {
            each_blocks[_i3].p(child_ctx, dirty);
            transition_in(each_blocks[_i3], 1);
          } else {
            each_blocks[_i3] = create_each_block$3(child_ctx);
            each_blocks[_i3].c();
            transition_in(each_blocks[_i3], 1);
            each_blocks[_i3].m(t20.parentNode, t20);
          }
        }
        group_outros();
        for (_i3 = each_value.length; _i3 < each_blocks.length; _i3 += 1) {
          out(_i3);
        }
        check_outros();
      }
      var menumodal_changes = {};
      if (!updating_show && dirty & /*m_edit*/1) {
        updating_show = true;
        menumodal_changes.show = /*m_edit*/ctx[0];
        add_flush_callback(function () {
          return updating_show = false;
        });
      }
      menumodal.$set(menumodal_changes);
      var categorymodal_changes = {};
      if (!updating_show_1 && dirty & /*m_create_category*/2) {
        updating_show_1 = true;
        categorymodal_changes.show = /*m_create_category*/ctx[1];
        add_flush_callback(function () {
          return updating_show_1 = false;
        });
      }
      categorymodal.$set(categorymodal_changes);
      var qrmodal_changes = {};
      if (!updating_show_2 && dirty & /*m_qr*/4) {
        updating_show_2 = true;
        qrmodal_changes.show = /*m_qr*/ctx[2];
        add_flush_callback(function () {
          return updating_show_2 = false;
        });
      }
      qrmodal.$set(qrmodal_changes);
    },
    i: function intro(local) {
      if (current) return;
      transition_in(button0.$$.fragment, local);
      transition_in(button1.$$.fragment, local);
      transition_in(button2.$$.fragment, local);
      transition_in(button3.$$.fragment, local);
      transition_in(icon0.$$.fragment, local);
      transition_in(icon1.$$.fragment, local);
      transition_in(icon2.$$.fragment, local);
      transition_in(button4.$$.fragment, local);
      for (var _i4 = 0; _i4 < each_value.length; _i4 += 1) {
        transition_in(each_blocks[_i4]);
      }
      transition_in(menumodal.$$.fragment, local);
      transition_in(categorymodal.$$.fragment, local);
      transition_in(qrmodal.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(button0.$$.fragment, local);
      transition_out(button1.$$.fragment, local);
      transition_out(button2.$$.fragment, local);
      transition_out(button3.$$.fragment, local);
      transition_out(icon0.$$.fragment, local);
      transition_out(icon1.$$.fragment, local);
      transition_out(icon2.$$.fragment, local);
      transition_out(button4.$$.fragment, local);
      each_blocks = each_blocks.filter(Boolean);
      for (var _i5 = 0; _i5 < each_blocks.length; _i5 += 1) {
        transition_out(each_blocks[_i5]);
      }
      transition_out(menumodal.$$.fragment, local);
      transition_out(categorymodal.$$.fragment, local);
      transition_out(qrmodal.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching) detach_dev(div0);
      destroy_component(button0);
      destroy_component(button1);
      destroy_component(button2);
      destroy_component(button3);
      if (detaching) detach_dev(t5);
      if (detaching) detach_dev(table);
      destroy_component(icon0);
      destroy_component(icon1);
      destroy_component(icon2);
      if (detaching) detach_dev(t17);
      if (detaching) detach_dev(div1);
      if (detaching) detach_dev(t18);
      destroy_component(button4, detaching);
      if (detaching) detach_dev(t19);
      destroy_each(each_blocks, detaching);
      if (detaching) detach_dev(t20);
      destroy_component(menumodal, detaching);
      if (detaching) detach_dev(t21);
      destroy_component(categorymodal, detaching);
      if (detaching) detach_dev(t22);
      destroy_component(qrmodal, detaching);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_fragment$8.name,
    type: "component",
    source: "",
    ctx: ctx
  });
  return block;
}
function instance$8($$self, $$props, $$invalidate) {
  var $menu;
  validate_store(menu, 'menu');
  component_subscribe($$self, menu, function ($$value) {
    return $$invalidate(3, $menu = $$value);
  });
  var _$$props$$$slots = $$props.$$slots,
    slots = _$$props$$$slots === void 0 ? {} : _$$props$$$slots;
    $$props.$$scope;
  validate_slots('MenuEdit', slots, []);
  var menu_names = {
    'clyp7z8db0000cxl6arjgaa23': 'adeildo-lanches'
  };
  var m_edit, m_create_category, m_qr;
  function edit() {
    $$invalidate(0, m_edit = 1);
  }
  function create_qr() {
    $$invalidate(2, m_qr = 1);
  }
  function create_category() {
    $$invalidate(1, m_create_category = 1);
  }
  function logout() {
    if (!confirm('Certeza que deseja sair dessa conta?')) return;
    api("logout/".concat(session_id));
    localStorage.removeItem('session_id');
    session_id.set();
    menu.set();
  }
  var writable_props = [];
  Object.keys($$props).forEach(function (key) {
    if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn("<MenuEdit> was created with unknown prop '".concat(key, "'"));
  });
  function menumodal_show_binding(value) {
    m_edit = value;
    $$invalidate(0, m_edit);
  }
  function categorymodal_show_binding(value) {
    m_create_category = value;
    $$invalidate(1, m_create_category);
  }
  function qrmodal_show_binding(value) {
    m_qr = value;
    $$invalidate(2, m_qr);
  }
  $$self.$capture_state = function () {
    return {
      CategoryModal: CategoryModal,
      CategoryCard: CategoryCard,
      MenuModal: MenuModal,
      QRModal: QRModal,
      Button: Button,
      Icon: Icon,
      session_id: session_id,
      menu: menu,
      api: api,
      menu_names: menu_names,
      m_edit: m_edit,
      m_create_category: m_create_category,
      m_qr: m_qr,
      edit: edit,
      create_qr: create_qr,
      create_category: create_category,
      logout: logout,
      $menu: $menu
    };
  };
  $$self.$inject_state = function ($$props) {
    if ('menu_names' in $$props) $$invalidate(4, menu_names = $$props.menu_names);
    if ('m_edit' in $$props) $$invalidate(0, m_edit = $$props.m_edit);
    if ('m_create_category' in $$props) $$invalidate(1, m_create_category = $$props.m_create_category);
    if ('m_qr' in $$props) $$invalidate(2, m_qr = $$props.m_qr);
  };
  if ($$props && "$$inject" in $$props) {
    $$self.$inject_state($$props.$$inject);
  }
  return [m_edit, m_create_category, m_qr, $menu, menu_names, edit, create_qr, create_category, logout, menumodal_show_binding, categorymodal_show_binding, qrmodal_show_binding];
}
var MenuEdit = /*#__PURE__*/function (_SvelteComponentDev) {
  function MenuEdit(options) {
    var _this;
    _classCallCheck(this, MenuEdit);
    _this = _callSuper(this, MenuEdit, [options]);
    init(_this, options, instance$8, create_fragment$8, safe_not_equal, {});
    dispatch_dev("SvelteRegisterComponent", {
      component: _this,
      tagName: "MenuEdit",
      options: options,
      id: create_fragment$8.name
    });
    return _this;
  }
  _inherits(MenuEdit, _SvelteComponentDev);
  return _createClass(MenuEdit);
}(SvelteComponentDev);

var file$7 = "web/components/TopBarItem.svelte";
function create_fragment$7(ctx) {
  var li;
  var icon;
  var t0;
  var t1;
  var current;
  var mounted;
  var dispose;
  icon = new Icon({
    props: {
      i: /*i*/ctx[2]
    },
    $$inline: true
  });
  var block = {
    c: function create() {
      li = element("li");
      create_component(icon.$$.fragment);
      t0 = space();
      t1 = text( /*name*/ctx[1]);
      attr_dev(li, "class", "row");
      toggle_class(li, "active", /*$curr_page*/ctx[3] == /*page*/ctx[0]);
      add_location(li, file$7, 1, 0, 57);
    },
    l: function claim(nodes) {
      throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    },
    m: function mount(target, anchor) {
      insert_dev(target, li, anchor);
      mount_component(icon, li, null);
      append_dev(li, t0);
      append_dev(li, t1);
      current = true;
      if (!mounted) {
        dispose = listen_dev(li, "click", /*enter*/ctx[4], false, false, false, false);
        mounted = true;
      }
    },
    p: function update(ctx, _ref) {
      var _ref2 = _slicedToArray(_ref, 1),
        dirty = _ref2[0];
      var icon_changes = {};
      if (dirty & /*i*/4) icon_changes.i = /*i*/ctx[2];
      icon.$set(icon_changes);
      if (!current || dirty & /*name*/2) set_data_dev(t1, /*name*/ctx[1]);
      if (!current || dirty & /*$curr_page, page*/9) {
        toggle_class(li, "active", /*$curr_page*/ctx[3] == /*page*/ctx[0]);
      }
    },
    i: function intro(local) {
      if (current) return;
      transition_in(icon.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(icon.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching) detach_dev(li);
      destroy_component(icon);
      mounted = false;
      dispose();
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_fragment$7.name,
    type: "component",
    source: "",
    ctx: ctx
  });
  return block;
}
function instance$7($$self, $$props, $$invalidate) {
  var $curr_page;
  validate_store(curr_page, 'curr_page');
  component_subscribe($$self, curr_page, function ($$value) {
    return $$invalidate(3, $curr_page = $$value);
  });
  var _$$props$$$slots = $$props.$$slots,
    slots = _$$props$$$slots === void 0 ? {} : _$$props$$$slots;
    $$props.$$scope;
  validate_slots('TopBarItem', slots, []);
  var page = $$props.page,
    name = $$props.name,
    i = $$props.i;
  function enter() {
    curr_page.set(page);
    document.querySelector('main').scrollTop = 0;
  }
  $$self.$$.on_mount.push(function () {
    if (page === undefined && !('page' in $$props || $$self.$$.bound[$$self.$$.props['page']])) {
      console.warn("<TopBarItem> was created without expected prop 'page'");
    }
    if (name === undefined && !('name' in $$props || $$self.$$.bound[$$self.$$.props['name']])) {
      console.warn("<TopBarItem> was created without expected prop 'name'");
    }
    if (i === undefined && !('i' in $$props || $$self.$$.bound[$$self.$$.props['i']])) {
      console.warn("<TopBarItem> was created without expected prop 'i'");
    }
  });
  var writable_props = ['page', 'name', 'i'];
  Object.keys($$props).forEach(function (key) {
    if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn("<TopBarItem> was created with unknown prop '".concat(key, "'"));
  });
  $$self.$$set = function ($$props) {
    if ('page' in $$props) $$invalidate(0, page = $$props.page);
    if ('name' in $$props) $$invalidate(1, name = $$props.name);
    if ('i' in $$props) $$invalidate(2, i = $$props.i);
  };
  $$self.$capture_state = function () {
    return {
      Icon: Icon,
      curr_page: curr_page,
      page: page,
      name: name,
      i: i,
      enter: enter,
      $curr_page: $curr_page
    };
  };
  $$self.$inject_state = function ($$props) {
    if ('page' in $$props) $$invalidate(0, page = $$props.page);
    if ('name' in $$props) $$invalidate(1, name = $$props.name);
    if ('i' in $$props) $$invalidate(2, i = $$props.i);
  };
  if ($$props && "$$inject" in $$props) {
    $$self.$inject_state($$props.$$inject);
  }
  return [page, name, i, $curr_page, enter];
}
var TopBarItem = /*#__PURE__*/function (_SvelteComponentDev) {
  function TopBarItem(options) {
    var _this;
    _classCallCheck(this, TopBarItem);
    _this = _callSuper(this, TopBarItem, [options]);
    init(_this, options, instance$7, create_fragment$7, safe_not_equal, {
      page: 0,
      name: 1,
      i: 2
    });
    dispatch_dev("SvelteRegisterComponent", {
      component: _this,
      tagName: "TopBarItem",
      options: options,
      id: create_fragment$7.name
    });
    return _this;
  }
  _inherits(TopBarItem, _SvelteComponentDev);
  return _createClass(TopBarItem, [{
    key: "page",
    get: function get() {
      throw new Error("<TopBarItem>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    },
    set: function set(value) {
      throw new Error("<TopBarItem>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    }
  }, {
    key: "name",
    get: function get() {
      throw new Error("<TopBarItem>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    },
    set: function set(value) {
      throw new Error("<TopBarItem>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    }
  }, {
    key: "i",
    get: function get() {
      throw new Error("<TopBarItem>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    },
    set: function set(value) {
      throw new Error("<TopBarItem>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    }
  }]);
}(SvelteComponentDev);

var css_248z$4 = ".topbar.svelte-gt0cw1{background:var(--bg0)}ul.svelte-gt0cw1{justify-content:center;gap:40px;padding:20px 0;margin:0}ul.svelte-gt0cw1 li{border-radius:5px;padding:10px;cursor:pointer}ul.svelte-gt0cw1 li:hover{background:var(--bg0)}ul.svelte-gt0cw1 li.active{background:var(--bg1);color:var(--fg1) !important}@supports (-webkit-touch-callout: none){.topbar.svelte-gt0cw1{padding-top:80px}}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlRvcEJhci5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsc0JBQXNCLHFCQUFxQixDQUFDLGlCQUFpQixzQkFBc0IsQ0FBQyxRQUFRLENBQUMsY0FBYyxDQUFDLFFBQVEsQ0FBQyxvQkFBb0IsaUJBQWlCLENBQUMsWUFBWSxDQUFDLGNBQWMsQ0FBQywwQkFBMEIscUJBQXFCLENBQUMsMkJBQTJCLHFCQUFxQixDQUFDLDJCQUEyQixDQUFDLHdDQUF3QyxzQkFBc0IsZ0JBQWdCLENBQUMiLCJmaWxlIjoiVG9wQmFyLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi50b3BiYXIuc3ZlbHRlLWd0MGN3MXtiYWNrZ3JvdW5kOnZhcigtLWJnMCl9dWwuc3ZlbHRlLWd0MGN3MXtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyO2dhcDo0MHB4O3BhZGRpbmc6MjBweCAwO21hcmdpbjowfXVsLnN2ZWx0ZS1ndDBjdzEgbGl7Ym9yZGVyLXJhZGl1czo1cHg7cGFkZGluZzoxMHB4O2N1cnNvcjpwb2ludGVyfXVsLnN2ZWx0ZS1ndDBjdzEgbGk6aG92ZXJ7YmFja2dyb3VuZDp2YXIoLS1iZzApfXVsLnN2ZWx0ZS1ndDBjdzEgbGkuYWN0aXZle2JhY2tncm91bmQ6dmFyKC0tYmcxKTtjb2xvcjp2YXIoLS1mZzEpICFpbXBvcnRhbnR9QHN1cHBvcnRzICgtd2Via2l0LXRvdWNoLWNhbGxvdXQ6IG5vbmUpey50b3BiYXIuc3ZlbHRlLWd0MGN3MXtwYWRkaW5nLXRvcDo4MHB4fX0iXX0= */";
styleInject(css_248z$4);

var file$6 = "web/components/TopBar.svelte";

// (6:4) {:else}
function create_else_block$2(ctx) {
  var topbaritem;
  var current;
  topbaritem = new TopBarItem({
    props: {
      page: "login",
      name: "Login",
      i: "login"
    },
    $$inline: true
  });
  var block = {
    c: function create() {
      create_component(topbaritem.$$.fragment);
    },
    m: function mount(target, anchor) {
      mount_component(topbaritem, target, anchor);
      current = true;
    },
    i: function intro(local) {
      if (current) return;
      transition_in(topbaritem.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(topbaritem.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      destroy_component(topbaritem, detaching);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_else_block$2.name,
    type: "else",
    source: "(6:4) {:else}",
    ctx: ctx
  });
  return block;
}

// (3:4) {#if $session_id}
function create_if_block_1$2(ctx) {
  var topbaritem0;
  var t;
  var topbaritem1;
  var current;
  topbaritem0 = new TopBarItem({
    props: {
      page: "menu",
      name: "Cardápio",
      i: "restaurant_menu"
    },
    $$inline: true
  });
  topbaritem1 = new TopBarItem({
    props: {
      page: "items",
      name: "Produtos",
      i: "lunch_dining"
    },
    $$inline: true
  });
  var block = {
    c: function create() {
      create_component(topbaritem0.$$.fragment);
      t = space();
      create_component(topbaritem1.$$.fragment);
    },
    m: function mount(target, anchor) {
      mount_component(topbaritem0, target, anchor);
      insert_dev(target, t, anchor);
      mount_component(topbaritem1, target, anchor);
      current = true;
    },
    i: function intro(local) {
      if (current) return;
      transition_in(topbaritem0.$$.fragment, local);
      transition_in(topbaritem1.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(topbaritem0.$$.fragment, local);
      transition_out(topbaritem1.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      destroy_component(topbaritem0, detaching);
      if (detaching) detach_dev(t);
      destroy_component(topbaritem1, detaching);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_if_block_1$2.name,
    type: "if",
    source: "(3:4) {#if $session_id}",
    ctx: ctx
  });
  return block;
}

// (9:4) {#if window.location.href.endsWith('adm')}
function create_if_block$4(ctx) {
  var topbaritem;
  var current;
  topbaritem = new TopBarItem({
    props: {
      page: "admin",
      name: "Admin",
      i: "build"
    },
    $$inline: true
  });
  var block = {
    c: function create() {
      create_component(topbaritem.$$.fragment);
    },
    m: function mount(target, anchor) {
      mount_component(topbaritem, target, anchor);
      current = true;
    },
    i: function intro(local) {
      if (current) return;
      transition_in(topbaritem.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(topbaritem.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      destroy_component(topbaritem, detaching);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_if_block$4.name,
    type: "if",
    source: "(9:4) {#if window.location.href.endsWith('adm')}",
    ctx: ctx
  });
  return block;
}
function create_fragment$6(ctx) {
  var div;
  var ul;
  var current_block_type_index;
  var if_block0;
  var t;
  var show_if = window.location.href.endsWith('adm');
  var current;
  var if_block_creators = [create_if_block_1$2, create_else_block$2];
  var if_blocks = [];
  function select_block_type(ctx, dirty) {
    if ( /*$session_id*/ctx[0]) return 0;
    return 1;
  }
  current_block_type_index = select_block_type(ctx);
  if_block0 = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
  var if_block1 = show_if && create_if_block$4(ctx);
  var block = {
    c: function create() {
      div = element("div");
      ul = element("ul");
      if_block0.c();
      t = space();
      if (if_block1) if_block1.c();
      attr_dev(ul, "class", "row svelte-gt0cw1");
      add_location(ul, file$6, 1, 2, 31);
      attr_dev(div, "class", "usn tac topbar svelte-gt0cw1");
      add_location(div, file$6, 0, 0, 0);
    },
    l: function claim(nodes) {
      throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    },
    m: function mount(target, anchor) {
      insert_dev(target, div, anchor);
      append_dev(div, ul);
      if_blocks[current_block_type_index].m(ul, null);
      append_dev(ul, t);
      if (if_block1) if_block1.m(ul, null);
      current = true;
    },
    p: function update(ctx, _ref) {
      var _ref2 = _slicedToArray(_ref, 1);
        _ref2[0];
      var previous_block_index = current_block_type_index;
      current_block_type_index = select_block_type(ctx);
      if (current_block_type_index !== previous_block_index) {
        group_outros();
        transition_out(if_blocks[previous_block_index], 1, 1, function () {
          if_blocks[previous_block_index] = null;
        });
        check_outros();
        if_block0 = if_blocks[current_block_type_index];
        if (!if_block0) {
          if_block0 = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
          if_block0.c();
        }
        transition_in(if_block0, 1);
        if_block0.m(ul, t);
      }
    },
    i: function intro(local) {
      if (current) return;
      transition_in(if_block0);
      transition_in(if_block1);
      current = true;
    },
    o: function outro(local) {
      transition_out(if_block0);
      transition_out(if_block1);
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching) detach_dev(div);
      if_blocks[current_block_type_index].d();
      if (if_block1) if_block1.d();
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_fragment$6.name,
    type: "component",
    source: "",
    ctx: ctx
  });
  return block;
}
function instance$6($$self, $$props, $$invalidate) {
  var $session_id;
  validate_store(session_id, 'session_id');
  component_subscribe($$self, session_id, function ($$value) {
    return $$invalidate(0, $session_id = $$value);
  });
  var _$$props$$$slots = $$props.$$slots,
    slots = _$$props$$$slots === void 0 ? {} : _$$props$$$slots;
    $$props.$$scope;
  validate_slots('TopBar', slots, []);
  var writable_props = [];
  Object.keys($$props).forEach(function (key) {
    if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn("<TopBar> was created with unknown prop '".concat(key, "'"));
  });
  $$self.$capture_state = function () {
    return {
      TopBarItem: TopBarItem,
      session_id: session_id,
      $session_id: $session_id
    };
  };
  return [$session_id];
}
var TopBar = /*#__PURE__*/function (_SvelteComponentDev) {
  function TopBar(options) {
    var _this;
    _classCallCheck(this, TopBar);
    _this = _callSuper(this, TopBar, [options]);
    init(_this, options, instance$6, create_fragment$6, safe_not_equal, {});
    dispatch_dev("SvelteRegisterComponent", {
      component: _this,
      tagName: "TopBar",
      options: options,
      id: create_fragment$6.name
    });
    return _this;
  }
  _inherits(TopBar, _SvelteComponentDev);
  return _createClass(TopBar);
}(SvelteComponentDev);

var css_248z$3 = "form.svelte-19zgwbn{max-width:300px;margin:0 auto}input.svelte-19zgwbn,button.svelte-19zgwbn{width:100% !important;margin:10px 0;resize:none}h2.svelte-19zgwbn{margin-bottom:20px}div.svelte-19zgwbn{margin-bottom:30px}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkxvZ2luLmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0IsZUFBZSxDQUFDLGFBQWEsQ0FBQywyQ0FBMkMscUJBQXFCLENBQUMsYUFBYSxDQUFDLFdBQVcsQ0FBQyxrQkFBa0Isa0JBQWtCLENBQUMsbUJBQW1CLGtCQUFrQiIsImZpbGUiOiJMb2dpbi5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJmb3JtLnN2ZWx0ZS0xOXpnd2Jue21heC13aWR0aDozMDBweDttYXJnaW46MCBhdXRvfWlucHV0LnN2ZWx0ZS0xOXpnd2JuLGJ1dHRvbi5zdmVsdGUtMTl6Z3dibnt3aWR0aDoxMDAlICFpbXBvcnRhbnQ7bWFyZ2luOjEwcHggMDtyZXNpemU6bm9uZX1oMi5zdmVsdGUtMTl6Z3dibnttYXJnaW4tYm90dG9tOjIwcHh9ZGl2LnN2ZWx0ZS0xOXpnd2Jue21hcmdpbi1ib3R0b206MzBweH0iXX0= */";
styleInject(css_248z$3);

var file$5 = "web/routes/Login.svelte";

// (8:2) {#if error}
function create_if_block$3(ctx) {
  var p;
  var t;
  var block = {
    c: function create() {
      p = element("p");
      t = text( /*error*/ctx[1]);
      attr_dev(p, "class", "red");
      add_location(p, file$5, 7, 14, 208);
    },
    m: function mount(target, anchor) {
      insert_dev(target, p, anchor);
      append_dev(p, t);
    },
    p: function update(ctx, dirty) {
      if (dirty & /*error*/2) set_data_dev(t, /*error*/ctx[1]);
    },
    d: function destroy(detaching) {
      if (detaching) detach_dev(p);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_if_block$3.name,
    type: "if",
    source: "(8:2) {#if error}",
    ctx: ctx
  });
  return block;
}
function create_fragment$5(ctx) {
  var div0;
  var h2;
  var t0;
  var a;
  var t2;
  var div1;
  var t3;
  var form;
  var t4;
  var label0;
  var t5;
  var input0;
  var t6;
  var label1;
  var t7;
  var div2;
  var input1;
  var t8;
  var input2;
  var t9;
  var icon;
  var t10;
  var button;
  var t11_value = ( /*l_submitting*/ctx[3] ? '...' : 'Entrar') + "";
  var t11;
  var current;
  var mounted;
  var dispose;
  var if_block = /*error*/ctx[1] && create_if_block$3(ctx);
  icon = new Icon({
    props: {
      i: /*show_password*/ctx[2] ? 'visibility_off' : 'visibility'
    },
    $$inline: true
  });
  icon.$on("click", /*toggle_show_password*/ctx[4]);
  var block = {
    c: function create() {
      div0 = element("div");
      h2 = element("h2");
      t0 = text("Invista em profissionalismo  com a ");
      a = element("a");
      a.textContent = "vMenu";
      t2 = space();
      div1 = element("div");
      t3 = space();
      form = element("form");
      if (if_block) if_block.c();
      t4 = space();
      label0 = element("label");
      t5 = text("Nome:\n    ");
      input0 = element("input");
      t6 = space();
      label1 = element("label");
      t7 = text("Senha:\n    ");
      div2 = element("div");
      input1 = element("input");
      t8 = space();
      input2 = element("input");
      t9 = space();
      create_component(icon.$$.fragment);
      t10 = space();
      button = element("button");
      t11 = text(t11_value);
      attr_dev(a, "class", "grn");
      attr_dev(a, "href", "mailto:valealan84@gmail.com");
      add_location(a, file$5, 1, 42, 60);
      attr_dev(h2, "class", "svelte-19zgwbn");
      add_location(h2, file$5, 1, 2, 20);
      attr_dev(div0, "class", "tac svelte-19zgwbn");
      add_location(div0, file$5, 0, 0, 0);
      attr_dev(div1, "class", "hr svelte-19zgwbn");
      add_location(div1, file$5, 4, 0, 136);
      attr_dev(input0, "type", "text");
      input0.required = true;
      attr_dev(input0, "class", "svelte-19zgwbn");
      add_location(input0, file$5, 10, 4, 264);
      add_location(label0, file$5, 9, 2, 246);
      attr_dev(input1, "type", "password");
      set_style(input1, "display", /*show_password*/ctx[2] ? 'none' : 'block');
      attr_dev(input1, "class", "svelte-19zgwbn");
      add_location(input1, file$5, 15, 6, 394);
      attr_dev(input2, "type", "text");
      set_style(input2, "display", /*show_password*/ctx[2] ? 'block' : 'none');
      attr_dev(input2, "class", "svelte-19zgwbn");
      add_location(input2, file$5, 16, 6, 506);
      attr_dev(div2, "class", "password-container svelte-19zgwbn");
      add_location(div2, file$5, 14, 4, 355);
      add_location(label1, file$5, 13, 2, 336);
      attr_dev(button, "type", "submit");
      button.disabled = /*l_submitting*/ctx[3];
      attr_dev(button, "class", "svelte-19zgwbn");
      add_location(button, file$5, 21, 2, 737);
      attr_dev(form, "class", "tas svelte-19zgwbn");
      add_location(form, file$5, 6, 0, 156);
    },
    l: function claim(nodes) {
      throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    },
    m: function mount(target, anchor) {
      insert_dev(target, div0, anchor);
      append_dev(div0, h2);
      append_dev(h2, t0);
      append_dev(h2, a);
      insert_dev(target, t2, anchor);
      insert_dev(target, div1, anchor);
      insert_dev(target, t3, anchor);
      insert_dev(target, form, anchor);
      if (if_block) if_block.m(form, null);
      append_dev(form, t4);
      append_dev(form, label0);
      append_dev(label0, t5);
      append_dev(label0, input0);
      set_input_value(input0, /*user*/ctx[0].username);
      append_dev(form, t6);
      append_dev(form, label1);
      append_dev(label1, t7);
      append_dev(label1, div2);
      append_dev(div2, input1);
      set_input_value(input1, /*user*/ctx[0].password);
      append_dev(div2, t8);
      append_dev(div2, input2);
      set_input_value(input2, /*user*/ctx[0].password);
      append_dev(div2, t9);
      mount_component(icon, div2, null);
      append_dev(form, t10);
      append_dev(form, button);
      append_dev(button, t11);
      current = true;
      if (!mounted) {
        dispose = [listen_dev(input0, "input", /*input0_input_handler*/ctx[6]), listen_dev(input1, "input", /*input1_input_handler*/ctx[7]), listen_dev(input2, "input", /*input2_input_handler*/ctx[8]), listen_dev(form, "submit", /*submit*/ctx[5], false, false, false, false)];
        mounted = true;
      }
    },
    p: function update(ctx, _ref) {
      var _ref2 = _slicedToArray(_ref, 1),
        dirty = _ref2[0];
      if ( /*error*/ctx[1]) {
        if (if_block) {
          if_block.p(ctx, dirty);
        } else {
          if_block = create_if_block$3(ctx);
          if_block.c();
          if_block.m(form, t4);
        }
      } else if (if_block) {
        if_block.d(1);
        if_block = null;
      }
      if (dirty & /*user*/1 && input0.value !== /*user*/ctx[0].username) {
        set_input_value(input0, /*user*/ctx[0].username);
      }
      if (!current || dirty & /*show_password*/4) {
        set_style(input1, "display", /*show_password*/ctx[2] ? 'none' : 'block');
      }
      if (dirty & /*user*/1 && input1.value !== /*user*/ctx[0].password) {
        set_input_value(input1, /*user*/ctx[0].password);
      }
      if (!current || dirty & /*show_password*/4) {
        set_style(input2, "display", /*show_password*/ctx[2] ? 'block' : 'none');
      }
      if (dirty & /*user*/1 && input2.value !== /*user*/ctx[0].password) {
        set_input_value(input2, /*user*/ctx[0].password);
      }
      var icon_changes = {};
      if (dirty & /*show_password*/4) icon_changes.i = /*show_password*/ctx[2] ? 'visibility_off' : 'visibility';
      icon.$set(icon_changes);
      if ((!current || dirty & /*l_submitting*/8) && t11_value !== (t11_value = ( /*l_submitting*/ctx[3] ? '...' : 'Entrar') + "")) set_data_dev(t11, t11_value);
      if (!current || dirty & /*l_submitting*/8) {
        prop_dev(button, "disabled", /*l_submitting*/ctx[3]);
      }
    },
    i: function intro(local) {
      if (current) return;
      transition_in(icon.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(icon.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching) detach_dev(div0);
      if (detaching) detach_dev(t2);
      if (detaching) detach_dev(div1);
      if (detaching) detach_dev(t3);
      if (detaching) detach_dev(form);
      if (if_block) if_block.d();
      destroy_component(icon);
      mounted = false;
      run_all(dispose);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_fragment$5.name,
    type: "component",
    source: "",
    ctx: ctx
  });
  return block;
}
function instance$5($$self, $$props, $$invalidate) {
  var _$$props$$$slots = $$props.$$slots,
    slots = _$$props$$$slots === void 0 ? {} : _$$props$$$slots;
    $$props.$$scope;
  validate_slots('Login', slots, []);
  var user = {
    username: '',
    password: ''
  };
  var error, show_password;
  var l_submitting;
  function toggle_show_password() {
    $$invalidate(2, show_password = !show_password);
  }
  function submit(_x) {
    return _submit.apply(this, arguments);
  }
  function _submit() {
    _submit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(e) {
      var _yield$api, res, data;
      return _regeneratorRuntime().wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            e.preventDefault();
            $$invalidate(1, error = '');
            $$invalidate(3, l_submitting = true);
            _context.next = 5;
            return api('login', 'POST', user);
          case 5:
            _yield$api = _context.sent;
            res = _yield$api.res;
            data = _yield$api.data;
            $$invalidate(3, l_submitting = false);
            if (!res.ok) {
              _context.next = 18;
              break;
            }
            localStorage.setItem('session_id', data.session.id);
            session_id.set(data.session.id);
            _context.t0 = menu;
            _context.next = 15;
            return api("menu/".concat(data.session.menu_id));
          case 15:
            _context.t1 = _context.sent.data.menu;
            _context.t0.set.call(_context.t0, _context.t1);
            return _context.abrupt("return");
          case 18:
            $$invalidate(0, user.username = '', user);
            $$invalidate(0, user.password = '', user);
            $$invalidate(1, error = 'Credenciais inválidas');
          case 21:
          case "end":
            return _context.stop();
        }
      }, _callee);
    }));
    return _submit.apply(this, arguments);
  }
  var writable_props = [];
  Object.keys($$props).forEach(function (key) {
    if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn("<Login> was created with unknown prop '".concat(key, "'"));
  });
  function input0_input_handler() {
    user.username = this.value;
    $$invalidate(0, user);
  }
  function input1_input_handler() {
    user.password = this.value;
    $$invalidate(0, user);
  }
  function input2_input_handler() {
    user.password = this.value;
    $$invalidate(0, user);
  }
  $$self.$capture_state = function () {
    return {
      Icon: Icon,
      session_id: session_id,
      menu: menu,
      api: api,
      user: user,
      error: error,
      show_password: show_password,
      l_submitting: l_submitting,
      toggle_show_password: toggle_show_password,
      submit: submit
    };
  };
  $$self.$inject_state = function ($$props) {
    if ('user' in $$props) $$invalidate(0, user = $$props.user);
    if ('error' in $$props) $$invalidate(1, error = $$props.error);
    if ('show_password' in $$props) $$invalidate(2, show_password = $$props.show_password);
    if ('l_submitting' in $$props) $$invalidate(3, l_submitting = $$props.l_submitting);
  };
  if ($$props && "$$inject" in $$props) {
    $$self.$inject_state($$props.$$inject);
  }
  return [user, error, show_password, l_submitting, toggle_show_password, submit, input0_input_handler, input1_input_handler, input2_input_handler];
}
var Login = /*#__PURE__*/function (_SvelteComponentDev) {
  function Login(options) {
    var _this;
    _classCallCheck(this, Login);
    _this = _callSuper(this, Login, [options]);
    init(_this, options, instance$5, create_fragment$5, safe_not_equal, {});
    dispatch_dev("SvelteRegisterComponent", {
      component: _this,
      tagName: "Login",
      options: options,
      id: create_fragment$5.name
    });
    return _this;
  }
  _inherits(Login, _SvelteComponentDev);
  return _createClass(Login);
}(SvelteComponentDev);

var file$4 = "web/routes/menus/adeildo-lanches/Item.svelte";
function get_each_context$2(ctx, list, i) {
  var child_ctx = ctx.slice();
  child_ctx[8] = list[i];
  return child_ctx;
}

// (1:0) {#if image_i != undefined}
function create_if_block_2$1(ctx) {
  var div;
  var each_value = /*images*/ctx[3][/*plain_name*/ctx[4]][/*image_i*/ctx[2]] || [];
  validate_each_argument(each_value);
  var each_blocks = [];
  for (var i = 0; i < each_value.length; i += 1) {
    each_blocks[i] = create_each_block$2(get_each_context$2(ctx, each_value, i));
  }
  var block = {
    c: function create() {
      div = element("div");
      for (var _i = 0; _i < each_blocks.length; _i += 1) {
        each_blocks[_i].c();
      }
      attr_dev(div, "class", "images items-image");
      add_location(div, file$4, 1, 2, 29);
    },
    m: function mount(target, anchor) {
      insert_dev(target, div, anchor);
      for (var _i2 = 0; _i2 < each_blocks.length; _i2 += 1) {
        if (each_blocks[_i2]) {
          each_blocks[_i2].m(div, null);
        }
      }
    },
    p: function update(ctx, dirty) {
      if (dirty & /*menu, images, plain_name, image_i*/30) {
        each_value = /*images*/ctx[3][/*plain_name*/ctx[4]][/*image_i*/ctx[2]] || [];
        validate_each_argument(each_value);
        var _i3;
        for (_i3 = 0; _i3 < each_value.length; _i3 += 1) {
          var child_ctx = get_each_context$2(ctx, each_value, _i3);
          if (each_blocks[_i3]) {
            each_blocks[_i3].p(child_ctx, dirty);
          } else {
            each_blocks[_i3] = create_each_block$2(child_ctx);
            each_blocks[_i3].c();
            each_blocks[_i3].m(div, null);
          }
        }
        for (; _i3 < each_blocks.length; _i3 += 1) {
          each_blocks[_i3].d(1);
        }
        each_blocks.length = each_value.length;
      }
    },
    d: function destroy(detaching) {
      if (detaching) detach_dev(div);
      destroy_each(each_blocks, detaching);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_if_block_2$1.name,
    type: "if",
    source: "(1:0) {#if image_i != undefined}",
    ctx: ctx
  });
  return block;
}

// (3:4) {#each images[plain_name][image_i] || [] as image}
function create_each_block$2(ctx) {
  var img;
  var img_src_value;
  var block = {
    c: function create() {
      img = element("img");
      if (!src_url_equal(img.src, img_src_value = "/assets/img/".concat( /*menu*/ctx[1].path, "/").concat( /*image*/ctx[8], ".png"))) attr_dev(img, "src", img_src_value);
      attr_dev(img, "alt", "");
      add_location(img, file$4, 3, 6, 123);
    },
    m: function mount(target, anchor) {
      insert_dev(target, img, anchor);
    },
    p: function update(ctx, dirty) {
      if (dirty & /*menu, image_i*/6 && !src_url_equal(img.src, img_src_value = "/assets/img/".concat( /*menu*/ctx[1].path, "/").concat( /*image*/ctx[8], ".png"))) {
        attr_dev(img, "src", img_src_value);
      }
    },
    d: function destroy(detaching) {
      if (detaching) detach_dev(img);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_each_block$2.name,
    type: "each",
    source: "(3:4) {#each images[plain_name][image_i] || [] as image}",
    ctx: ctx
  });
  return block;
}

// (12:4) {#if !item.description}
function create_if_block_1$1(ctx) {
  var div;
  var block = {
    c: function create() {
      div = element("div");
      attr_dev(div, "class", "dots");
      add_location(div, file$4, 11, 28, 320);
    },
    m: function mount(target, anchor) {
      insert_dev(target, div, anchor);
    },
    d: function destroy(detaching) {
      if (detaching) detach_dev(div);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_if_block_1$1.name,
    type: "if",
    source: "(12:4) {#if !item.description}",
    ctx: ctx
  });
  return block;
}

// (15:2) {#if item.description}
function create_if_block$2(ctx) {
  var p;
  var t_value = /*item*/ctx[0].description + "";
  var t;
  var block = {
    c: function create() {
      p = element("p");
      t = text(t_value);
      attr_dev(p, "class", "desc");
      add_location(p, file$4, 15, 4, 466);
    },
    m: function mount(target, anchor) {
      insert_dev(target, p, anchor);
      append_dev(p, t);
    },
    p: function update(ctx, dirty) {
      if (dirty & /*item*/1 && t_value !== (t_value = /*item*/ctx[0].description + "")) set_data_dev(t, t_value);
    },
    d: function destroy(detaching) {
      if (detaching) detach_dev(p);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_if_block$2.name,
    type: "if",
    source: "(15:2) {#if item.description}",
    ctx: ctx
  });
  return block;
}
function create_fragment$4(ctx) {
  var t0;
  var div1;
  var div0;
  var p0;
  var t1_value = /*item*/ctx[0].name + "";
  var t1;
  var t2;
  var t3;
  var p1;
  var span;
  var t5;
  var t6_value = format_price( /*item*/ctx[0].price_in_cents) + "";
  var t6;
  var t7;
  var if_block0 = /*image_i*/ctx[2] != undefined && create_if_block_2$1(ctx);
  var if_block1 = ! /*item*/ctx[0].description && create_if_block_1$1(ctx);
  var if_block2 = /*item*/ctx[0].description && create_if_block$2(ctx);
  var block = {
    c: function create() {
      if (if_block0) if_block0.c();
      t0 = space();
      div1 = element("div");
      div0 = element("div");
      p0 = element("p");
      t1 = text(t1_value);
      t2 = space();
      if (if_block1) if_block1.c();
      t3 = space();
      p1 = element("p");
      span = element("span");
      span.textContent = "R$";
      t5 = space();
      t6 = text(t6_value);
      t7 = space();
      if (if_block2) if_block2.c();
      attr_dev(p0, "class", "name");
      add_location(p0, file$4, 10, 4, 258);
      add_location(span, file$4, 12, 22, 369);
      attr_dev(p1, "class", "price");
      add_location(p1, file$4, 12, 4, 351);
      attr_dev(div0, "class", "row jcsb");
      add_location(div0, file$4, 9, 2, 231);
      attr_dev(div1, "class", "item");
      add_location(div1, file$4, 8, 0, 210);
    },
    l: function claim(nodes) {
      throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    },
    m: function mount(target, anchor) {
      if (if_block0) if_block0.m(target, anchor);
      insert_dev(target, t0, anchor);
      insert_dev(target, div1, anchor);
      append_dev(div1, div0);
      append_dev(div0, p0);
      append_dev(p0, t1);
      append_dev(div0, t2);
      if (if_block1) if_block1.m(div0, null);
      append_dev(div0, t3);
      append_dev(div0, p1);
      append_dev(p1, span);
      append_dev(p1, t5);
      append_dev(p1, t6);
      append_dev(div1, t7);
      if (if_block2) if_block2.m(div1, null);
    },
    p: function update(ctx, _ref) {
      var _ref2 = _slicedToArray(_ref, 1),
        dirty = _ref2[0];
      if ( /*image_i*/ctx[2] != undefined) {
        if (if_block0) {
          if_block0.p(ctx, dirty);
        } else {
          if_block0 = create_if_block_2$1(ctx);
          if_block0.c();
          if_block0.m(t0.parentNode, t0);
        }
      } else if (if_block0) {
        if_block0.d(1);
        if_block0 = null;
      }
      if (dirty & /*item*/1 && t1_value !== (t1_value = /*item*/ctx[0].name + "")) set_data_dev(t1, t1_value);
      if (! /*item*/ctx[0].description) {
        if (if_block1) ; else {
          if_block1 = create_if_block_1$1(ctx);
          if_block1.c();
          if_block1.m(div0, t3);
        }
      } else if (if_block1) {
        if_block1.d(1);
        if_block1 = null;
      }
      if (dirty & /*item*/1 && t6_value !== (t6_value = format_price( /*item*/ctx[0].price_in_cents) + "")) set_data_dev(t6, t6_value);
      if ( /*item*/ctx[0].description) {
        if (if_block2) {
          if_block2.p(ctx, dirty);
        } else {
          if_block2 = create_if_block$2(ctx);
          if_block2.c();
          if_block2.m(div1, null);
        }
      } else if (if_block2) {
        if_block2.d(1);
        if_block2 = null;
      }
    },
    i: noop,
    o: noop,
    d: function destroy(detaching) {
      if (if_block0) if_block0.d(detaching);
      if (detaching) detach_dev(t0);
      if (detaching) detach_dev(div1);
      if (if_block1) if_block1.d();
      if (if_block2) if_block2.d();
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_fragment$4.name,
    type: "component",
    source: "",
    ctx: ctx
  });
  return block;
}
function instance$4($$self, $$props, $$invalidate) {
  var _images$plain_name;
  var _$$props$$$slots = $$props.$$slots,
    slots = _$$props$$$slots === void 0 ? {} : _$$props$$$slots;
    $$props.$$scope;
  validate_slots('Item', slots, []);
  var item = $$props.item,
    category = $$props.category,
    menu = $$props.menu;
  var image_i;
  var images = {
    'hamburgueres': [['h1', 'h2'], ['h3', 'h4'], ['h5', 'h6']]
  };
  var plain_name = minify_text(category.name);
  var image_offset = Math.ceil(category.items.length / (((_images$plain_name = images[plain_name]) === null || _images$plain_name === void 0 ? void 0 : _images$plain_name.length) + 1));
  var i = category.items.findIndex(function (i) {
    return i.id == item.id;
  });
  if (images[plain_name] && i % image_offset == 0 && i) image_i = i / image_offset - 1;
  $$self.$$.on_mount.push(function () {
    if (item === undefined && !('item' in $$props || $$self.$$.bound[$$self.$$.props['item']])) {
      console.warn("<Item> was created without expected prop 'item'");
    }
    if (category === undefined && !('category' in $$props || $$self.$$.bound[$$self.$$.props['category']])) {
      console.warn("<Item> was created without expected prop 'category'");
    }
    if (menu === undefined && !('menu' in $$props || $$self.$$.bound[$$self.$$.props['menu']])) {
      console.warn("<Item> was created without expected prop 'menu'");
    }
  });
  var writable_props = ['item', 'category', 'menu'];
  Object.keys($$props).forEach(function (key) {
    if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn("<Item> was created with unknown prop '".concat(key, "'"));
  });
  $$self.$$set = function ($$props) {
    if ('item' in $$props) $$invalidate(0, item = $$props.item);
    if ('category' in $$props) $$invalidate(5, category = $$props.category);
    if ('menu' in $$props) $$invalidate(1, menu = $$props.menu);
  };
  $$self.$capture_state = function () {
    return {
      minify_text: minify_text,
      format_price: format_price,
      item: item,
      category: category,
      menu: menu,
      image_i: image_i,
      images: images,
      plain_name: plain_name,
      image_offset: image_offset,
      i: i
    };
  };
  $$self.$inject_state = function ($$props) {
    if ('item' in $$props) $$invalidate(0, item = $$props.item);
    if ('category' in $$props) $$invalidate(5, category = $$props.category);
    if ('menu' in $$props) $$invalidate(1, menu = $$props.menu);
    if ('image_i' in $$props) $$invalidate(2, image_i = $$props.image_i);
  };
  if ($$props && "$$inject" in $$props) {
    $$self.$inject_state($$props.$$inject);
  }
  return [item, menu, image_i, images, plain_name, category];
}
var Item = /*#__PURE__*/function (_SvelteComponentDev) {
  function Item(options) {
    var _this;
    _classCallCheck(this, Item);
    _this = _callSuper(this, Item, [options]);
    init(_this, options, instance$4, create_fragment$4, safe_not_equal, {
      item: 0,
      category: 5,
      menu: 1
    });
    dispatch_dev("SvelteRegisterComponent", {
      component: _this,
      tagName: "Item",
      options: options,
      id: create_fragment$4.name
    });
    return _this;
  }
  _inherits(Item, _SvelteComponentDev);
  return _createClass(Item, [{
    key: "item",
    get: function get() {
      throw new Error("<Item>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    },
    set: function set(value) {
      throw new Error("<Item>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    }
  }, {
    key: "category",
    get: function get() {
      throw new Error("<Item>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    },
    set: function set(value) {
      throw new Error("<Item>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    }
  }, {
    key: "menu",
    get: function get() {
      throw new Error("<Item>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    },
    set: function set(value) {
      throw new Error("<Item>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    }
  }]);
}(SvelteComponentDev);

var file$3 = "web/routes/menus/adeildo-lanches/Category.svelte";
function get_each_context$1(ctx, list, i) {
  var child_ctx = ctx.slice();
  child_ctx[4] = list[i];
  return child_ctx;
}
function get_each_context_1(ctx, list, i) {
  var child_ctx = ctx.slice();
  child_ctx[7] = list[i];
  return child_ctx;
}

// (3:4) {#each images[plain_name] || [] as image}
function create_each_block_1(ctx) {
  var img;
  var img_src_value;
  var block = {
    c: function create() {
      img = element("img");
      attr_dev(img, "class", "img");
      if (!src_url_equal(img.src, img_src_value = "/assets/img/".concat( /*menu*/ctx[1].path, "/").concat( /*image*/ctx[7], ".png"))) attr_dev(img, "src", img_src_value);
      attr_dev(img, "alt", "");
      add_location(img, file$3, 3, 6, 82);
    },
    m: function mount(target, anchor) {
      insert_dev(target, img, anchor);
    },
    p: function update(ctx, dirty) {
      if (dirty & /*menu*/2 && !src_url_equal(img.src, img_src_value = "/assets/img/".concat( /*menu*/ctx[1].path, "/").concat( /*image*/ctx[7], ".png"))) {
        attr_dev(img, "src", img_src_value);
      }
    },
    d: function destroy(detaching) {
      if (detaching) detach_dev(img);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_each_block_1.name,
    type: "each",
    source: "(3:4) {#each images[plain_name] || [] as image}",
    ctx: ctx
  });
  return block;
}

// (10:2) {#each category.items as item}
function create_each_block$1(ctx) {
  var item;
  var current;
  item = new Item({
    props: {
      item: /*item*/ctx[4],
      category: /*category*/ctx[0],
      menu: /*menu*/ctx[1]
    },
    $$inline: true
  });
  var block = {
    c: function create() {
      create_component(item.$$.fragment);
    },
    m: function mount(target, anchor) {
      mount_component(item, target, anchor);
      current = true;
    },
    p: function update(ctx, dirty) {
      var item_changes = {};
      if (dirty & /*category*/1) item_changes.item = /*item*/ctx[4];
      if (dirty & /*category*/1) item_changes.category = /*category*/ctx[0];
      if (dirty & /*menu*/2) item_changes.menu = /*menu*/ctx[1];
      item.$set(item_changes);
    },
    i: function intro(local) {
      if (current) return;
      transition_in(item.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(item.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      destroy_component(item, detaching);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_each_block$1.name,
    type: "each",
    source: "(10:2) {#each category.items as item}",
    ctx: ctx
  });
  return block;
}
function create_fragment$3(ctx) {
  var main;
  var div;
  var t0;
  var h1;
  var t1_value = /*category*/ctx[0].name + "";
  var t1;
  var t2;
  var current;
  var each_value_1 = /*images*/ctx[2][/*plain_name*/ctx[3]] || [];
  validate_each_argument(each_value_1);
  var each_blocks_1 = [];
  for (var i = 0; i < each_value_1.length; i += 1) {
    each_blocks_1[i] = create_each_block_1(get_each_context_1(ctx, each_value_1, i));
  }
  var each_value = /*category*/ctx[0].items;
  validate_each_argument(each_value);
  var each_blocks = [];
  for (var _i = 0; _i < each_value.length; _i += 1) {
    each_blocks[_i] = create_each_block$1(get_each_context$1(ctx, each_value, _i));
  }
  var out = function out(i) {
    return transition_out(each_blocks[i], 1, 1, function () {
      each_blocks[i] = null;
    });
  };
  var block = {
    c: function create() {
      main = element("main");
      div = element("div");
      for (var _i2 = 0; _i2 < each_blocks_1.length; _i2 += 1) {
        each_blocks_1[_i2].c();
      }
      t0 = space();
      h1 = element("h1");
      t1 = text(t1_value);
      t2 = space();
      for (var _i3 = 0; _i3 < each_blocks.length; _i3 += 1) {
        each_blocks[_i3].c();
      }
      attr_dev(div, "class", "images");
      add_location(div, file$3, 1, 2, 9);
      add_location(h1, file$3, 7, 2, 177);
      add_location(main, file$3, 0, 0, 0);
    },
    l: function claim(nodes) {
      throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    },
    m: function mount(target, anchor) {
      insert_dev(target, main, anchor);
      append_dev(main, div);
      for (var _i4 = 0; _i4 < each_blocks_1.length; _i4 += 1) {
        if (each_blocks_1[_i4]) {
          each_blocks_1[_i4].m(div, null);
        }
      }
      append_dev(main, t0);
      append_dev(main, h1);
      append_dev(h1, t1);
      append_dev(main, t2);
      for (var _i5 = 0; _i5 < each_blocks.length; _i5 += 1) {
        if (each_blocks[_i5]) {
          each_blocks[_i5].m(main, null);
        }
      }
      current = true;
    },
    p: function update(ctx, _ref) {
      var _ref2 = _slicedToArray(_ref, 1),
        dirty = _ref2[0];
      if (dirty & /*menu, images, plain_name*/14) {
        each_value_1 = /*images*/ctx[2][/*plain_name*/ctx[3]] || [];
        validate_each_argument(each_value_1);
        var _i6;
        for (_i6 = 0; _i6 < each_value_1.length; _i6 += 1) {
          var child_ctx = get_each_context_1(ctx, each_value_1, _i6);
          if (each_blocks_1[_i6]) {
            each_blocks_1[_i6].p(child_ctx, dirty);
          } else {
            each_blocks_1[_i6] = create_each_block_1(child_ctx);
            each_blocks_1[_i6].c();
            each_blocks_1[_i6].m(div, null);
          }
        }
        for (; _i6 < each_blocks_1.length; _i6 += 1) {
          each_blocks_1[_i6].d(1);
        }
        each_blocks_1.length = each_value_1.length;
      }
      if ((!current || dirty & /*category*/1) && t1_value !== (t1_value = /*category*/ctx[0].name + "")) set_data_dev(t1, t1_value);
      if (dirty & /*category, menu*/3) {
        each_value = /*category*/ctx[0].items;
        validate_each_argument(each_value);
        var _i7;
        for (_i7 = 0; _i7 < each_value.length; _i7 += 1) {
          var _child_ctx = get_each_context$1(ctx, each_value, _i7);
          if (each_blocks[_i7]) {
            each_blocks[_i7].p(_child_ctx, dirty);
            transition_in(each_blocks[_i7], 1);
          } else {
            each_blocks[_i7] = create_each_block$1(_child_ctx);
            each_blocks[_i7].c();
            transition_in(each_blocks[_i7], 1);
            each_blocks[_i7].m(main, null);
          }
        }
        group_outros();
        for (_i7 = each_value.length; _i7 < each_blocks.length; _i7 += 1) {
          out(_i7);
        }
        check_outros();
      }
    },
    i: function intro(local) {
      if (current) return;
      for (var _i8 = 0; _i8 < each_value.length; _i8 += 1) {
        transition_in(each_blocks[_i8]);
      }
      current = true;
    },
    o: function outro(local) {
      each_blocks = each_blocks.filter(Boolean);
      for (var _i9 = 0; _i9 < each_blocks.length; _i9 += 1) {
        transition_out(each_blocks[_i9]);
      }
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching) detach_dev(main);
      destroy_each(each_blocks_1, detaching);
      destroy_each(each_blocks, detaching);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_fragment$3.name,
    type: "component",
    source: "",
    ctx: ctx
  });
  return block;
}
function instance$3($$self, $$props, $$invalidate) {
  var _$$props$$$slots = $$props.$$slots,
    slots = _$$props$$$slots === void 0 ? {} : _$$props$$$slots;
    $$props.$$scope;
  validate_slots('Category', slots, []);
  var category = $$props.category,
    menu = $$props.menu;
  var images = {
    'acrescimos': ['a1', 'a2'],
    'bebidas': ['b1', 'b2']
  };
  var plain_name = minify_text(category.name);
  $$self.$$.on_mount.push(function () {
    if (category === undefined && !('category' in $$props || $$self.$$.bound[$$self.$$.props['category']])) {
      console.warn("<Category> was created without expected prop 'category'");
    }
    if (menu === undefined && !('menu' in $$props || $$self.$$.bound[$$self.$$.props['menu']])) {
      console.warn("<Category> was created without expected prop 'menu'");
    }
  });
  var writable_props = ['category', 'menu'];
  Object.keys($$props).forEach(function (key) {
    if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn("<Category> was created with unknown prop '".concat(key, "'"));
  });
  $$self.$$set = function ($$props) {
    if ('category' in $$props) $$invalidate(0, category = $$props.category);
    if ('menu' in $$props) $$invalidate(1, menu = $$props.menu);
  };
  $$self.$capture_state = function () {
    return {
      Item: Item,
      minify_text: minify_text,
      category: category,
      menu: menu,
      images: images,
      plain_name: plain_name
    };
  };
  $$self.$inject_state = function ($$props) {
    if ('category' in $$props) $$invalidate(0, category = $$props.category);
    if ('menu' in $$props) $$invalidate(1, menu = $$props.menu);
  };
  if ($$props && "$$inject" in $$props) {
    $$self.$inject_state($$props.$$inject);
  }
  return [category, menu, images, plain_name];
}
var Category = /*#__PURE__*/function (_SvelteComponentDev) {
  function Category(options) {
    var _this;
    _classCallCheck(this, Category);
    _this = _callSuper(this, Category, [options]);
    init(_this, options, instance$3, create_fragment$3, safe_not_equal, {
      category: 0,
      menu: 1
    });
    dispatch_dev("SvelteRegisterComponent", {
      component: _this,
      tagName: "Category",
      options: options,
      id: create_fragment$3.name
    });
    return _this;
  }
  _inherits(Category, _SvelteComponentDev);
  return _createClass(Category, [{
    key: "category",
    get: function get() {
      throw new Error("<Category>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    },
    set: function set(value) {
      throw new Error("<Category>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    }
  }, {
    key: "menu",
    get: function get() {
      throw new Error("<Category>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    },
    set: function set(value) {
      throw new Error("<Category>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    }
  }]);
}(SvelteComponentDev);

var css_248z$2 = "@font-face{font-family:'Enriqueta';src:url('/assets/font/Enriqueta.ttf') format('truetype')}@font-face{font-family:'Sarabun';src:url('/assets/font/Sarabun.ttf') format('truetype')}.root.svelte-1abfqfl{--f-header:'Enriqueta', serif;--f-item:inherit;--f-currency:'Sarabun', sans-serif;--f-number:'Enriqueta', serif;--bg0:#f1e5cc !important;--bg1:#fff2d7 !important;--fg0:#652505;--fg1:#904710;--fg2:#090d0d}.background.svelte-1abfqfl{position:fixed;left:0;top:0;z-index:1;width:100%;height:100%;background-color:var(--bg0)}main.svelte-1abfqfl{max-width:500px;height:100%;margin:0 auto;background-color:var(--bg1);box-shadow:0 0 10px 3px #0000000f !important;overflow-y:scroll;text-transform:uppercase}footer.svelte-1abfqfl{margin:80px 0 0 0;line-height:1.3em;font-size:1.3em;font-weight:800;color:var(--fg0)}.banner.svelte-1abfqfl{width:100%}main.svelte-1abfqfl .images{display:flex;justify-content:space-evenly}main.svelte-1abfqfl .images.items-image{margin:50px 0}main.svelte-1abfqfl .images img{aspect-ratio:1;width:25%;border-radius:100%}main.svelte-1abfqfl p{margin:0}main.svelte-1abfqfl h1{margin:40px 0;text-align:center;color:var(--fg0);font-family:var(--f-header);font-weight:800;font-size:2.5em;letter-spacing:-2px}main.svelte-1abfqfl .item{margin:0 50px 30px 50px;font-size:1.4em;font-weight:800;font-family:var(--f-item);color:var(--f1)}main.svelte-1abfqfl .price{align-self:start;color:var(--fg2);text-wrap:nowrap;font-family:var(--f-currency)}main.svelte-1abfqfl .price span{font-family:var(--f-number)}main.svelte-1abfqfl .desc{max-width:70%;font-size:0.8em;font-weight:500;color:#343122}main.svelte-1abfqfl .dots{flex-grow:2;align-self:flex-end;margin-bottom:8px;border-bottom:dotted 4px}@media screen and (max-width: 500px){main.svelte-1abfqfl .item{margin:0 20px 30px 20px}}@media screen and (max-width: 450px){main.svelte-1abfqfl .item{font-size:1.2em}}@media screen and (max-width: 400px){main.svelte-1abfqfl .item{font-size:1.1em}}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIk1lbnUuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFdBQVcsdUJBQXVCLENBQUMsd0RBQXdELENBQUMsV0FBVyxxQkFBcUIsQ0FBQyxzREFBc0QsQ0FBQyxxQkFBcUIsNkJBQTZCLENBQUMsZ0JBQWdCLENBQUMsa0NBQWtDLENBQUMsNkJBQTZCLENBQUMsd0JBQXdCLENBQUMsd0JBQXdCLENBQUMsYUFBYSxDQUFDLGFBQWEsQ0FBQyxhQUFhLENBQUMsMkJBQTJCLGNBQWMsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxVQUFVLENBQUMsV0FBVyxDQUFDLDJCQUEyQixDQUFDLG9CQUFvQixlQUFlLENBQUMsV0FBVyxDQUFDLGFBQWEsQ0FBQywyQkFBMkIsQ0FBQyw0Q0FBNEMsQ0FBQyxpQkFBaUIsQ0FBQyx3QkFBd0IsQ0FBQyxzQkFBc0IsaUJBQWlCLENBQUMsaUJBQWlCLENBQUMsZUFBZSxDQUFDLGVBQWUsQ0FBQyxnQkFBZ0IsQ0FBQyx1QkFBdUIsVUFBVSxDQUFDLDRCQUE0QixZQUFZLENBQUMsNEJBQTRCLENBQUMsd0NBQXdDLGFBQWEsQ0FBQyxnQ0FBZ0MsY0FBYyxDQUFDLFNBQVMsQ0FBQyxrQkFBa0IsQ0FBQyxzQkFBc0IsUUFBUSxDQUFDLHVCQUF1QixhQUFhLENBQUMsaUJBQWlCLENBQUMsZ0JBQWdCLENBQUMsMkJBQTJCLENBQUMsZUFBZSxDQUFDLGVBQWUsQ0FBQyxtQkFBbUIsQ0FBQywwQkFBMEIsdUJBQXVCLENBQUMsZUFBZSxDQUFDLGVBQWUsQ0FBQyx5QkFBeUIsQ0FBQyxlQUFlLENBQUMsMkJBQTJCLGdCQUFnQixDQUFDLGdCQUFnQixDQUFDLGdCQUFnQixDQUFDLDZCQUE2QixDQUFDLGdDQUFnQywyQkFBMkIsQ0FBQywwQkFBMEIsYUFBYSxDQUFDLGVBQWUsQ0FBQyxlQUFlLENBQUMsYUFBYSxDQUFDLDBCQUEwQixXQUFXLENBQUMsbUJBQW1CLENBQUMsaUJBQWlCLENBQUMsd0JBQXdCLENBQUMscUNBQXFDLDBCQUEwQix1QkFBdUIsQ0FBQyxDQUFDLHFDQUFxQywwQkFBMEIsZUFBZSxDQUFDLENBQUMscUNBQXFDLDBCQUEwQixlQUFlLENBQUMiLCJmaWxlIjoiTWVudS5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAZm9udC1mYWNle2ZvbnQtZmFtaWx5OidFbnJpcXVldGEnO3NyYzp1cmwoJy9hc3NldHMvZm9udC9FbnJpcXVldGEudHRmJykgZm9ybWF0KCd0cnVldHlwZScpfUBmb250LWZhY2V7Zm9udC1mYW1pbHk6J1NhcmFidW4nO3NyYzp1cmwoJy9hc3NldHMvZm9udC9TYXJhYnVuLnR0ZicpIGZvcm1hdCgndHJ1ZXR5cGUnKX0ucm9vdC5zdmVsdGUtMWFiZnFmbHstLWYtaGVhZGVyOidFbnJpcXVldGEnLCBzZXJpZjstLWYtaXRlbTppbmhlcml0Oy0tZi1jdXJyZW5jeTonU2FyYWJ1bicsIHNhbnMtc2VyaWY7LS1mLW51bWJlcjonRW5yaXF1ZXRhJywgc2VyaWY7LS1iZzA6I2YxZTVjYyAhaW1wb3J0YW50Oy0tYmcxOiNmZmYyZDcgIWltcG9ydGFudDstLWZnMDojNjUyNTA1Oy0tZmcxOiM5MDQ3MTA7LS1mZzI6IzA5MGQwZH0uYmFja2dyb3VuZC5zdmVsdGUtMWFiZnFmbHtwb3NpdGlvbjpmaXhlZDtsZWZ0OjA7dG9wOjA7ei1pbmRleDoxO3dpZHRoOjEwMCU7aGVpZ2h0OjEwMCU7YmFja2dyb3VuZC1jb2xvcjp2YXIoLS1iZzApfW1haW4uc3ZlbHRlLTFhYmZxZmx7bWF4LXdpZHRoOjUwMHB4O2hlaWdodDoxMDAlO21hcmdpbjowIGF1dG87YmFja2dyb3VuZC1jb2xvcjp2YXIoLS1iZzEpO2JveC1zaGFkb3c6MCAwIDEwcHggM3B4ICMwMDAwMDAwZiAhaW1wb3J0YW50O292ZXJmbG93LXk6c2Nyb2xsO3RleHQtdHJhbnNmb3JtOnVwcGVyY2FzZX1mb290ZXIuc3ZlbHRlLTFhYmZxZmx7bWFyZ2luOjgwcHggMCAwIDA7bGluZS1oZWlnaHQ6MS4zZW07Zm9udC1zaXplOjEuM2VtO2ZvbnQtd2VpZ2h0OjgwMDtjb2xvcjp2YXIoLS1mZzApfS5iYW5uZXIuc3ZlbHRlLTFhYmZxZmx7d2lkdGg6MTAwJX1tYWluLnN2ZWx0ZS0xYWJmcWZsIC5pbWFnZXN7ZGlzcGxheTpmbGV4O2p1c3RpZnktY29udGVudDpzcGFjZS1ldmVubHl9bWFpbi5zdmVsdGUtMWFiZnFmbCAuaW1hZ2VzLml0ZW1zLWltYWdle21hcmdpbjo1MHB4IDB9bWFpbi5zdmVsdGUtMWFiZnFmbCAuaW1hZ2VzIGltZ3thc3BlY3QtcmF0aW86MTt3aWR0aDoyNSU7Ym9yZGVyLXJhZGl1czoxMDAlfW1haW4uc3ZlbHRlLTFhYmZxZmwgcHttYXJnaW46MH1tYWluLnN2ZWx0ZS0xYWJmcWZsIGgxe21hcmdpbjo0MHB4IDA7dGV4dC1hbGlnbjpjZW50ZXI7Y29sb3I6dmFyKC0tZmcwKTtmb250LWZhbWlseTp2YXIoLS1mLWhlYWRlcik7Zm9udC13ZWlnaHQ6ODAwO2ZvbnQtc2l6ZToyLjVlbTtsZXR0ZXItc3BhY2luZzotMnB4fW1haW4uc3ZlbHRlLTFhYmZxZmwgLml0ZW17bWFyZ2luOjAgNTBweCAzMHB4IDUwcHg7Zm9udC1zaXplOjEuNGVtO2ZvbnQtd2VpZ2h0OjgwMDtmb250LWZhbWlseTp2YXIoLS1mLWl0ZW0pO2NvbG9yOnZhcigtLWYxKX1tYWluLnN2ZWx0ZS0xYWJmcWZsIC5wcmljZXthbGlnbi1zZWxmOnN0YXJ0O2NvbG9yOnZhcigtLWZnMik7dGV4dC13cmFwOm5vd3JhcDtmb250LWZhbWlseTp2YXIoLS1mLWN1cnJlbmN5KX1tYWluLnN2ZWx0ZS0xYWJmcWZsIC5wcmljZSBzcGFue2ZvbnQtZmFtaWx5OnZhcigtLWYtbnVtYmVyKX1tYWluLnN2ZWx0ZS0xYWJmcWZsIC5kZXNje21heC13aWR0aDo3MCU7Zm9udC1zaXplOjAuOGVtO2ZvbnQtd2VpZ2h0OjUwMDtjb2xvcjojMzQzMTIyfW1haW4uc3ZlbHRlLTFhYmZxZmwgLmRvdHN7ZmxleC1ncm93OjI7YWxpZ24tc2VsZjpmbGV4LWVuZDttYXJnaW4tYm90dG9tOjhweDtib3JkZXItYm90dG9tOmRvdHRlZCA0cHh9QG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNTAwcHgpe21haW4uc3ZlbHRlLTFhYmZxZmwgLml0ZW17bWFyZ2luOjAgMjBweCAzMHB4IDIwcHh9fUBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQ1MHB4KXttYWluLnN2ZWx0ZS0xYWJmcWZsIC5pdGVte2ZvbnQtc2l6ZToxLjJlbX19QG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDAwcHgpe21haW4uc3ZlbHRlLTFhYmZxZmwgLml0ZW17Zm9udC1zaXplOjEuMWVtfX0iXX0= */";
styleInject(css_248z$2);

var file$2 = "web/routes/menus/adeildo-lanches/Menu.svelte";
function get_each_context(ctx, list, i) {
  var child_ctx = ctx.slice();
  child_ctx[1] = list[i];
  return child_ctx;
}

// (6:6) {#each menu.categories[0].subcategories as category}
function create_each_block(ctx) {
  var category;
  var current;
  category = new Category({
    props: {
      category: /*category*/ctx[1],
      menu: /*menu*/ctx[0]
    },
    $$inline: true
  });
  var block = {
    c: function create() {
      create_component(category.$$.fragment);
    },
    m: function mount(target, anchor) {
      mount_component(category, target, anchor);
      current = true;
    },
    p: function update(ctx, dirty) {
      var category_changes = {};
      if (dirty & /*menu*/1) category_changes.category = /*category*/ctx[1];
      if (dirty & /*menu*/1) category_changes.menu = /*menu*/ctx[0];
      category.$set(category_changes);
    },
    i: function intro(local) {
      if (current) return;
      transition_in(category.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(category.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      destroy_component(category, detaching);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_each_block.name,
    type: "each",
    source: "(6:6) {#each menu.categories[0].subcategories as category}",
    ctx: ctx
  });
  return block;
}
function create_fragment$2(ctx) {
  var div1;
  var div0;
  var main;
  var img;
  var img_src_value;
  var t0;
  var t1;
  var footer;
  var p;
  var t2_value = /*menu*/ctx[0].whatsapp + "";
  var t2;
  var t3;
  var br0;
  var t4;
  var br1;
  var t5;
  var t6;
  var br2;
  var t7;
  var br3;
  var t8;
  var br4;
  var t9;
  var br5;
  var current;
  var each_value = /*menu*/ctx[0].categories[0].subcategories;
  validate_each_argument(each_value);
  var each_blocks = [];
  for (var i = 0; i < each_value.length; i += 1) {
    each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
  }
  var out = function out(i) {
    return transition_out(each_blocks[i], 1, 1, function () {
      each_blocks[i] = null;
    });
  };
  var block = {
    c: function create() {
      div1 = element("div");
      div0 = element("div");
      main = element("main");
      img = element("img");
      t0 = space();
      for (var _i = 0; _i < each_blocks.length; _i += 1) {
        each_blocks[_i].c();
      }
      t1 = space();
      footer = element("footer");
      p = element("p");
      t2 = text(t2_value);
      t3 = space();
      br0 = element("br");
      t4 = text("\n          Faça seu pedido, ");
      br1 = element("br");
      t5 = text("\n          atendemos todos os dias!");
      t6 = space();
      br2 = element("br");
      t7 = space();
      br3 = element("br");
      t8 = space();
      br4 = element("br");
      t9 = space();
      br5 = element("br");
      attr_dev(img, "class", "banner svelte-1abfqfl");
      if (!src_url_equal(img.src, img_src_value = "/assets/img/".concat( /*menu*/ctx[0].path, "/banner.png"))) attr_dev(img, "src", img_src_value);
      attr_dev(img, "alt", "banner");
      add_location(img, file$2, 3, 6, 63);
      add_location(br0, file$2, 11, 26, 322);
      add_location(br1, file$2, 12, 27, 354);
      attr_dev(p, "class", "tac");
      add_location(p, file$2, 10, 8, 280);
      attr_dev(footer, "class", "svelte-1abfqfl");
      add_location(footer, file$2, 9, 6, 263);
      add_location(br2, file$2, 16, 6, 429);
      add_location(br3, file$2, 16, 11, 434);
      add_location(br4, file$2, 16, 16, 439);
      add_location(br5, file$2, 16, 21, 444);
      attr_dev(main, "class", "svelte-1abfqfl");
      add_location(main, file$2, 2, 4, 50);
      attr_dev(div0, "class", "background svelte-1abfqfl");
      add_location(div0, file$2, 1, 2, 21);
      attr_dev(div1, "class", "root svelte-1abfqfl");
      add_location(div1, file$2, 0, 0, 0);
    },
    l: function claim(nodes) {
      throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    },
    m: function mount(target, anchor) {
      insert_dev(target, div1, anchor);
      append_dev(div1, div0);
      append_dev(div0, main);
      append_dev(main, img);
      append_dev(main, t0);
      for (var _i2 = 0; _i2 < each_blocks.length; _i2 += 1) {
        if (each_blocks[_i2]) {
          each_blocks[_i2].m(main, null);
        }
      }
      append_dev(main, t1);
      append_dev(main, footer);
      append_dev(footer, p);
      append_dev(p, t2);
      append_dev(p, t3);
      append_dev(p, br0);
      append_dev(p, t4);
      append_dev(p, br1);
      append_dev(p, t5);
      append_dev(main, t6);
      append_dev(main, br2);
      append_dev(main, t7);
      append_dev(main, br3);
      append_dev(main, t8);
      append_dev(main, br4);
      append_dev(main, t9);
      append_dev(main, br5);
      current = true;
    },
    p: function update(ctx, _ref) {
      var _ref2 = _slicedToArray(_ref, 1),
        dirty = _ref2[0];
      if (!current || dirty & /*menu*/1 && !src_url_equal(img.src, img_src_value = "/assets/img/".concat( /*menu*/ctx[0].path, "/banner.png"))) {
        attr_dev(img, "src", img_src_value);
      }
      if (dirty & /*menu*/1) {
        each_value = /*menu*/ctx[0].categories[0].subcategories;
        validate_each_argument(each_value);
        var _i3;
        for (_i3 = 0; _i3 < each_value.length; _i3 += 1) {
          var child_ctx = get_each_context(ctx, each_value, _i3);
          if (each_blocks[_i3]) {
            each_blocks[_i3].p(child_ctx, dirty);
            transition_in(each_blocks[_i3], 1);
          } else {
            each_blocks[_i3] = create_each_block(child_ctx);
            each_blocks[_i3].c();
            transition_in(each_blocks[_i3], 1);
            each_blocks[_i3].m(main, t1);
          }
        }
        group_outros();
        for (_i3 = each_value.length; _i3 < each_blocks.length; _i3 += 1) {
          out(_i3);
        }
        check_outros();
      }
      if ((!current || dirty & /*menu*/1) && t2_value !== (t2_value = /*menu*/ctx[0].whatsapp + "")) set_data_dev(t2, t2_value);
    },
    i: function intro(local) {
      if (current) return;
      for (var _i4 = 0; _i4 < each_value.length; _i4 += 1) {
        transition_in(each_blocks[_i4]);
      }
      current = true;
    },
    o: function outro(local) {
      each_blocks = each_blocks.filter(Boolean);
      for (var _i5 = 0; _i5 < each_blocks.length; _i5 += 1) {
        transition_out(each_blocks[_i5]);
      }
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching) detach_dev(div1);
      destroy_each(each_blocks, detaching);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_fragment$2.name,
    type: "component",
    source: "",
    ctx: ctx
  });
  return block;
}
function instance$2($$self, $$props, $$invalidate) {
  var _$$props$$$slots = $$props.$$slots,
    slots = _$$props$$$slots === void 0 ? {} : _$$props$$$slots;
    $$props.$$scope;
  validate_slots('Menu', slots, []);
  var menu = $$props.menu;
  $$self.$$.on_mount.push(function () {
    if (menu === undefined && !('menu' in $$props || $$self.$$.bound[$$self.$$.props['menu']])) {
      console.warn("<Menu> was created without expected prop 'menu'");
    }
  });
  var writable_props = ['menu'];
  Object.keys($$props).forEach(function (key) {
    if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn("<Menu> was created with unknown prop '".concat(key, "'"));
  });
  $$self.$$set = function ($$props) {
    if ('menu' in $$props) $$invalidate(0, menu = $$props.menu);
  };
  $$self.$capture_state = function () {
    return {
      Category: Category,
      menu: menu
    };
  };
  $$self.$inject_state = function ($$props) {
    if ('menu' in $$props) $$invalidate(0, menu = $$props.menu);
  };
  if ($$props && "$$inject" in $$props) {
    $$self.$inject_state($$props.$$inject);
  }
  return [menu];
}
var Menu$1 = /*#__PURE__*/function (_SvelteComponentDev) {
  function Menu(options) {
    var _this;
    _classCallCheck(this, Menu);
    _this = _callSuper(this, Menu, [options]);
    init(_this, options, instance$2, create_fragment$2, safe_not_equal, {
      menu: 0
    });
    dispatch_dev("SvelteRegisterComponent", {
      component: _this,
      tagName: "Menu",
      options: options,
      id: create_fragment$2.name
    });
    return _this;
  }
  _inherits(Menu, _SvelteComponentDev);
  return _createClass(Menu, [{
    key: "menu",
    get: function get() {
      throw new Error("<Menu>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    },
    set: function set(value) {
      throw new Error("<Menu>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    }
  }]);
}(SvelteComponentDev);

var css_248z$1 = "p.svelte-vtpfje{margin-top:50px;text-align:center;font-size:2em}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIk1lbnUuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGdCQUFnQixlQUFlLENBQUMsaUJBQWlCLENBQUMsYUFBYSIsImZpbGUiOiJNZW51LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInAuc3ZlbHRlLXZ0cGZqZXttYXJnaW4tdG9wOjUwcHg7dGV4dC1hbGlnbjpjZW50ZXI7Zm9udC1zaXplOjJlbX0iXX0= */";
styleInject(css_248z$1);

var file$1 = "web/routes/Menu.svelte";

// (2:0) {:else}
function create_else_block$1(ctx) {
  var p;
  var t;
  var block = {
    c: function create() {
      p = element("p");
      t = text( /*message*/ctx[2]);
      attr_dev(p, "class", "svelte-vtpfje");
      add_location(p, file$1, 1, 16, 77);
    },
    m: function mount(target, anchor) {
      insert_dev(target, p, anchor);
      append_dev(p, t);
    },
    p: function update(ctx, dirty) {
      if (dirty & /*message*/4) set_data_dev(t, /*message*/ctx[2]);
    },
    i: noop,
    o: noop,
    d: function destroy(detaching) {
      if (detaching) detach_dev(p);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_else_block$1.name,
    type: "else",
    source: "(2:0) {:else}",
    ctx: ctx
  });
  return block;
}

// (1:0) {#if component}
function create_if_block$1(ctx) {
  var switch_instance;
  var switch_instance_anchor;
  var current;
  var switch_value = /*component*/ctx[0];
  function switch_props(ctx) {
    return {
      props: {
        menu: /*menu*/ctx[1]
      },
      $$inline: true
    };
  }
  if (switch_value) {
    switch_instance = construct_svelte_component_dev(switch_value, switch_props(ctx));
  }
  var block = {
    c: function create() {
      if (switch_instance) create_component(switch_instance.$$.fragment);
      switch_instance_anchor = empty();
    },
    m: function mount(target, anchor) {
      if (switch_instance) mount_component(switch_instance, target, anchor);
      insert_dev(target, switch_instance_anchor, anchor);
      current = true;
    },
    p: function update(ctx, dirty) {
      var switch_instance_changes = {};
      if (dirty & /*menu*/2) switch_instance_changes.menu = /*menu*/ctx[1];
      if (dirty & /*component*/1 && switch_value !== (switch_value = /*component*/ctx[0])) {
        if (switch_instance) {
          group_outros();
          var old_component = switch_instance;
          transition_out(old_component.$$.fragment, 1, 0, function () {
            destroy_component(old_component, 1);
          });
          check_outros();
        }
        if (switch_value) {
          switch_instance = construct_svelte_component_dev(switch_value, switch_props(ctx));
          create_component(switch_instance.$$.fragment);
          transition_in(switch_instance.$$.fragment, 1);
          mount_component(switch_instance, switch_instance_anchor.parentNode, switch_instance_anchor);
        } else {
          switch_instance = null;
        }
      } else if (switch_value) {
        switch_instance.$set(switch_instance_changes);
      }
    },
    i: function intro(local) {
      if (current) return;
      if (switch_instance) transition_in(switch_instance.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      if (switch_instance) transition_out(switch_instance.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      if (detaching) detach_dev(switch_instance_anchor);
      if (switch_instance) destroy_component(switch_instance, detaching);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_if_block$1.name,
    type: "if",
    source: "(1:0) {#if component}",
    ctx: ctx
  });
  return block;
}
function create_fragment$1(ctx) {
  var current_block_type_index;
  var if_block;
  var if_block_anchor;
  var current;
  var if_block_creators = [create_if_block$1, create_else_block$1];
  var if_blocks = [];
  function select_block_type(ctx, dirty) {
    if ( /*component*/ctx[0]) return 0;
    return 1;
  }
  current_block_type_index = select_block_type(ctx);
  if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
  var block = {
    c: function create() {
      if_block.c();
      if_block_anchor = empty();
    },
    l: function claim(nodes) {
      throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    },
    m: function mount(target, anchor) {
      if_blocks[current_block_type_index].m(target, anchor);
      insert_dev(target, if_block_anchor, anchor);
      current = true;
    },
    p: function update(ctx, _ref) {
      var _ref2 = _slicedToArray(_ref, 1),
        dirty = _ref2[0];
      var previous_block_index = current_block_type_index;
      current_block_type_index = select_block_type(ctx);
      if (current_block_type_index === previous_block_index) {
        if_blocks[current_block_type_index].p(ctx, dirty);
      } else {
        group_outros();
        transition_out(if_blocks[previous_block_index], 1, 1, function () {
          if_blocks[previous_block_index] = null;
        });
        check_outros();
        if_block = if_blocks[current_block_type_index];
        if (!if_block) {
          if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
          if_block.c();
        } else {
          if_block.p(ctx, dirty);
        }
        transition_in(if_block, 1);
        if_block.m(if_block_anchor.parentNode, if_block_anchor);
      }
    },
    i: function intro(local) {
      if (current) return;
      transition_in(if_block);
      current = true;
    },
    o: function outro(local) {
      transition_out(if_block);
      current = false;
    },
    d: function destroy(detaching) {
      if_blocks[current_block_type_index].d(detaching);
      if (detaching) detach_dev(if_block_anchor);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_fragment$1.name,
    type: "component",
    source: "",
    ctx: ctx
  });
  return block;
}
function instance$1($$self, $$props, $$invalidate) {
  var _$$props$$$slots = $$props.$$slots,
    slots = _$$props$$$slots === void 0 ? {} : _$$props$$$slots;
    $$props.$$scope;
  validate_slots('Menu', slots, []);
  var component,
    menu,
    message = 'Carregando cardápio...';
  onMount( /*#__PURE__*/function () {
    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(_) {
      var components, path, _yield$api, res, data;
      return _regeneratorRuntime().wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            components = {
              'adeildo-lanches': Menu$1
            };
            path = window.location.pathname.split('/').pop();
            _context.next = 4;
            return api("menu-by-path/".concat(path));
          case 4:
            _yield$api = _context.sent;
            res = _yield$api.res;
            data = _yield$api.data;
            $$invalidate(0, component = components[path]);
            if (!(!res.ok || !component)) {
              _context.next = 10;
              break;
            }
            return _context.abrupt("return", $$invalidate(2, message = 'Cardápio não encontrado'));
          case 10:
            $$invalidate(1, menu = data.menu);
            document.title = menu.name;
          case 12:
          case "end":
            return _context.stop();
        }
      }, _callee);
    }));
    return function (_x) {
      return _ref3.apply(this, arguments);
    };
  }());
  var writable_props = [];
  Object.keys($$props).forEach(function (key) {
    if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn("<Menu> was created with unknown prop '".concat(key, "'"));
  });
  $$self.$capture_state = function () {
    return {
      adeildo_lanches: Menu$1,
      onMount: onMount,
      api: api,
      component: component,
      menu: menu,
      message: message
    };
  };
  $$self.$inject_state = function ($$props) {
    if ('component' in $$props) $$invalidate(0, component = $$props.component);
    if ('menu' in $$props) $$invalidate(1, menu = $$props.menu);
    if ('message' in $$props) $$invalidate(2, message = $$props.message);
  };
  if ($$props && "$$inject" in $$props) {
    $$self.$inject_state($$props.$$inject);
  }
  return [component, menu, message];
}
var Menu = /*#__PURE__*/function (_SvelteComponentDev) {
  function Menu(options) {
    var _this;
    _classCallCheck(this, Menu);
    _this = _callSuper(this, Menu, [options]);
    init(_this, options, instance$1, create_fragment$1, safe_not_equal, {});
    dispatch_dev("SvelteRegisterComponent", {
      component: _this,
      tagName: "Menu",
      options: options,
      id: create_fragment$1.name
    });
    return _this;
  }
  _inherits(Menu, _SvelteComponentDev);
  return _createClass(Menu);
}(SvelteComponentDev);

var css_248z = "main.svelte-t87hng{padding:40px;margin:20px;background:var(--bg0);border-radius:10px;overflow-y:scroll}@media screen and (max-width: 768px){main.svelte-t87hng{padding:1em;margin:20px 0;border-radius:0;overflow-x:hidden;font-size:0.9em}}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkFwcC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsbUJBQW1CLFlBQVksQ0FBQyxXQUFXLENBQUMscUJBQXFCLENBQUMsa0JBQWtCLENBQUMsaUJBQWlCLENBQUMscUNBQXFDLG1CQUFtQixXQUFXLENBQUMsYUFBYSxDQUFDLGVBQWUsQ0FBQyxpQkFBaUIsQ0FBQyxlQUFlLENBQUMiLCJmaWxlIjoiQXBwLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIm1haW4uc3ZlbHRlLXQ4N2huZ3twYWRkaW5nOjQwcHg7bWFyZ2luOjIwcHg7YmFja2dyb3VuZDp2YXIoLS1iZzApO2JvcmRlci1yYWRpdXM6MTBweDtvdmVyZmxvdy15OnNjcm9sbH1AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCl7bWFpbi5zdmVsdGUtdDg3aG5ne3BhZGRpbmc6MWVtO21hcmdpbjoyMHB4IDA7Ym9yZGVyLXJhZGl1czowO292ZXJmbG93LXg6aGlkZGVuO2ZvbnQtc2l6ZTowLjllbX19Il19 */";
styleInject(css_248z);

var file = "web/App.svelte";

// (3:0) {:else}
function create_else_block(ctx) {
  var topbar;
  var t;
  var main;
  var current_block_type_index;
  var if_block;
  var current;
  topbar = new TopBar({
    $$inline: true
  });
  var if_block_creators = [create_if_block_1, create_if_block_2, create_if_block_3, create_if_block_4, create_if_block_5];
  var if_blocks = [];
  function select_block_type_1(ctx, dirty) {
    if ( /*loading*/ctx[1]) return 0;
    if ( /*$menu*/ctx[3] && /*$curr_page*/ctx[0] == 'menu') return 1;
    if ( /*$menu*/ctx[3] && /*$curr_page*/ctx[0] == 'items') return 2;
    if ( /*$curr_page*/ctx[0] == 'login') return 3;
    if ( /*$curr_page*/ctx[0] == 'admin') return 4;
    return -1;
  }
  if (~(current_block_type_index = select_block_type_1(ctx))) {
    if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
  }
  var block = {
    c: function create() {
      create_component(topbar.$$.fragment);
      t = space();
      main = element("main");
      if (if_block) if_block.c();
      attr_dev(main, "class", "svelte-t87hng");
      add_location(main, file, 5, 2, 52);
    },
    m: function mount(target, anchor) {
      mount_component(topbar, target, anchor);
      insert_dev(target, t, anchor);
      insert_dev(target, main, anchor);
      if (~current_block_type_index) {
        if_blocks[current_block_type_index].m(main, null);
      }
      current = true;
    },
    p: function update(ctx, dirty) {
      var previous_block_index = current_block_type_index;
      current_block_type_index = select_block_type_1(ctx);
      if (current_block_type_index !== previous_block_index) {
        if (if_block) {
          group_outros();
          transition_out(if_blocks[previous_block_index], 1, 1, function () {
            if_blocks[previous_block_index] = null;
          });
          check_outros();
        }
        if (~current_block_type_index) {
          if_block = if_blocks[current_block_type_index];
          if (!if_block) {
            if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
            if_block.c();
          }
          transition_in(if_block, 1);
          if_block.m(main, null);
        } else {
          if_block = null;
        }
      }
    },
    i: function intro(local) {
      if (current) return;
      transition_in(topbar.$$.fragment, local);
      transition_in(if_block);
      current = true;
    },
    o: function outro(local) {
      transition_out(topbar.$$.fragment, local);
      transition_out(if_block);
      current = false;
    },
    d: function destroy(detaching) {
      destroy_component(topbar, detaching);
      if (detaching) detach_dev(t);
      if (detaching) detach_dev(main);
      if (~current_block_type_index) {
        if_blocks[current_block_type_index].d();
      }
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_else_block.name,
    type: "else",
    source: "(3:0) {:else}",
    ctx: ctx
  });
  return block;
}

// (1:0) {#if menu_route}
function create_if_block(ctx) {
  var menu_1;
  var current;
  menu_1 = new Menu({
    $$inline: true
  });
  var block = {
    c: function create() {
      create_component(menu_1.$$.fragment);
    },
    m: function mount(target, anchor) {
      mount_component(menu_1, target, anchor);
      current = true;
    },
    p: noop,
    i: function intro(local) {
      if (current) return;
      transition_in(menu_1.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(menu_1.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      destroy_component(menu_1, detaching);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_if_block.name,
    type: "if",
    source: "(1:0) {#if menu_route}",
    ctx: ctx
  });
  return block;
}

// (13:47) 
function create_if_block_5(ctx) {
  var adminpanel;
  var current;
  adminpanel = new AdminPanel({
    $$inline: true
  });
  var block = {
    c: function create() {
      create_component(adminpanel.$$.fragment);
    },
    m: function mount(target, anchor) {
      mount_component(adminpanel, target, anchor);
      current = true;
    },
    i: function intro(local) {
      if (current) return;
      transition_in(adminpanel.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(adminpanel.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      destroy_component(adminpanel, detaching);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_if_block_5.name,
    type: "if",
    source: "(13:47) ",
    ctx: ctx
  });
  return block;
}

// (12:47) 
function create_if_block_4(ctx) {
  var login;
  var current;
  login = new Login({
    $$inline: true
  });
  var block = {
    c: function create() {
      create_component(login.$$.fragment);
    },
    m: function mount(target, anchor) {
      mount_component(login, target, anchor);
      current = true;
    },
    i: function intro(local) {
      if (current) return;
      transition_in(login.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(login.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      destroy_component(login, detaching);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_if_block_4.name,
    type: "if",
    source: "(12:47) ",
    ctx: ctx
  });
  return block;
}

// (11:47) 
function create_if_block_3(ctx) {
  var itemsedit;
  var current;
  itemsedit = new ItemsEdit({
    $$inline: true
  });
  var block = {
    c: function create() {
      create_component(itemsedit.$$.fragment);
    },
    m: function mount(target, anchor) {
      mount_component(itemsedit, target, anchor);
      current = true;
    },
    i: function intro(local) {
      if (current) return;
      transition_in(itemsedit.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(itemsedit.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      destroy_component(itemsedit, detaching);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_if_block_3.name,
    type: "if",
    source: "(11:47) ",
    ctx: ctx
  });
  return block;
}

// (10:6) {#if      $menu && $curr_page == 'menu'}
function create_if_block_2(ctx) {
  var menuedit;
  var current;
  menuedit = new MenuEdit({
    $$inline: true
  });
  var block = {
    c: function create() {
      create_component(menuedit.$$.fragment);
    },
    m: function mount(target, anchor) {
      mount_component(menuedit, target, anchor);
      current = true;
    },
    i: function intro(local) {
      if (current) return;
      transition_in(menuedit.$$.fragment, local);
      current = true;
    },
    o: function outro(local) {
      transition_out(menuedit.$$.fragment, local);
      current = false;
    },
    d: function destroy(detaching) {
      destroy_component(menuedit, detaching);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_if_block_2.name,
    type: "if",
    source: "(10:6) {#if      $menu && $curr_page == 'menu'}",
    ctx: ctx
  });
  return block;
}

// (7:4) {#if loading}
function create_if_block_1(ctx) {
  var t;
  var block = {
    c: function create() {
      t = text("Carregando...");
    },
    m: function mount(target, anchor) {
      insert_dev(target, t, anchor);
    },
    i: noop,
    o: noop,
    d: function destroy(detaching) {
      if (detaching) detach_dev(t);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_if_block_1.name,
    type: "if",
    source: "(7:4) {#if loading}",
    ctx: ctx
  });
  return block;
}
function create_fragment(ctx) {
  var current_block_type_index;
  var if_block;
  var if_block_anchor;
  var current;
  var if_block_creators = [create_if_block, create_else_block];
  var if_blocks = [];
  function select_block_type(ctx, dirty) {
    if ( /*menu_route*/ctx[2]) return 0;
    return 1;
  }
  current_block_type_index = select_block_type(ctx);
  if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
  var block = {
    c: function create() {
      if_block.c();
      if_block_anchor = empty();
    },
    l: function claim(nodes) {
      throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    },
    m: function mount(target, anchor) {
      if_blocks[current_block_type_index].m(target, anchor);
      insert_dev(target, if_block_anchor, anchor);
      current = true;
    },
    p: function update(ctx, _ref) {
      var _ref2 = _slicedToArray(_ref, 1),
        dirty = _ref2[0];
      var previous_block_index = current_block_type_index;
      current_block_type_index = select_block_type(ctx);
      if (current_block_type_index === previous_block_index) {
        if_blocks[current_block_type_index].p(ctx, dirty);
      } else {
        group_outros();
        transition_out(if_blocks[previous_block_index], 1, 1, function () {
          if_blocks[previous_block_index] = null;
        });
        check_outros();
        if_block = if_blocks[current_block_type_index];
        if (!if_block) {
          if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
          if_block.c();
        } else {
          if_block.p(ctx, dirty);
        }
        transition_in(if_block, 1);
        if_block.m(if_block_anchor.parentNode, if_block_anchor);
      }
    },
    i: function intro(local) {
      if (current) return;
      transition_in(if_block);
      current = true;
    },
    o: function outro(local) {
      transition_out(if_block);
      current = false;
    },
    d: function destroy(detaching) {
      if_blocks[current_block_type_index].d(detaching);
      if (detaching) detach_dev(if_block_anchor);
    }
  };
  dispatch_dev("SvelteRegisterBlock", {
    block: block,
    id: create_fragment.name,
    type: "component",
    source: "",
    ctx: ctx
  });
  return block;
}
function instance($$self, $$props, $$invalidate) {
  var $curr_page;
  var $session_id;
  var $menu;
  validate_store(curr_page, 'curr_page');
  component_subscribe($$self, curr_page, function ($$value) {
    return $$invalidate(0, $curr_page = $$value);
  });
  validate_store(session_id, 'session_id');
  component_subscribe($$self, session_id, function ($$value) {
    return $$invalidate(4, $session_id = $$value);
  });
  validate_store(menu, 'menu');
  component_subscribe($$self, menu, function ($$value) {
    return $$invalidate(3, $menu = $$value);
  });
  var _$$props$$$slots = $$props.$$slots,
    slots = _$$props$$$slots === void 0 ? {} : _$$props$$$slots;
    $$props.$$scope;
  validate_slots('App', slots, []);
  var loading, menu_route;
  onMount( /*#__PURE__*/function () {
    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(_) {
      var _session_id, _yield$api, res, data;
      return _regeneratorRuntime().wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            if (!window.location.pathname.startsWith('/m/')) {
              _context.next = 2;
              break;
            }
            return _context.abrupt("return", $$invalidate(2, menu_route = true));
          case 2:
            $$invalidate(1, loading = true);
            _session_id = localStorage.getItem('session_id');
            if (_session_id) {
              _context.next = 6;
              break;
            }
            return _context.abrupt("return", $$invalidate(1, loading = false));
          case 6:
            _context.next = 8;
            return api("menu-from-session/".concat(_session_id));
          case 8:
            _yield$api = _context.sent;
            res = _yield$api.res;
            data = _yield$api.data;
            $$invalidate(1, loading = false);
            if (res.ok) {
              _context.next = 14;
              break;
            }
            return _context.abrupt("return");
          case 14:
            session_id.set(_session_id);
            menu.set(data.menu);
          case 16:
          case "end":
            return _context.stop();
        }
      }, _callee);
    }));
    return function (_x) {
      return _ref3.apply(this, arguments);
    };
  }());
  var writable_props = [];
  Object.keys($$props).forEach(function (key) {
    if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn("<App> was created with unknown prop '".concat(key, "'"));
  });
  $$self.$capture_state = function () {
    return {
      AdminPanel: AdminPanel,
      ItemsEdit: ItemsEdit,
      MenuEdit: MenuEdit,
      TopBar: TopBar,
      Login: Login,
      Menu: Menu,
      session_id: session_id,
      curr_page: curr_page,
      menu: menu,
      api: api,
      onMount: onMount,
      loading: loading,
      menu_route: menu_route,
      $curr_page: $curr_page,
      $session_id: $session_id,
      $menu: $menu
    };
  };
  $$self.$inject_state = function ($$props) {
    if ('loading' in $$props) $$invalidate(1, loading = $$props.loading);
    if ('menu_route' in $$props) $$invalidate(2, menu_route = $$props.menu_route);
  };
  if ($$props && "$$inject" in $$props) {
    $$self.$inject_state($$props.$$inject);
  }
  $$self.$$.update = function () {
    if ($$self.$$.dirty & /*$session_id, $curr_page*/17) {
      {
        if (!$session_id && $curr_page != 'admin') curr_page.set('login');else if ($curr_page == 'login' || !$curr_page) curr_page.set('items');
      }
    }
  };
  return [$curr_page, loading, menu_route, $menu, $session_id];
}
var App = /*#__PURE__*/function (_SvelteComponentDev) {
  function App(options) {
    var _this;
    _classCallCheck(this, App);
    _this = _callSuper(this, App, [options]);
    init(_this, options, instance, create_fragment, safe_not_equal, {});
    dispatch_dev("SvelteRegisterComponent", {
      component: _this,
      tagName: "App",
      options: options,
      id: create_fragment.name
    });
    return _this;
  }
  _inherits(App, _SvelteComponentDev);
  return _createClass(App);
}(SvelteComponentDev);

var main = new App({
  target: document.body
});

export { main as default };
//# sourceMappingURL=main.js.map
